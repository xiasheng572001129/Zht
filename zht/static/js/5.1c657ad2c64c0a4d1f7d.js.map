{"version":3,"sources":["webpack:///src/pages/Setup/channel/insurance.vue","webpack:///./src/pages/Setup/channel/insurance.vue?49f2","webpack:///./src/pages/Setup/channel/insurance.vue","webpack:///./node_modules/core-js/library/modules/es6.object.keys.js","webpack:///./node_modules/babel-runtime/core-js/object/keys.js","webpack:///./node_modules/core-js/library/fn/object/keys.js","webpack:///./src/pages/Setup/channel/insurance.vue?26db","webpack:///./node_modules/core-js/library/modules/_object-sap.js","webpack:///./src/pages/Setup/channel/insurance.vue?24f4"],"names":["insurance","data","list","token","window","sessionStorage","getItem","page","pageCount","authList","uploadUrl","this","baseURL","threeAuthList","addVisible","loading","listQuery","company","type_channel","type","provinceID","state","provinceList","isIndeterminate","checkAll","rules","required","message","trigger","cityList","cityVisible","cityIsIndeterminate","cityCheckAll","cityChecked","cityID","provinceIndex","currentCity","computed","isAllChecked","provinceLength","length","provinceCheckedLength","cityCheckedLength","city","forEach","item","v","push","methods","paging","e","init","_this","asyncToGenerator_default","regenerator_default","a","mark","_callee","_ref","_ref2","getAreaList","wrap","_context","prev","next","promise_default","all","getList","getArea","sent","slicedToArray_default","rows","stop","_this2","_callee2","_context2","$axios","post","abrupt","openAdd","checked","defaultData","_this3","_callee3","_context3","areaWhetherChecked","_ref3","_this4","_callee5","resolve","reject","_context5","Object","utils","_ref4","_callee4","index","_context4","id","assign_default","_x3","_x4","apply","arguments","t0","_x","_x2","_this5","row","_this6","province","keys_default","key","province_id","city_id","toConsumableArray_default","province_name","console","log","_getAreaCheckedID","getAreaCheckedID","provinceCheckedID","cityCheckedId","$nextTick","photo","handleCheckAllChange","val","_this7","el","i","_getAreaCheckedID2","handleCheckedCitiesChange","_this8","getCity","_this9","_callee6","currentCityLength","_getAreaCheckedID4","_context6","filter","cityCheckAllChange","_this10","_getAreaCheckedID5","cityChange","handleSuccess","res","add","_ref5","_this11","$refs","form","validate","_callee7","valid","_context7","_ref6","join","types","code","$message","msg","error","_x5","Modify","_ref7","_this12","_callee8","_context8","_ref8","_x6","Setup","_this13","_callee9","_context9","status","erAuth","_this14","$route","query","curId","then","arr","son","name","seCurId","j","action","thCurId","$alert","catch","err","alert","mounted","render","_vm","_h","$createElement","_c","_self","_l","class","attrs","to","path","v-key","_v","_s","staticClass","staticStyle","float","margin","on","click","$event","align","prop","label","scopedSlots","_u","fn","scope","placement","width","slot","text-align","loat","city_name","line-height","font-size","active-value","inactive-value","active-color","inactive-color","change","model","value","callback","$$v","$set","expression","margin-left","size","page-count","center","title","visible","update:visible","close","resetFields","ref","label-width","placeholder","indeterminate","preventDefault","min-height","append-to-body","margin-bottom","_withStripped","esExports","staticRenderFns","channel_insurance","disposed","Component","__webpack_require__","normalizeComponent","ssrContext","options","__file","__webpack_exports__","toObject","$keys","it","module","exports","default","__esModule","keys","version","sources","names","mappings","file","sourcesContent","sourceRoot","$export","core","fails","KEY","exec","exp","S","F","content","locals"],"mappings":"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","file":"static/js/5.1c657ad2c64c0a4d1f7d.js","sourcesContent":["<template>\n  <div>\n    <ctbHead>\n      <router-link :class=\"seCurId==item.id? 'cur':''\"\n                   v-for=\"item in authList\"\n                   :key=\"item.id\"\n                   :to=\"{path:item.action,query:{id:curId}}\"\n                   :v-key=\"item.id\">\n        {{item.name}}\n      </router-link>\n    </ctbHead>\n    <div class=\"container\">\n      <div class=\"quote\">\n        <div class=\"quote-ele\">\n          <i></i>系统设置-渠道客户服务-保险公司\n          <el-button type=\"primary\"\n                     style=\"float:right;margin:20px 40px 0 0\"\n                     @click=\"addVisible=true,state=1,openAdd(true)\">添加</el-button>\n        </div>\n        <div class=\"quote-nav\">\n          <router-link :class=\"thCurId==item.id? 'cur':''\"\n                       v-for=\"item in threeAuthList\"\n                       :key=\"item.id\"\n                       :to=\"{path:item.action,query:{id:curId}}\">\n            {{item.name}}\n          </router-link>\n        </div>\n      </div>\n      <el-table :data=\"list\">\n        <!-- <el-table-column label=\"图片\"\n                         align=\"center\">\n          <template slot-scope=\"scope\">\n            <img :src=\"scope.row.photo\"\n                 class=\"img\">\n          </template>\n        </el-table-column> -->\n        <el-table-column align=\"center\"\n                         prop=\"company\"\n                         label=\"名称\">\n\n        </el-table-column>\n        <el-table-column label=\"类型\"\n                         align=\"center\">\n          <template slot-scope=\"scope\">\n            {{scope.row.type==1 ? '五折养护' : '单次免费'}}\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\"\n                         label=\"地区\">\n          <template slot-scope=\"scope\">\n            <el-popover placement=\"bottom\"\n                        width=\"400\"\n                        trigger=\"click\">\n              <el-button type=\"text\"\n                         slot=\"reference\">详情</el-button>\n              <div class=\"areaDetails\">\n                <h4 style=\"text-align:center\">地区详情</h4>\n                <div v-if=\"scope.row.province\">\n                  <span style=\"loat:left;width:80%;\">\n                    <div v-for=\"(item,index) in scope.row.province\"\n                         :key=\"index\"\n                         class=\"area\">\n                      <p class=\"province\"> {{item.province_name}}</p>\n                      <p class=\"city\">{{item.city_name ? item.city_name.join('、') : ''}}</p>\n                    </div>\n                  </span>\n                </div>\n                <div v-else\n                     style=\"text-align:center;line-height:100px;font-size:18px\">\n                  无\n                </div>\n              </div>\n\n            </el-popover>\n          </template>\n        </el-table-column>\n        <el-table-column align=\"center\"\n                         prop=\"create_time\"\n                         label=\"创建时间\">\n\n        </el-table-column>\n        <el-table-column label=\"操作/是否显示\"\n                         align=\"center\">\n          <template slot-scope=\"scope\">\n            <el-switch :active-value='1'\n                       :inactive-value='2'\n                       active-color=\"#13ce66\"\n                       inactive-color=\"#ff4949\"\n                       v-model=\"scope.row.status\"\n                       @change='Setup(scope.row)'>\n\n            </el-switch>\n            <el-button type=\"primary\"\n                       size=\"mini\"\n                       style=\"margin-left:10px\"\n                       @click=\"addVisible=true,state=2,defaultData(scope.row)\">修改</el-button>\n          </template>\n        </el-table-column>\n      </el-table>\n\n      <!-- 分页 -->\n      <div class=\"page_center\">\n        <paging :page-count=\"pageCount\"\n                :page=\"page\"\n                @index=\"paging\"></paging>\n      </div>\n    </div>\n    <el-dialog center\n               :title=\"state==1 ? '添加': '修改'\"\n               :visible.sync=\"addVisible\"\n               @close='()=>{\n                   $refs.form.resetFields();\n                   isIndeterminate = false;\n                   listQuery.provinceID =[];\n                   cityChecked = [],\n                   checkAll=false\n               }'>\n      <el-form label-width=\"100px\"\n               :model=\"listQuery\"\n               :rules=\"rules\"\n               ref=\"form\">\n        <el-form-item label=\"名称:\"\n                      prop=\"company\">\n          <el-input placeholder=\"请输出名称\"\n                    class=\"input\"\n                    v-model=\"listQuery.company\" />\n        </el-form-item>\n        <el-form-item prop=\"type_channel\"\n                      label=\"显示类型:\">\n          <el-radio-group v-model=\"listQuery.type_channel\">\n            <el-radio :label=\"3\">全部</el-radio>\n            <el-radio :label=\"1\">保险公司</el-radio>\n            <el-radio :label=\"2\">领卡渠道</el-radio>\n          </el-radio-group>\n        </el-form-item>\n        <el-form-item label=\"类型:\"\n                      prop=\"type\">\n          <el-radio v-model=\"listQuery.type\"\n                    :label=\"1\">五折养护</el-radio>\n          <el-radio v-model=\"listQuery.type\"\n                    :label=\"2\">单次免费</el-radio>\n        </el-form-item>\n        <el-form-item label=\"地区:\"\n                      prop=\"provinceID\">\n          <el-checkbox :indeterminate=\"isIndeterminate\"\n                       v-model=\"checkAll\"\n                       @change=\"handleCheckAllChange\">全选</el-checkbox>\n          <div style=\"margin: 15px 0;\"></div>\n          <!-- <el-checkbox-group v-model=\"listQuery.province\">\n            <el-checkbox v-for=\"item in provinceList\"\n                         :label=\"item.id\"\n                         :key=\"item.id\"\n                         @change=\"((val,$event)=>handleCheckedCitiesChange(val,$event,item.id))\"\n                         class=\"ckbox-border\">\n             \n              <p @click.prevent=\"getCity(item.id)\"\n                 style=\"line-height:35px;\">{{item.name}}</p>\n            </el-checkbox>\n          </el-checkbox-group> -->\n\n          <el-checkbox v-for=\"(item,index) in provinceList\"\n                       style=\"width:70px\"\n                       :label=\"item.id\"\n                       :key=\"item.id\"\n                       v-model=\"listQuery.provinceID\"\n                       :indeterminate=\"item.isIndeterminate\"\n                       @change=\"((val,$event)=>handleCheckedCitiesChange(val,$event,index))\">\n            <p @click.prevent=\"getCity(item.id,index,$event)\">\n              {{item.name}}\n            </p>\n\n          </el-checkbox>\n\n        </el-form-item>\n        <!-- <el-form-item label=\"图片:\"\n                      prop=\"photo\">\n          <el-upload :action=\"`${uploadUrl}admin/SystemSetup/uploadPic`\"\n                     list-type=\"picture-card\"\n                     :on-success='handleSuccess'\n                     :data=\"{token:token}\"\n                     :file-list=\"listQuery.photo  ?  [{url:listQuery.photo}] : []\"\n                     name=\"image\"\n                     :limit='1'>\n\n            <i class=\"el-icon-plus\"></i>\n          </el-upload>\n        </el-form-item> -->\n        <el-form-item>\n          <el-button type=\"primary\"\n                     @click=\"state==1? add() : Modify()\"\n                     :loading=\"loading\">{{state==1 ? '添加' : '修改'}}</el-button>\n        </el-form-item>\n      </el-form>\n\n      <!-- 市列表  -->\n      <el-dialog title=\"市详情\"\n                 :visible.sync=\"cityVisible\"\n                 append-to-body\n                 center\n                 width=\"40%\"\n                 style=\"min-height:300px !important\">\n        <div style=\"margin:0 auto;width:78%\">\n          <el-checkbox :indeterminate=\"cityIsIndeterminate\"\n                       v-model=\"cityCheckAll\"\n                       @change=\"cityCheckAllChange\">全选</el-checkbox>\n          <div style=\"margin: 15px 0;\"></div>\n          <el-checkbox v-for=\"(item,index) in cityList\"\n                       :key=\"item.id\"\n                       :label=\"item.id\"\n                       v-model=\"cityChecked\"\n                       style=\"margin-bottom:20px;width:150px\"\n                       @change=\"((value,$event)=>cityChange(value,$event,index))\">\n            {{item.name}}\n          </el-checkbox>\n        </div>\n\n      </el-dialog>\n    </el-dialog>\n  </div>\n</template>\n<script type=\"text/ecmascript-6\">\nimport { getPro, GET_City } from '@/utils/index'\nexport default {\n  data () {\n    return {\n      list: [],\n      token: window.sessionStorage.getItem('bbytoken'),\n      page: 0,\n      pageCount: 0,\n      authList: [],\n      uploadUrl: this.baseURL,\n      threeAuthList: [],\n      addVisible: false,\n      loading: false,\n      listQuery: {\n        company: '',\n        type_channel: 1,\n        type: 2,\n        // photo: '',\n        provinceID: [],\n      },\n      state: 1, // 1 添加 2 修改\n      provinceList: [],\n      isIndeterminate: false,  //省是否全选中\n      checkAll: false,\n      rules: {\n        company: { required: true, message: '名称不能为空', trigger: 'blur' },\n        type: { required: true, message: '请选择类型', trigger: 'blur' },\n        // photo: { required: true, message: '请上传图片', trigger: 'blur' },\n        provinceID: { required: true, message: '请选择区域', trigger: 'blur' },\n        type_channel: { required: true, message: '请选择显示类型', trigger: 'blur' }\n      },\n      cityList: [], //市列表\n      cityVisible: false, //是否显示市详情 默认不显示\n      cityIsIndeterminate: false,\n      cityCheckAll: false,\n      cityChecked: [],\n      provinceID: [],//所有省id\n      cityID: [], //所有市id\n      provinceIndex: 0, //当前选中的省下标\n      currentCity: [],  //当前选择省下面的市\n    }\n  },\n\n  computed: {\n    isAllChecked () {\n      let provinceLength = this.provinceList.length;   //所有的省长度\n      let provinceCheckedLength = this.listQuery.provinceID.length  //当前选中的省长度\n      let cityCheckedLength = this.cityChecked.length;  //当前选中的市长度\n      let city = []\n      this.provinceList.forEach(item => {\n        item.city.forEach(v => {\n          city.push(v)\n        })\n      })\n      return provinceLength == provinceCheckedLength && city.length == cityCheckedLength\n    }\n  },\n\n\n  methods: {\n    paging (e) {\n      this.page = e;\n      this.init()\n    },\n    async init () {\n      let [list, getAreaList] = await Promise.all([this.getList(), this.getArea()])\n      this.list = list.data.data.list || []\n      this.pageCount = list.data.data.rows || 1;\n      this.provinceList = getAreaList || []\n    },\n    async getList () {\n      return await this.$axios.post('admin/SystemSetup/systemList', { token: this.token, page: this.page })\n    },\n    async openAdd (checked, defaultData) {  //获取全部省\n      this.provinceList = this.areaWhetherChecked(true)\n      this.checkAll = checked\n    },\n    getArea () {    //获取地区\n      return new Promise(async (resolve, reject) => {\n        try {\n          let data = await getPro();\n          data.forEach(async (item, index) => {\n            let city = await GET_City(item.id)\n            city.forEach(v => {\n              v = Object.assign(v)\n            })\n            item = Object.assign(item, { city: city })\n          })\n          resolve(data)\n        } catch (error) {\n          reject(error)\n        }\n      })\n    },\n    areaWhetherChecked (checked) {   //checked 是否全选\n      let provinceList = this.provinceList\n      provinceList.forEach(item => {\n        item = Object.assign(item, { checked: checked });\n        item.city.forEach(v => {\n          v = Object.assign(v, { checked: checked })\n          if (checked) {\n            this.cityChecked.push(v.id)\n          }\n        })\n        if (checked) {\n          this.listQuery.provinceID.push(item.id)\n        }\n      })\n      return provinceList;\n    },\n\n\n    defaultData (row) {  //修改       默认数据\n      this.areaWhetherChecked(false)\n      let province = row.province;\n      let provinceID = [];\n      let cityID = []\n      Object.keys(province).forEach(key => {   //获取需要默认选中的id\n        let province_id = province[key].province_id;\n        let city_id = province[key].city_id\n        if (province_id) {\n          provinceID.push(province_id)\n        }\n        if (city_id) {\n          cityID.push(...city_id)\n        }\n      })\n      let provinceList = this.provinceList\n      provinceList.forEach(item => {   //根据选中的id匹配 进行设置选中\n        provinceID.forEach(v => {\n          if (item.id == v) {\n            item.checked = true\n          }\n        })\n        item.city.forEach(v => {\n          cityID.forEach(e => {\n            if (v.id == e) {\n              v.checked = true\n            }\n          })\n        })\n      })\n      this.provinceList = province[0].province_name == '全国' ? this.areaWhetherChecked(true) : provinceList  //重新渲染\n      console.log(this.provinceList)\n      let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();   //获取选中的省id 和选中的市id\n      this.$nextTick(() => {\n        this.listQuery = Object.assign(this.listQuery, { company: row.company, type: row.type, photo: row.photo, provinceID: provinceCheckedID, id: row.id, type_channel: row.type_channel })   //设置省默认选中状态\n      })\n      this.cityChecked = cityCheckedId  //设置市默认选中状态\n      this.isIndeterminate = provinceCheckedID.length < this.provinceList.length && provinceCheckedID.length > 0\n      this.checkAll = province[0].province_name == '全国' ? true : provinceID.length == this.provinceList.length;\n    },\n\n\n    handleCheckAllChange (val) {  //地区全选功能\n      let provinceList = [];\n      let provinceID = []\n      this.provinceList.forEach((el, index) => {  //获取所有省id  \n        this.provinceList[index].checked = val;\n        el.city.forEach((item, i) => {\n          this.provinceList[index].city[i].checked = this.checkAll\n        })\n        provinceID.push(el.id)\n      });\n      let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();\n      this.listQuery.provinceID = provinceCheckedID;\n      this.cityChecked = cityCheckedId\n      this.isIndeterminate = false;\n    },\n    handleCheckedCitiesChange (v, e, index) {   //当前省操作  v 代表当时省是否选中  e event对象  index 当前省的下标\n      this.provinceList[index].checked = v      // 设置当前的省的选中状态\n      let length = this.listQuery.provinceID.length;   //当前省选中的长度\n      this.provinceList[index].city.forEach((item, i) => {\n        this.provinceList[index].city[i].checked = v\n      })\n      let { cityCheckedId } = this.getAreaCheckedID();\n      this.cityChecked = cityCheckedId  //市默认选中状态\n      this.isIndeterminate = length < this.provinceList.length && length > 0;      //判断当前省选中的长度是否小于当前省的长度并且当前选中省的长度大于0  如果条件成立设置全选的按钮的状态\n      console.log(length)\n      this.checkAll = length == this.provinceList.length     //当前选中省的长度如果等于当前省的长度, 省全选按钮勾选\n\n    },\n\n    //获取市\n    async getCity (id, index, e) {\n      this.provinceIndex = index //当前选择的省下标\n      this.currentCity = this.provinceList[index].city   //当前省下面的市\n      this.cityVisible = true;   //是否显示市详情弹框\n      this.cityList = this.provinceList[index].city   //获取当前市\n      let currentCityLength = this.currentCity.length;    //当前市的长度\n      let { cityCheckedId } = this.getAreaCheckedID();   //获取已选中市的id\n      this.cityChecked = cityCheckedId    //设置市默认选中状态\n      let cityCheckedLength = this.cityCheckedLength(this.currentCity)    //当前市选中的长度\n      this.cityCheckAll = this.provinceList[index].checked ? cityCheckedLength == currentCityLength : false  //用当前市和当前选中市进行判断如果当前市的长度不等于当前选中的市的长度,则市全选不勾选,  相反如果等于全选按钮勾选\n\n\n    },\n\n    cityCheckedLength (currentCity) {    //当前选中的市的长度\n      return currentCity.filter(item => item.checked).length;\n    },\n\n    // 市全选操作\n    cityCheckAllChange (val) {  //市 是否全选  val表示是否全选\n      let provinceIndex = this.provinceIndex     //获取当前选中省的下标\n      let cityID = []\n      this.provinceList[provinceIndex].city.forEach((item, index) => {\n        this.provinceList[provinceIndex].city[index].checked = val    //如果var等于true表示全选,把当前选中省下面的所有市改成选中状态,相反则改成非选中状态\n        cityID.push(item.id)\n      })\n      this.provinceList[provinceIndex].checked = val\n      let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();   //获取当前选中市\n      this.listQuery.provinceID = provinceCheckedID\n      this.cityChecked = val ? this.provinceList[provinceIndex].checked ? cityCheckedId : cityID : []   //默认市的选中\n\n      this.isIndeterminate = provinceCheckedID.length < this.provinceList.length && provinceCheckedID.length > 0\n\n\n    },\n\n    getAreaCheckedID () {  //获取选中的省id和市id\n      let provinceCheckedID = [];\n      let cityCheckedId = []\n      this.provinceList.forEach(item => {\n        if (item.checked) {  //当前省是否选择\n          item.city.forEach(v => {\n            if (v.checked) {  //当前市是否选中\n              cityCheckedId.push(v.id)  //获取当前选中的市id\n            }\n          })\n          provinceCheckedID.push(item.id)   //获取当前选中的省id\n        }\n      })\n\n      return {\n        provinceCheckedID,\n        cityCheckedId\n      }\n    },\n    //当前市的操作\n    cityChange (v, e, index) { // v:当前市是否被选中 e:event对象\n      this.cityList[index].checked = v;\n      let cityCheckedLength = this.cityCheckedLength(this.currentCity);\n      this.cityCheckAll = cityCheckedLength == this.currentCity.length;\n      console.log(cityCheckedLength)\n\n      this.provinceList[this.provinceIndex].checked = cityCheckedLength == 0 ? false : true\n\n      let { provinceCheckedID } = this.getAreaCheckedID();\n      this.listQuery.provinceID = provinceCheckedID;\n      console.log(cityCheckedLength, 'cityCheckedLength', '-----', this.currentCity.length)\n      this.isIndeterminate = cityCheckedLength < this.currentCity.length && cityCheckedLength > 0\n\n    },\n    handleSuccess (res) {  //上传成功\n      this.listQuery = Object.assign({}, this.listQuery, { photo: res })\n    },\n    add () {  //添加\n      console.log(this.isAllChecked)\n      this.$refs.form.validate(async (valid) => {\n        if (valid) {\n          try {\n            this.loading = true\n            let data = (({ company, type, photo, type_channel }) => ({ company, type, photo, type_channel }))(this.listQuery);\n            let province = this.cityChecked && this.cityChecked.length > 0 ? this.cityChecked.join(',') : ''\n            const res = await this.$axios.post('admin/SystemSetup/addGenre', Object.assign({}, data, { token: this.token, types: 1, province: this.isAllChecked ? 1 : province }))\n            this.loading = false\n            if (res.data.code == 1) {\n              this.$message({ message: res.data.msg, type: 'success' })\n              this.addVisible = false\n              this.init()\n            } else {\n              this.$message.error(res.data.msg)\n            }\n          } catch (error) {\n            this.loading = false\n            throw (error)\n          }\n        }\n      })\n    },\n    //修改\n    Modify () {\n      this.$refs.form.validate(async (valid) => {\n        if (valid) {\n          try {\n            this.loading = true\n            let data = (({ company, type, photo, id, type_channel }) => ({ company, type, photo, id, type_channel }))(this.listQuery);\n            let province = this.cityChecked && this.cityChecked.length > 0 ? this.cityChecked.join(',') : []\n            const res = await this.$axios.post('admin/SystemSetup/updateInfo', Object.assign({}, data, { token: this.token, types: 1, province: this.isAllChecked ? 1 : province }))\n            this.loading = false\n            if (res.data.code == 1) {\n              this.$message({ message: res.data.msg, type: 'success' })\n              this.addVisible = false\n              this.init()\n            } else {\n              this.$message.error(res.data.msg)\n            }\n          } catch (error) {\n            this.loading = false\n            throw (error)\n          }\n        }\n      })\n    },\n    //设置 显示 隐藏\n    async Setup (row) {\n      try {\n        const res = await this.$axios.post('admin/SystemSetup/updateStatus', { token: this.token, id: row.id, status: row.status })\n        if (res.data.code == 1) {\n          this.$message({ message: res.data.msg, type: 'success' })\n          this.init()\n        } else {\n          this.$message.error(res.data.msg)\n        }\n      } catch (error) {\n        throw (error)\n      }\n    },\n    erAuth () {  //权限匹配\n      var id = this.$route.query.id;\n      this.curId = id;\n      this.$axios.post('admin/Auth/erAuth', {\n        token: window.sessionStorage.getItem('bbytoken'),\n        id: id\n      })\n        .then(res => {\n          if (res.data.code == 1) {\n            var arr = res.data.data;\n            for (var i = 0; i < arr.length; i++) {\n              if (arr[i].son) {\n                if (arr[i].name == '渠道客户服务') {\n                  this.seCurId = arr[i].id;\n                  this.threeAuthList = arr[i].son;\n                }\n                for (var j = 0; j < arr[i].son.length; j++) {\n                  if (arr[i].action != arr[i].son[j].action) {\n                    arr[i].action = arr[i].son[0].action;\n                  }\n                  if (arr[i].son[j].name == '保险公司' && arr[i].name == '渠道客户服务') {\n                    this.thCurId = arr[i].son[j].id;\n                  }\n                }\n              }\n            }\n            this.authList = arr;\n          } else {\n            this.$alert(res.data.msg, '提示', { type: 'error' });\n          }\n        })\n        .catch(err => {\n          alert(err);\n        })\n    }\n  },\n  mounted () {\n    this.erAuth();\n    this.init();\n  },\n}\n</script>\n<style scoped>\n.ellipsis {\n  width: 150px;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n}\n.areaDetails {\n  max-height: 300px;\n  min-height: 100px;\n  overflow: auto;\n}\n.areaDetails .area {\n  padding: 10px 0;\n  border-bottom: 1px solid #cccccc;\n}\n.areaDetails .province {\n  font-size: 15px;\n  font-weight: 600;\n}\n.img {\n  width: 70px;\n  height: 70px;\n}\n.input {\n  width: 50%;\n}\n.laybox2 ul {\n  margin: 33px auto;\n  border-bottom: 1px dashed #04bbfc;\n}\n\n.laybox2 {\n  padding: 60px;\n  font-size: 16px;\n}\n\n.laybox2 li {\n  width: 300px;\n  text-align: left;\n  margin: 33px auto;\n}\n\n.t-c:after {\n  content: \"\";\n  display: block;\n  height: 0;\n  clear: both;\n}\n\n.bot > div {\n  position: relative;\n}\n\ndiv.bot {\n  margin: 45px auto 35px auto;\n  height: 100px;\n}\n\ndiv.bot span {\n  display: inline-block;\n  width: 20%;\n}\n\ndiv.bot input {\n  display: inline-block;\n  width: 55%;\n  outline: none;\n  border: none;\n  border-bottom: 1px solid #aaa;\n}\n\ndiv.bot button {\n  width: 110px;\n  height: 36px;\n  margin-left: -55px;\n  position: absolute;\n  border-radius: 18px;\n  box-shadow: 4px 0px 6px rgba(177, 42, 19, 0.2);\n  border: none;\n  color: #fff;\n  left: 50%;\n  top: 60px;\n}\n\nbutton.reject {\n  background: rgba(237, 81, 55, 1);\n  margin-right: 30%;\n}\n\nbutton.pass {\n  background-color: #20a0ff;\n}\n\n.left {\n  float: left;\n  width: 50%;\n}\n\n.right {\n  float: right;\n  width: 50%;\n}\n.nowrap {\n  width: 120px !important;\n  text-align: center;\n  white-space: nowrap; /*规定文本不换行**/\n  text-overflow: ellipsis; /**显示省略符号来代表被修剪的文本。*/\n  overflow: hidden;\n  margin: 0 auto;\n}\n.regionDetail >>> .el-dialog__title {\n  font-size: 22px;\n}\n.regionDetail >>> .el-dialog__body {\n  padding: 0px 25px 30px;\n  border-top: solid 2px #eee;\n}\n\n>>> .el-dialog {\n  min-height: 300px;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/pages/Setup/channel/insurance.vue","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"ctbHead\",\n        _vm._l(_vm.authList, function(item) {\n          return _c(\n            \"router-link\",\n            {\n              key: item.id,\n              class: _vm.seCurId == item.id ? \"cur\" : \"\",\n              attrs: {\n                to: { path: item.action, query: { id: _vm.curId } },\n                \"v-key\": item.id\n              }\n            },\n            [_vm._v(\"\\n      \" + _vm._s(item.name) + \"\\n    \")]\n          )\n        }),\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container\" },\n        [\n          _c(\"div\", { staticClass: \"quote\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"quote-ele\" },\n              [\n                _c(\"i\"),\n                _vm._v(\"系统设置-渠道客户服务-保险公司\\n        \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticStyle: { float: \"right\", margin: \"20px 40px 0 0\" },\n                    attrs: { type: \"primary\" },\n                    on: {\n                      click: function($event) {\n                        ;(_vm.addVisible = true),\n                          (_vm.state = 1),\n                          _vm.openAdd(true)\n                      }\n                    }\n                  },\n                  [_vm._v(\"添加\")]\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"quote-nav\" },\n              _vm._l(_vm.threeAuthList, function(item) {\n                return _c(\n                  \"router-link\",\n                  {\n                    key: item.id,\n                    class: _vm.thCurId == item.id ? \"cur\" : \"\",\n                    attrs: {\n                      to: { path: item.action, query: { id: _vm.curId } }\n                    }\n                  },\n                  [_vm._v(\"\\n          \" + _vm._s(item.name) + \"\\n        \")]\n                )\n              }),\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"el-table\",\n            { attrs: { data: _vm.list } },\n            [\n              _c(\"el-table-column\", {\n                attrs: { align: \"center\", prop: \"company\", label: \"名称\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"类型\", align: \"center\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(\n                              scope.row.type == 1 ? \"五折养护\" : \"单次免费\"\n                            ) +\n                            \"\\n        \"\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { align: \"center\", label: \"地区\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\n                          \"el-popover\",\n                          {\n                            attrs: {\n                              placement: \"bottom\",\n                              width: \"400\",\n                              trigger: \"click\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"el-button\",\n                              {\n                                attrs: { slot: \"reference\", type: \"text\" },\n                                slot: \"reference\"\n                              },\n                              [_vm._v(\"详情\")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"areaDetails\" }, [\n                              _c(\n                                \"h4\",\n                                { staticStyle: { \"text-align\": \"center\" } },\n                                [_vm._v(\"地区详情\")]\n                              ),\n                              _vm._v(\" \"),\n                              scope.row.province\n                                ? _c(\"div\", [\n                                    _c(\n                                      \"span\",\n                                      {\n                                        staticStyle: {\n                                          loat: \"left\",\n                                          width: \"80%\"\n                                        }\n                                      },\n                                      _vm._l(scope.row.province, function(\n                                        item,\n                                        index\n                                      ) {\n                                        return _c(\n                                          \"div\",\n                                          { key: index, staticClass: \"area\" },\n                                          [\n                                            _c(\n                                              \"p\",\n                                              { staticClass: \"province\" },\n                                              [\n                                                _vm._v(\n                                                  \" \" +\n                                                    _vm._s(item.province_name)\n                                                )\n                                              ]\n                                            ),\n                                            _vm._v(\" \"),\n                                            _c(\"p\", { staticClass: \"city\" }, [\n                                              _vm._v(\n                                                _vm._s(\n                                                  item.city_name\n                                                    ? item.city_name.join(\"、\")\n                                                    : \"\"\n                                                )\n                                              )\n                                            ])\n                                          ]\n                                        )\n                                      }),\n                                      0\n                                    )\n                                  ])\n                                : _c(\n                                    \"div\",\n                                    {\n                                      staticStyle: {\n                                        \"text-align\": \"center\",\n                                        \"line-height\": \"100px\",\n                                        \"font-size\": \"18px\"\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                无\\n              \"\n                                      )\n                                    ]\n                                  )\n                            ])\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  prop: \"create_time\",\n                  label: \"创建时间\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"操作/是否显示\", align: \"center\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"el-switch\", {\n                          attrs: {\n                            \"active-value\": 1,\n                            \"inactive-value\": 2,\n                            \"active-color\": \"#13ce66\",\n                            \"inactive-color\": \"#ff4949\"\n                          },\n                          on: {\n                            change: function($event) {\n                              return _vm.Setup(scope.row)\n                            }\n                          },\n                          model: {\n                            value: scope.row.status,\n                            callback: function($$v) {\n                              _vm.$set(scope.row, \"status\", $$v)\n                            },\n                            expression: \"scope.row.status\"\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-button\",\n                          {\n                            staticStyle: { \"margin-left\": \"10px\" },\n                            attrs: { type: \"primary\", size: \"mini\" },\n                            on: {\n                              click: function($event) {\n                                ;(_vm.addVisible = true),\n                                  (_vm.state = 2),\n                                  _vm.defaultData(scope.row)\n                              }\n                            }\n                          },\n                          [_vm._v(\"修改\")]\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"page_center\" },\n            [\n              _c(\"paging\", {\n                attrs: { \"page-count\": _vm.pageCount, page: _vm.page },\n                on: { index: _vm.paging }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            center: \"\",\n            title: _vm.state == 1 ? \"添加\" : \"修改\",\n            visible: _vm.addVisible\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.addVisible = $event\n            },\n            close: function() {\n              _vm.$refs.form.resetFields()\n              _vm.isIndeterminate = false\n              _vm.listQuery.provinceID = []\n              ;(_vm.cityChecked = []), (_vm.checkAll = false)\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"form\",\n              attrs: {\n                \"label-width\": \"100px\",\n                model: _vm.listQuery,\n                rules: _vm.rules\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"名称:\", prop: \"company\" } },\n                [\n                  _c(\"el-input\", {\n                    staticClass: \"input\",\n                    attrs: { placeholder: \"请输出名称\" },\n                    model: {\n                      value: _vm.listQuery.company,\n                      callback: function($$v) {\n                        _vm.$set(_vm.listQuery, \"company\", $$v)\n                      },\n                      expression: \"listQuery.company\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { prop: \"type_channel\", label: \"显示类型:\" } },\n                [\n                  _c(\n                    \"el-radio-group\",\n                    {\n                      model: {\n                        value: _vm.listQuery.type_channel,\n                        callback: function($$v) {\n                          _vm.$set(_vm.listQuery, \"type_channel\", $$v)\n                        },\n                        expression: \"listQuery.type_channel\"\n                      }\n                    },\n                    [\n                      _c(\"el-radio\", { attrs: { label: 3 } }, [_vm._v(\"全部\")]),\n                      _vm._v(\" \"),\n                      _c(\"el-radio\", { attrs: { label: 1 } }, [\n                        _vm._v(\"保险公司\")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"el-radio\", { attrs: { label: 2 } }, [\n                        _vm._v(\"领卡渠道\")\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"类型:\", prop: \"type\" } },\n                [\n                  _c(\n                    \"el-radio\",\n                    {\n                      attrs: { label: 1 },\n                      model: {\n                        value: _vm.listQuery.type,\n                        callback: function($$v) {\n                          _vm.$set(_vm.listQuery, \"type\", $$v)\n                        },\n                        expression: \"listQuery.type\"\n                      }\n                    },\n                    [_vm._v(\"五折养护\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-radio\",\n                    {\n                      attrs: { label: 2 },\n                      model: {\n                        value: _vm.listQuery.type,\n                        callback: function($$v) {\n                          _vm.$set(_vm.listQuery, \"type\", $$v)\n                        },\n                        expression: \"listQuery.type\"\n                      }\n                    },\n                    [_vm._v(\"单次免费\")]\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"地区:\", prop: \"provinceID\" } },\n                [\n                  _c(\n                    \"el-checkbox\",\n                    {\n                      attrs: { indeterminate: _vm.isIndeterminate },\n                      on: { change: _vm.handleCheckAllChange },\n                      model: {\n                        value: _vm.checkAll,\n                        callback: function($$v) {\n                          _vm.checkAll = $$v\n                        },\n                        expression: \"checkAll\"\n                      }\n                    },\n                    [_vm._v(\"全选\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticStyle: { margin: \"15px 0\" } }),\n                  _vm._v(\" \"),\n                  _vm._l(_vm.provinceList, function(item, index) {\n                    return _c(\n                      \"el-checkbox\",\n                      {\n                        key: item.id,\n                        staticStyle: { width: \"70px\" },\n                        attrs: {\n                          label: item.id,\n                          indeterminate: item.isIndeterminate\n                        },\n                        on: {\n                          change: function(val, $event) {\n                            return _vm.handleCheckedCitiesChange(\n                              val,\n                              $event,\n                              index\n                            )\n                          }\n                        },\n                        model: {\n                          value: _vm.listQuery.provinceID,\n                          callback: function($$v) {\n                            _vm.$set(_vm.listQuery, \"provinceID\", $$v)\n                          },\n                          expression: \"listQuery.provinceID\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"p\",\n                          {\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.getCity(item.id, index, $event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(item.name) +\n                                \"\\n          \"\n                            )\n                          ]\n                        )\n                      ]\n                    )\n                  })\n                ],\n                2\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\", loading: _vm.loading },\n                      on: {\n                        click: function($event) {\n                          _vm.state == 1 ? _vm.add() : _vm.Modify()\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.state == 1 ? \"添加\" : \"修改\"))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              staticStyle: { \"min-height\": \"300px !important\" },\n              attrs: {\n                title: \"市详情\",\n                visible: _vm.cityVisible,\n                \"append-to-body\": \"\",\n                center: \"\",\n                width: \"40%\"\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.cityVisible = $event\n                }\n              }\n            },\n            [\n              _c(\n                \"div\",\n                { staticStyle: { margin: \"0 auto\", width: \"78%\" } },\n                [\n                  _c(\n                    \"el-checkbox\",\n                    {\n                      attrs: { indeterminate: _vm.cityIsIndeterminate },\n                      on: { change: _vm.cityCheckAllChange },\n                      model: {\n                        value: _vm.cityCheckAll,\n                        callback: function($$v) {\n                          _vm.cityCheckAll = $$v\n                        },\n                        expression: \"cityCheckAll\"\n                      }\n                    },\n                    [_vm._v(\"全选\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticStyle: { margin: \"15px 0\" } }),\n                  _vm._v(\" \"),\n                  _vm._l(_vm.cityList, function(item, index) {\n                    return _c(\n                      \"el-checkbox\",\n                      {\n                        key: item.id,\n                        staticStyle: {\n                          \"margin-bottom\": \"20px\",\n                          width: \"150px\"\n                        },\n                        attrs: { label: item.id },\n                        on: {\n                          change: function(value, $event) {\n                            return _vm.cityChange(value, $event, index)\n                          }\n                        },\n                        model: {\n                          value: _vm.cityChecked,\n                          callback: function($$v) {\n                            _vm.cityChecked = $$v\n                          },\n                          expression: \"cityChecked\"\n                        }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n          \" + _vm._s(item.name) + \"\\n        \"\n                        )\n                      ]\n                    )\n                  })\n                ],\n                2\n              )\n            ]\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-2df4eec8\", esExports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2df4eec8\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/Setup/channel/insurance.vue\n// module id = null\n// module chunks = ","var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2df4eec8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./insurance.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./insurance.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./insurance.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2df4eec8\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./insurance.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-2df4eec8\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src/pages/Setup/channel/insurance.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-2df4eec8\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-2df4eec8\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Setup/channel/insurance.vue\n// module id = null\n// module chunks = ","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.keys.js\n// module id = Cdx3\n// module chunks = 5 6","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/keys.js\n// module id = fZjL\n// module chunks = 5 6","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/keys.js\n// module id = jFbC\n// module chunks = 5 6","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ellipsis[data-v-2df4eec8] {\\n  width: 150px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  display: -webkit-box;\\n  -webkit-box-orient: vertical;\\n  -webkit-line-clamp: 2;\\n}\\n.areaDetails[data-v-2df4eec8] {\\n  max-height: 300px;\\n  min-height: 100px;\\n  overflow: auto;\\n}\\n.areaDetails .area[data-v-2df4eec8] {\\n  padding: 10px 0;\\n  border-bottom: 1px solid #cccccc;\\n}\\n.areaDetails .province[data-v-2df4eec8] {\\n  font-size: 15px;\\n  font-weight: 600;\\n}\\n.img[data-v-2df4eec8] {\\n  width: 70px;\\n  height: 70px;\\n}\\n.input[data-v-2df4eec8] {\\n  width: 50%;\\n}\\n.laybox2 ul[data-v-2df4eec8] {\\n  margin: 33px auto;\\n  border-bottom: 1px dashed #04bbfc;\\n}\\n.laybox2[data-v-2df4eec8] {\\n  padding: 60px;\\n  font-size: 16px;\\n}\\n.laybox2 li[data-v-2df4eec8] {\\n  width: 300px;\\n  text-align: left;\\n  margin: 33px auto;\\n}\\n.t-c[data-v-2df4eec8]:after {\\n  content: \\\"\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n}\\n.bot > div[data-v-2df4eec8] {\\n  position: relative;\\n}\\ndiv.bot[data-v-2df4eec8] {\\n  margin: 45px auto 35px auto;\\n  height: 100px;\\n}\\ndiv.bot span[data-v-2df4eec8] {\\n  display: inline-block;\\n  width: 20%;\\n}\\ndiv.bot input[data-v-2df4eec8] {\\n  display: inline-block;\\n  width: 55%;\\n  outline: none;\\n  border: none;\\n  border-bottom: 1px solid #aaa;\\n}\\ndiv.bot button[data-v-2df4eec8] {\\n  width: 110px;\\n  height: 36px;\\n  margin-left: -55px;\\n  position: absolute;\\n  border-radius: 18px;\\n  -webkit-box-shadow: 4px 0px 6px rgba(177, 42, 19, 0.2);\\n          box-shadow: 4px 0px 6px rgba(177, 42, 19, 0.2);\\n  border: none;\\n  color: #fff;\\n  left: 50%;\\n  top: 60px;\\n}\\nbutton.reject[data-v-2df4eec8] {\\n  background: rgba(237, 81, 55, 1);\\n  margin-right: 30%;\\n}\\nbutton.pass[data-v-2df4eec8] {\\n  background-color: #20a0ff;\\n}\\n.left[data-v-2df4eec8] {\\n  float: left;\\n  width: 50%;\\n}\\n.right[data-v-2df4eec8] {\\n  float: right;\\n  width: 50%;\\n}\\n.nowrap[data-v-2df4eec8] {\\n  width: 120px !important;\\n  text-align: center;\\n  white-space: nowrap; /*规定文本不换行**/\\n  text-overflow: ellipsis; /**显示省略符号来代表被修剪的文本。*/\\n  overflow: hidden;\\n  margin: 0 auto;\\n}\\n.regionDetail[data-v-2df4eec8] .el-dialog__title {\\n  font-size: 22px;\\n}\\n.regionDetail[data-v-2df4eec8] .el-dialog__body {\\n  padding: 0px 25px 30px;\\n  border-top: solid 2px #eee;\\n}\\n[data-v-2df4eec8] .el-dialog {\\n  min-height: 300px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"F:/仲达集团/2020-3-18总后台管理系统/src/pages/Setup/channel/src/pages/Setup/channel/insurance.vue\"],\"names\":[],\"mappings\":\";AAukBA;EACA,aAAA;EACA,iBAAA;EACA,wBAAA;EACA,qBAAA;EACA,6BAAA;EACA,sBAAA;CACA;AACA;EACA,kBAAA;EACA,kBAAA;EACA,eAAA;CACA;AACA;EACA,gBAAA;EACA,iCAAA;CACA;AACA;EACA,gBAAA;EACA,iBAAA;CACA;AACA;EACA,YAAA;EACA,aAAA;CACA;AACA;EACA,WAAA;CACA;AACA;EACA,kBAAA;EACA,kCAAA;CACA;AAEA;EACA,cAAA;EACA,gBAAA;CACA;AAEA;EACA,aAAA;EACA,iBAAA;EACA,kBAAA;CACA;AAEA;EACA,YAAA;EACA,eAAA;EACA,UAAA;EACA,YAAA;CACA;AAEA;EACA,mBAAA;CACA;AAEA;EACA,4BAAA;EACA,cAAA;CACA;AAEA;EACA,sBAAA;EACA,WAAA;CACA;AAEA;EACA,sBAAA;EACA,WAAA;EACA,cAAA;EACA,aAAA;EACA,8BAAA;CACA;AAEA;EACA,aAAA;EACA,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,oBAAA;EACA,uDAAA;UAAA,+CAAA;EACA,aAAA;EACA,YAAA;EACA,UAAA;EACA,UAAA;CACA;AAEA;EACA,iCAAA;EACA,kBAAA;CACA;AAEA;EACA,0BAAA;CACA;AAEA;EACA,YAAA;EACA,WAAA;CACA;AAEA;EACA,aAAA;EACA,WAAA;CACA;AACA;EACA,wBAAA;EACA,mBAAA;EACA,oBAAA,CAAA,YAAA;EACA,wBAAA,CAAA,qBAAA;EACA,iBAAA;EACA,eAAA;CACA;AACA;EACA,gBAAA;CACA;AACA;EACA,uBAAA;EACA,2BAAA;CACA;AAEA;EACA,kBAAA;CACA\",\"file\":\"insurance.vue\",\"sourcesContent\":[\"<template>\\n  <div>\\n    <ctbHead>\\n      <router-link :class=\\\"seCurId==item.id? 'cur':''\\\"\\n                   v-for=\\\"item in authList\\\"\\n                   :key=\\\"item.id\\\"\\n                   :to=\\\"{path:item.action,query:{id:curId}}\\\"\\n                   :v-key=\\\"item.id\\\">\\n        {{item.name}}\\n      </router-link>\\n    </ctbHead>\\n    <div class=\\\"container\\\">\\n      <div class=\\\"quote\\\">\\n        <div class=\\\"quote-ele\\\">\\n          <i></i>系统设置-渠道客户服务-保险公司\\n          <el-button type=\\\"primary\\\"\\n                     style=\\\"float:right;margin:20px 40px 0 0\\\"\\n                     @click=\\\"addVisible=true,state=1,openAdd(true)\\\">添加</el-button>\\n        </div>\\n        <div class=\\\"quote-nav\\\">\\n          <router-link :class=\\\"thCurId==item.id? 'cur':''\\\"\\n                       v-for=\\\"item in threeAuthList\\\"\\n                       :key=\\\"item.id\\\"\\n                       :to=\\\"{path:item.action,query:{id:curId}}\\\">\\n            {{item.name}}\\n          </router-link>\\n        </div>\\n      </div>\\n      <el-table :data=\\\"list\\\">\\n        <!-- <el-table-column label=\\\"图片\\\"\\n                         align=\\\"center\\\">\\n          <template slot-scope=\\\"scope\\\">\\n            <img :src=\\\"scope.row.photo\\\"\\n                 class=\\\"img\\\">\\n          </template>\\n        </el-table-column> -->\\n        <el-table-column align=\\\"center\\\"\\n                         prop=\\\"company\\\"\\n                         label=\\\"名称\\\">\\n\\n        </el-table-column>\\n        <el-table-column label=\\\"类型\\\"\\n                         align=\\\"center\\\">\\n          <template slot-scope=\\\"scope\\\">\\n            {{scope.row.type==1 ? '五折养护' : '单次免费'}}\\n          </template>\\n        </el-table-column>\\n        <el-table-column align=\\\"center\\\"\\n                         label=\\\"地区\\\">\\n          <template slot-scope=\\\"scope\\\">\\n            <el-popover placement=\\\"bottom\\\"\\n                        width=\\\"400\\\"\\n                        trigger=\\\"click\\\">\\n              <el-button type=\\\"text\\\"\\n                         slot=\\\"reference\\\">详情</el-button>\\n              <div class=\\\"areaDetails\\\">\\n                <h4 style=\\\"text-align:center\\\">地区详情</h4>\\n                <div v-if=\\\"scope.row.province\\\">\\n                  <span style=\\\"loat:left;width:80%;\\\">\\n                    <div v-for=\\\"(item,index) in scope.row.province\\\"\\n                         :key=\\\"index\\\"\\n                         class=\\\"area\\\">\\n                      <p class=\\\"province\\\"> {{item.province_name}}</p>\\n                      <p class=\\\"city\\\">{{item.city_name ? item.city_name.join('、') : ''}}</p>\\n                    </div>\\n                  </span>\\n                </div>\\n                <div v-else\\n                     style=\\\"text-align:center;line-height:100px;font-size:18px\\\">\\n                  无\\n                </div>\\n              </div>\\n\\n            </el-popover>\\n          </template>\\n        </el-table-column>\\n        <el-table-column align=\\\"center\\\"\\n                         prop=\\\"create_time\\\"\\n                         label=\\\"创建时间\\\">\\n\\n        </el-table-column>\\n        <el-table-column label=\\\"操作/是否显示\\\"\\n                         align=\\\"center\\\">\\n          <template slot-scope=\\\"scope\\\">\\n            <el-switch :active-value='1'\\n                       :inactive-value='2'\\n                       active-color=\\\"#13ce66\\\"\\n                       inactive-color=\\\"#ff4949\\\"\\n                       v-model=\\\"scope.row.status\\\"\\n                       @change='Setup(scope.row)'>\\n\\n            </el-switch>\\n            <el-button type=\\\"primary\\\"\\n                       size=\\\"mini\\\"\\n                       style=\\\"margin-left:10px\\\"\\n                       @click=\\\"addVisible=true,state=2,defaultData(scope.row)\\\">修改</el-button>\\n          </template>\\n        </el-table-column>\\n      </el-table>\\n\\n      <!-- 分页 -->\\n      <div class=\\\"page_center\\\">\\n        <paging :page-count=\\\"pageCount\\\"\\n                :page=\\\"page\\\"\\n                @index=\\\"paging\\\"></paging>\\n      </div>\\n    </div>\\n    <el-dialog center\\n               :title=\\\"state==1 ? '添加': '修改'\\\"\\n               :visible.sync=\\\"addVisible\\\"\\n               @close='()=>{\\n                   $refs.form.resetFields();\\n                   isIndeterminate = false;\\n                   listQuery.provinceID =[];\\n                   cityChecked = [],\\n                   checkAll=false\\n               }'>\\n      <el-form label-width=\\\"100px\\\"\\n               :model=\\\"listQuery\\\"\\n               :rules=\\\"rules\\\"\\n               ref=\\\"form\\\">\\n        <el-form-item label=\\\"名称:\\\"\\n                      prop=\\\"company\\\">\\n          <el-input placeholder=\\\"请输出名称\\\"\\n                    class=\\\"input\\\"\\n                    v-model=\\\"listQuery.company\\\" />\\n        </el-form-item>\\n        <el-form-item prop=\\\"type_channel\\\"\\n                      label=\\\"显示类型:\\\">\\n          <el-radio-group v-model=\\\"listQuery.type_channel\\\">\\n            <el-radio :label=\\\"3\\\">全部</el-radio>\\n            <el-radio :label=\\\"1\\\">保险公司</el-radio>\\n            <el-radio :label=\\\"2\\\">领卡渠道</el-radio>\\n          </el-radio-group>\\n        </el-form-item>\\n        <el-form-item label=\\\"类型:\\\"\\n                      prop=\\\"type\\\">\\n          <el-radio v-model=\\\"listQuery.type\\\"\\n                    :label=\\\"1\\\">五折养护</el-radio>\\n          <el-radio v-model=\\\"listQuery.type\\\"\\n                    :label=\\\"2\\\">单次免费</el-radio>\\n        </el-form-item>\\n        <el-form-item label=\\\"地区:\\\"\\n                      prop=\\\"provinceID\\\">\\n          <el-checkbox :indeterminate=\\\"isIndeterminate\\\"\\n                       v-model=\\\"checkAll\\\"\\n                       @change=\\\"handleCheckAllChange\\\">全选</el-checkbox>\\n          <div style=\\\"margin: 15px 0;\\\"></div>\\n          <!-- <el-checkbox-group v-model=\\\"listQuery.province\\\">\\n            <el-checkbox v-for=\\\"item in provinceList\\\"\\n                         :label=\\\"item.id\\\"\\n                         :key=\\\"item.id\\\"\\n                         @change=\\\"((val,$event)=>handleCheckedCitiesChange(val,$event,item.id))\\\"\\n                         class=\\\"ckbox-border\\\">\\n             \\n              <p @click.prevent=\\\"getCity(item.id)\\\"\\n                 style=\\\"line-height:35px;\\\">{{item.name}}</p>\\n            </el-checkbox>\\n          </el-checkbox-group> -->\\n\\n          <el-checkbox v-for=\\\"(item,index) in provinceList\\\"\\n                       style=\\\"width:70px\\\"\\n                       :label=\\\"item.id\\\"\\n                       :key=\\\"item.id\\\"\\n                       v-model=\\\"listQuery.provinceID\\\"\\n                       :indeterminate=\\\"item.isIndeterminate\\\"\\n                       @change=\\\"((val,$event)=>handleCheckedCitiesChange(val,$event,index))\\\">\\n            <p @click.prevent=\\\"getCity(item.id,index,$event)\\\">\\n              {{item.name}}\\n            </p>\\n\\n          </el-checkbox>\\n\\n        </el-form-item>\\n        <!-- <el-form-item label=\\\"图片:\\\"\\n                      prop=\\\"photo\\\">\\n          <el-upload :action=\\\"`${uploadUrl}admin/SystemSetup/uploadPic`\\\"\\n                     list-type=\\\"picture-card\\\"\\n                     :on-success='handleSuccess'\\n                     :data=\\\"{token:token}\\\"\\n                     :file-list=\\\"listQuery.photo  ?  [{url:listQuery.photo}] : []\\\"\\n                     name=\\\"image\\\"\\n                     :limit='1'>\\n\\n            <i class=\\\"el-icon-plus\\\"></i>\\n          </el-upload>\\n        </el-form-item> -->\\n        <el-form-item>\\n          <el-button type=\\\"primary\\\"\\n                     @click=\\\"state==1? add() : Modify()\\\"\\n                     :loading=\\\"loading\\\">{{state==1 ? '添加' : '修改'}}</el-button>\\n        </el-form-item>\\n      </el-form>\\n\\n      <!-- 市列表  -->\\n      <el-dialog title=\\\"市详情\\\"\\n                 :visible.sync=\\\"cityVisible\\\"\\n                 append-to-body\\n                 center\\n                 width=\\\"40%\\\"\\n                 style=\\\"min-height:300px !important\\\">\\n        <div style=\\\"margin:0 auto;width:78%\\\">\\n          <el-checkbox :indeterminate=\\\"cityIsIndeterminate\\\"\\n                       v-model=\\\"cityCheckAll\\\"\\n                       @change=\\\"cityCheckAllChange\\\">全选</el-checkbox>\\n          <div style=\\\"margin: 15px 0;\\\"></div>\\n          <el-checkbox v-for=\\\"(item,index) in cityList\\\"\\n                       :key=\\\"item.id\\\"\\n                       :label=\\\"item.id\\\"\\n                       v-model=\\\"cityChecked\\\"\\n                       style=\\\"margin-bottom:20px;width:150px\\\"\\n                       @change=\\\"((value,$event)=>cityChange(value,$event,index))\\\">\\n            {{item.name}}\\n          </el-checkbox>\\n        </div>\\n\\n      </el-dialog>\\n    </el-dialog>\\n  </div>\\n</template>\\n<script type=\\\"text/ecmascript-6\\\">\\nimport { getPro, GET_City } from '@/utils/index'\\nexport default {\\n  data () {\\n    return {\\n      list: [],\\n      token: window.sessionStorage.getItem('bbytoken'),\\n      page: 0,\\n      pageCount: 0,\\n      authList: [],\\n      uploadUrl: this.baseURL,\\n      threeAuthList: [],\\n      addVisible: false,\\n      loading: false,\\n      listQuery: {\\n        company: '',\\n        type_channel: 1,\\n        type: 2,\\n        // photo: '',\\n        provinceID: [],\\n      },\\n      state: 1, // 1 添加 2 修改\\n      provinceList: [],\\n      isIndeterminate: false,  //省是否全选中\\n      checkAll: false,\\n      rules: {\\n        company: { required: true, message: '名称不能为空', trigger: 'blur' },\\n        type: { required: true, message: '请选择类型', trigger: 'blur' },\\n        // photo: { required: true, message: '请上传图片', trigger: 'blur' },\\n        provinceID: { required: true, message: '请选择区域', trigger: 'blur' },\\n        type_channel: { required: true, message: '请选择显示类型', trigger: 'blur' }\\n      },\\n      cityList: [], //市列表\\n      cityVisible: false, //是否显示市详情 默认不显示\\n      cityIsIndeterminate: false,\\n      cityCheckAll: false,\\n      cityChecked: [],\\n      provinceID: [],//所有省id\\n      cityID: [], //所有市id\\n      provinceIndex: 0, //当前选中的省下标\\n      currentCity: [],  //当前选择省下面的市\\n    }\\n  },\\n\\n  computed: {\\n    isAllChecked () {\\n      let provinceLength = this.provinceList.length;   //所有的省长度\\n      let provinceCheckedLength = this.listQuery.provinceID.length  //当前选中的省长度\\n      let cityCheckedLength = this.cityChecked.length;  //当前选中的市长度\\n      let city = []\\n      this.provinceList.forEach(item => {\\n        item.city.forEach(v => {\\n          city.push(v)\\n        })\\n      })\\n      return provinceLength == provinceCheckedLength && city.length == cityCheckedLength\\n    }\\n  },\\n\\n\\n  methods: {\\n    paging (e) {\\n      this.page = e;\\n      this.init()\\n    },\\n    async init () {\\n      let [list, getAreaList] = await Promise.all([this.getList(), this.getArea()])\\n      this.list = list.data.data.list || []\\n      this.pageCount = list.data.data.rows || 1;\\n      this.provinceList = getAreaList || []\\n    },\\n    async getList () {\\n      return await this.$axios.post('admin/SystemSetup/systemList', { token: this.token, page: this.page })\\n    },\\n    async openAdd (checked, defaultData) {  //获取全部省\\n      this.provinceList = this.areaWhetherChecked(true)\\n      this.checkAll = checked\\n    },\\n    getArea () {    //获取地区\\n      return new Promise(async (resolve, reject) => {\\n        try {\\n          let data = await getPro();\\n          data.forEach(async (item, index) => {\\n            let city = await GET_City(item.id)\\n            city.forEach(v => {\\n              v = Object.assign(v)\\n            })\\n            item = Object.assign(item, { city: city })\\n          })\\n          resolve(data)\\n        } catch (error) {\\n          reject(error)\\n        }\\n      })\\n    },\\n    areaWhetherChecked (checked) {   //checked 是否全选\\n      let provinceList = this.provinceList\\n      provinceList.forEach(item => {\\n        item = Object.assign(item, { checked: checked });\\n        item.city.forEach(v => {\\n          v = Object.assign(v, { checked: checked })\\n          if (checked) {\\n            this.cityChecked.push(v.id)\\n          }\\n        })\\n        if (checked) {\\n          this.listQuery.provinceID.push(item.id)\\n        }\\n      })\\n      return provinceList;\\n    },\\n\\n\\n    defaultData (row) {  //修改       默认数据\\n      this.areaWhetherChecked(false)\\n      let province = row.province;\\n      let provinceID = [];\\n      let cityID = []\\n      Object.keys(province).forEach(key => {   //获取需要默认选中的id\\n        let province_id = province[key].province_id;\\n        let city_id = province[key].city_id\\n        if (province_id) {\\n          provinceID.push(province_id)\\n        }\\n        if (city_id) {\\n          cityID.push(...city_id)\\n        }\\n      })\\n      let provinceList = this.provinceList\\n      provinceList.forEach(item => {   //根据选中的id匹配 进行设置选中\\n        provinceID.forEach(v => {\\n          if (item.id == v) {\\n            item.checked = true\\n          }\\n        })\\n        item.city.forEach(v => {\\n          cityID.forEach(e => {\\n            if (v.id == e) {\\n              v.checked = true\\n            }\\n          })\\n        })\\n      })\\n      this.provinceList = province[0].province_name == '全国' ? this.areaWhetherChecked(true) : provinceList  //重新渲染\\n      console.log(this.provinceList)\\n      let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();   //获取选中的省id 和选中的市id\\n      this.$nextTick(() => {\\n        this.listQuery = Object.assign(this.listQuery, { company: row.company, type: row.type, photo: row.photo, provinceID: provinceCheckedID, id: row.id, type_channel: row.type_channel })   //设置省默认选中状态\\n      })\\n      this.cityChecked = cityCheckedId  //设置市默认选中状态\\n      this.isIndeterminate = provinceCheckedID.length < this.provinceList.length && provinceCheckedID.length > 0\\n      this.checkAll = province[0].province_name == '全国' ? true : provinceID.length == this.provinceList.length;\\n    },\\n\\n\\n    handleCheckAllChange (val) {  //地区全选功能\\n      let provinceList = [];\\n      let provinceID = []\\n      this.provinceList.forEach((el, index) => {  //获取所有省id  \\n        this.provinceList[index].checked = val;\\n        el.city.forEach((item, i) => {\\n          this.provinceList[index].city[i].checked = this.checkAll\\n        })\\n        provinceID.push(el.id)\\n      });\\n      let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();\\n      this.listQuery.provinceID = provinceCheckedID;\\n      this.cityChecked = cityCheckedId\\n      this.isIndeterminate = false;\\n    },\\n    handleCheckedCitiesChange (v, e, index) {   //当前省操作  v 代表当时省是否选中  e event对象  index 当前省的下标\\n      this.provinceList[index].checked = v      // 设置当前的省的选中状态\\n      let length = this.listQuery.provinceID.length;   //当前省选中的长度\\n      this.provinceList[index].city.forEach((item, i) => {\\n        this.provinceList[index].city[i].checked = v\\n      })\\n      let { cityCheckedId } = this.getAreaCheckedID();\\n      this.cityChecked = cityCheckedId  //市默认选中状态\\n      this.isIndeterminate = length < this.provinceList.length && length > 0;      //判断当前省选中的长度是否小于当前省的长度并且当前选中省的长度大于0  如果条件成立设置全选的按钮的状态\\n      console.log(length)\\n      this.checkAll = length == this.provinceList.length     //当前选中省的长度如果等于当前省的长度, 省全选按钮勾选\\n\\n    },\\n\\n    //获取市\\n    async getCity (id, index, e) {\\n      this.provinceIndex = index //当前选择的省下标\\n      this.currentCity = this.provinceList[index].city   //当前省下面的市\\n      this.cityVisible = true;   //是否显示市详情弹框\\n      this.cityList = this.provinceList[index].city   //获取当前市\\n      let currentCityLength = this.currentCity.length;    //当前市的长度\\n      let { cityCheckedId } = this.getAreaCheckedID();   //获取已选中市的id\\n      this.cityChecked = cityCheckedId    //设置市默认选中状态\\n      let cityCheckedLength = this.cityCheckedLength(this.currentCity)    //当前市选中的长度\\n      this.cityCheckAll = this.provinceList[index].checked ? cityCheckedLength == currentCityLength : false  //用当前市和当前选中市进行判断如果当前市的长度不等于当前选中的市的长度,则市全选不勾选,  相反如果等于全选按钮勾选\\n\\n\\n    },\\n\\n    cityCheckedLength (currentCity) {    //当前选中的市的长度\\n      return currentCity.filter(item => item.checked).length;\\n    },\\n\\n    // 市全选操作\\n    cityCheckAllChange (val) {  //市 是否全选  val表示是否全选\\n      let provinceIndex = this.provinceIndex     //获取当前选中省的下标\\n      let cityID = []\\n      this.provinceList[provinceIndex].city.forEach((item, index) => {\\n        this.provinceList[provinceIndex].city[index].checked = val    //如果var等于true表示全选,把当前选中省下面的所有市改成选中状态,相反则改成非选中状态\\n        cityID.push(item.id)\\n      })\\n      this.provinceList[provinceIndex].checked = val\\n      let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();   //获取当前选中市\\n      this.listQuery.provinceID = provinceCheckedID\\n      this.cityChecked = val ? this.provinceList[provinceIndex].checked ? cityCheckedId : cityID : []   //默认市的选中\\n\\n      this.isIndeterminate = provinceCheckedID.length < this.provinceList.length && provinceCheckedID.length > 0\\n\\n\\n    },\\n\\n    getAreaCheckedID () {  //获取选中的省id和市id\\n      let provinceCheckedID = [];\\n      let cityCheckedId = []\\n      this.provinceList.forEach(item => {\\n        if (item.checked) {  //当前省是否选择\\n          item.city.forEach(v => {\\n            if (v.checked) {  //当前市是否选中\\n              cityCheckedId.push(v.id)  //获取当前选中的市id\\n            }\\n          })\\n          provinceCheckedID.push(item.id)   //获取当前选中的省id\\n        }\\n      })\\n\\n      return {\\n        provinceCheckedID,\\n        cityCheckedId\\n      }\\n    },\\n    //当前市的操作\\n    cityChange (v, e, index) { // v:当前市是否被选中 e:event对象\\n      this.cityList[index].checked = v;\\n      let cityCheckedLength = this.cityCheckedLength(this.currentCity);\\n      this.cityCheckAll = cityCheckedLength == this.currentCity.length;\\n      console.log(cityCheckedLength)\\n\\n      this.provinceList[this.provinceIndex].checked = cityCheckedLength == 0 ? false : true\\n\\n      let { provinceCheckedID } = this.getAreaCheckedID();\\n      this.listQuery.provinceID = provinceCheckedID;\\n      console.log(cityCheckedLength, 'cityCheckedLength', '-----', this.currentCity.length)\\n      this.isIndeterminate = cityCheckedLength < this.currentCity.length && cityCheckedLength > 0\\n\\n    },\\n    handleSuccess (res) {  //上传成功\\n      this.listQuery = Object.assign({}, this.listQuery, { photo: res })\\n    },\\n    add () {  //添加\\n      console.log(this.isAllChecked)\\n      this.$refs.form.validate(async (valid) => {\\n        if (valid) {\\n          try {\\n            this.loading = true\\n            let data = (({ company, type, photo, type_channel }) => ({ company, type, photo, type_channel }))(this.listQuery);\\n            let province = this.cityChecked && this.cityChecked.length > 0 ? this.cityChecked.join(',') : ''\\n            const res = await this.$axios.post('admin/SystemSetup/addGenre', Object.assign({}, data, { token: this.token, types: 1, province: this.isAllChecked ? 1 : province }))\\n            this.loading = false\\n            if (res.data.code == 1) {\\n              this.$message({ message: res.data.msg, type: 'success' })\\n              this.addVisible = false\\n              this.init()\\n            } else {\\n              this.$message.error(res.data.msg)\\n            }\\n          } catch (error) {\\n            this.loading = false\\n            throw (error)\\n          }\\n        }\\n      })\\n    },\\n    //修改\\n    Modify () {\\n      this.$refs.form.validate(async (valid) => {\\n        if (valid) {\\n          try {\\n            this.loading = true\\n            let data = (({ company, type, photo, id, type_channel }) => ({ company, type, photo, id, type_channel }))(this.listQuery);\\n            let province = this.cityChecked && this.cityChecked.length > 0 ? this.cityChecked.join(',') : []\\n            const res = await this.$axios.post('admin/SystemSetup/updateInfo', Object.assign({}, data, { token: this.token, types: 1, province: this.isAllChecked ? 1 : province }))\\n            this.loading = false\\n            if (res.data.code == 1) {\\n              this.$message({ message: res.data.msg, type: 'success' })\\n              this.addVisible = false\\n              this.init()\\n            } else {\\n              this.$message.error(res.data.msg)\\n            }\\n          } catch (error) {\\n            this.loading = false\\n            throw (error)\\n          }\\n        }\\n      })\\n    },\\n    //设置 显示 隐藏\\n    async Setup (row) {\\n      try {\\n        const res = await this.$axios.post('admin/SystemSetup/updateStatus', { token: this.token, id: row.id, status: row.status })\\n        if (res.data.code == 1) {\\n          this.$message({ message: res.data.msg, type: 'success' })\\n          this.init()\\n        } else {\\n          this.$message.error(res.data.msg)\\n        }\\n      } catch (error) {\\n        throw (error)\\n      }\\n    },\\n    erAuth () {  //权限匹配\\n      var id = this.$route.query.id;\\n      this.curId = id;\\n      this.$axios.post('admin/Auth/erAuth', {\\n        token: window.sessionStorage.getItem('bbytoken'),\\n        id: id\\n      })\\n        .then(res => {\\n          if (res.data.code == 1) {\\n            var arr = res.data.data;\\n            for (var i = 0; i < arr.length; i++) {\\n              if (arr[i].son) {\\n                if (arr[i].name == '渠道客户服务') {\\n                  this.seCurId = arr[i].id;\\n                  this.threeAuthList = arr[i].son;\\n                }\\n                for (var j = 0; j < arr[i].son.length; j++) {\\n                  if (arr[i].action != arr[i].son[j].action) {\\n                    arr[i].action = arr[i].son[0].action;\\n                  }\\n                  if (arr[i].son[j].name == '保险公司' && arr[i].name == '渠道客户服务') {\\n                    this.thCurId = arr[i].son[j].id;\\n                  }\\n                }\\n              }\\n            }\\n            this.authList = arr;\\n          } else {\\n            this.$alert(res.data.msg, '提示', { type: 'error' });\\n          }\\n        })\\n        .catch(err => {\\n          alert(err);\\n        })\\n    }\\n  },\\n  mounted () {\\n    this.erAuth();\\n    this.init();\\n  },\\n}\\n</script>\\n<style scoped>\\n.ellipsis {\\n  width: 150px;\\n  overflow: hidden;\\n  text-overflow: ellipsis;\\n  display: -webkit-box;\\n  -webkit-box-orient: vertical;\\n  -webkit-line-clamp: 2;\\n}\\n.areaDetails {\\n  max-height: 300px;\\n  min-height: 100px;\\n  overflow: auto;\\n}\\n.areaDetails .area {\\n  padding: 10px 0;\\n  border-bottom: 1px solid #cccccc;\\n}\\n.areaDetails .province {\\n  font-size: 15px;\\n  font-weight: 600;\\n}\\n.img {\\n  width: 70px;\\n  height: 70px;\\n}\\n.input {\\n  width: 50%;\\n}\\n.laybox2 ul {\\n  margin: 33px auto;\\n  border-bottom: 1px dashed #04bbfc;\\n}\\n\\n.laybox2 {\\n  padding: 60px;\\n  font-size: 16px;\\n}\\n\\n.laybox2 li {\\n  width: 300px;\\n  text-align: left;\\n  margin: 33px auto;\\n}\\n\\n.t-c:after {\\n  content: \\\"\\\";\\n  display: block;\\n  height: 0;\\n  clear: both;\\n}\\n\\n.bot > div {\\n  position: relative;\\n}\\n\\ndiv.bot {\\n  margin: 45px auto 35px auto;\\n  height: 100px;\\n}\\n\\ndiv.bot span {\\n  display: inline-block;\\n  width: 20%;\\n}\\n\\ndiv.bot input {\\n  display: inline-block;\\n  width: 55%;\\n  outline: none;\\n  border: none;\\n  border-bottom: 1px solid #aaa;\\n}\\n\\ndiv.bot button {\\n  width: 110px;\\n  height: 36px;\\n  margin-left: -55px;\\n  position: absolute;\\n  border-radius: 18px;\\n  box-shadow: 4px 0px 6px rgba(177, 42, 19, 0.2);\\n  border: none;\\n  color: #fff;\\n  left: 50%;\\n  top: 60px;\\n}\\n\\nbutton.reject {\\n  background: rgba(237, 81, 55, 1);\\n  margin-right: 30%;\\n}\\n\\nbutton.pass {\\n  background-color: #20a0ff;\\n}\\n\\n.left {\\n  float: left;\\n  width: 50%;\\n}\\n\\n.right {\\n  float: right;\\n  width: 50%;\\n}\\n.nowrap {\\n  width: 120px !important;\\n  text-align: center;\\n  white-space: nowrap; /*规定文本不换行**/\\n  text-overflow: ellipsis; /**显示省略符号来代表被修剪的文本。*/\\n  overflow: hidden;\\n  margin: 0 auto;\\n}\\n.regionDetail >>> .el-dialog__title {\\n  font-size: 22px;\\n}\\n.regionDetail >>> .el-dialog__body {\\n  padding: 0px 25px 30px;\\n  border-top: solid 2px #eee;\\n}\\n\\n>>> .el-dialog {\\n  min-height: 300px;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-2df4eec8\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Setup/channel/insurance.vue\n// module id = lFty\n// module chunks = 5","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-sap.js\n// module id = uqUo\n// module chunks = 5 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2df4eec8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./insurance.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"565e5135\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2df4eec8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./insurance.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2df4eec8\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./insurance.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-2df4eec8\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Setup/channel/insurance.vue\n// module id = vumf\n// module chunks = 5"],"sourceRoot":""}
{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/es6.object.keys.js","webpack:///./src/pages/Setup/channel/Receipt.vue?4ee4","webpack:///src/pages/Setup/channel/Receipt.vue","webpack:///./src/pages/Setup/channel/Receipt.vue?d7d4","webpack:///./src/pages/Setup/channel/Receipt.vue","webpack:///./node_modules/babel-runtime/core-js/object/keys.js","webpack:///./src/pages/Setup/channel/Receipt.vue?3180","webpack:///./node_modules/core-js/library/fn/object/keys.js","webpack:///./node_modules/core-js/library/modules/_object-sap.js"],"names":["toObject","__webpack_require__","$keys","it","content","module","i","locals","exports","Receipt","data","list","token","window","sessionStorage","getItem","page","pageCount","authList","uploadUrl","this","baseURL","threeAuthList","addVisible","loading","province","listQuery","company","type_channel","type","provinceID","state","provinceList","isIndeterminate","checkAll","rules","required","message","trigger","cityList","cityVisible","cityIsIndeterminate","cityCheckAll","cityChecked","cityID","provinceIndex","currentCity","computed","isAllChecked","provinceLength","length","provinceCheckedLength","cityCheckedLength","city","forEach","item","v","push","methods","paging","e","init","_this","asyncToGenerator_default","regenerator_default","a","mark","_callee","_ref","_ref2","getAreaList","wrap","_context","prev","next","promise_default","all","getList","getArea","sent","slicedToArray_default","rows","stop","_this2","_callee2","_context2","$axios","post","abrupt","openAdd","checked","defaultData","_this3","_callee3","_context3","areaWhetherChecked","_ref3","_this4","_callee5","resolve","reject","_context5","Object","utils","_ref4","_callee4","index","_context4","id","assign_default","_x3","_x4","apply","arguments","t0","_x","_x2","_this5","row","_this6","keys_default","key","province_id","city_id","toConsumableArray_default","_getAreaCheckedID","getAreaCheckedID","provinceCheckedID","cityCheckedId","$nextTick","photo","handleCheckAllChange","val","_this7","el","_getAreaCheckedID2","handleCheckedCitiesChange","_this8","console","log","getCity","_this9","_callee6","currentCityLength","_getAreaCheckedID4","_context6","filter","cityCheckAllChange","_this10","_getAreaCheckedID5","cityChange","handleSuccess","res","add","_ref5","_this11","$refs","form","validate","_callee7","valid","_context7","_ref6","join","types","code","$message","msg","error","_x5","Modify","_ref7","_this12","_callee8","_context8","_ref8","_x6","Setup","_this13","_callee9","_context9","status","erAuth","_this14","$route","query","curId","then","arr","son","name","seCurId","j","action","thCurId","$alert","catch","err","alert","mounted","render","_vm","_h","$createElement","_c","_self","_l","class","attrs","to","path","v-key","_v","_s","staticClass","staticStyle","float","margin","on","click","$event","margin-left","placeholder","change","model","value","callback","$$v","expression","label","align","prop","scopedSlots","_u","fn","scope","placement","width","slot","text-align","loat","province_name","city_name","line-height","font-size","active-value","inactive-value","active-color","inactive-color","$set","size","page-count","center","title","visible","update:visible","close","resetFields","ref","label-width","indeterminate","preventDefault","min-height","append-to-body","margin-bottom","_withStripped","esExports","staticRenderFns","channel_Receipt","disposed","Component","normalizeComponent","ssrContext","options","__file","__webpack_exports__","default","__esModule","version","sources","names","mappings","file","sourcesContent","sourceRoot","keys","$export","core","fails","KEY","exec","exp","S","F"],"mappings":"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","file":"static/js/6.13675e5725ad44846b39.js","sourcesContent":["// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.keys.js\n// module id = Cdx3\n// module chunks = 5 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1be22086\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Receipt.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"5c7881ec\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1be22086\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Receipt.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1be22086\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Receipt.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-1be22086\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Setup/channel/Receipt.vue\n// module id = FkYf\n// module chunks = 6","<template>\r\n  <div>\r\n    <ctbHead>\r\n      <router-link :class=\"seCurId==item.id? 'cur':''\"\r\n                   v-for=\"item in authList\"\r\n                   :key=\"item.id\"\r\n                   :to=\"{path:item.action,query:{id:curId}}\"\r\n                   :v-key=\"item.id\">\r\n        {{item.name}}\r\n      </router-link>\r\n    </ctbHead>\r\n    <div class=\"container\">\r\n      <div class=\"quote\">\r\n        <div class=\"quote-ele\">\r\n          <i></i>系统设置-免费保养设置-领卡渠道\r\n          <el-button type=\"primary\"\r\n                     style=\"float:right;margin:20px 40px 0 0\"\r\n                     @click=\"addVisible=true,state=1,openAdd(true)\">添加</el-button>\r\n        </div>\r\n        <div class=\"quote-nav\">\r\n          <router-link :class=\"thCurId==item.id? 'cur':''\"\r\n                       v-for=\"item in threeAuthList\"\r\n                       :key=\"item.id\"\r\n                       :to=\"{path:item.action,query:{id:curId}}\">\r\n            {{item.name}}\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n      <div style=\"margin-left:20px\">\r\n        <el-select v-model=\"province\"\r\n                   placeholder=\"请选择所查询的地区\"\r\n                   @change=\"page=1,init()\">\r\n          <el-option value=\"1\"\r\n                     label=\"全国\">全国</el-option>\r\n          <el-option v-for=\"(item,index) in provinceList\"\r\n                     :key=\"index\"\r\n                     :label=\"item.name\"\r\n                     :value=\"item.id\"></el-option>\r\n        </el-select>\r\n      </div>\r\n      <el-table :data=\"list\">\r\n        <!-- <el-table-column label=\"图片\"\r\n                         align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <img :src=\"scope.row.photo\"\r\n                 class=\"img\">\r\n          </template>\r\n        </el-table-column> -->\r\n        <el-table-column align=\"center\"\r\n                         prop=\"company\"\r\n                         label=\"名称\">\r\n\r\n        </el-table-column>\r\n        <!-- <el-table-column label=\"类型\"\r\n                         align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            {{scope.row.type==1 ? '五折养护' : '单次免费'}}\r\n          </template>\r\n        </el-table-column> -->\r\n        <el-table-column align=\"center\"\r\n                         label=\"地区\">\r\n          <template slot-scope=\"scope\">\r\n            <el-popover placement=\"bottom\"\r\n                        width=\"400\"\r\n                        trigger=\"click\">\r\n              <el-button type=\"text\"\r\n                         slot=\"reference\">详情</el-button>\r\n              <div class=\"areaDetails\">\r\n                <h4 style=\"text-align:center\">地区详情</h4>\r\n                <div v-if=\"scope.row.province\">\r\n                  <span style=\"loat:left;width:80%;\">\r\n                    <div v-for=\"(item,index) in scope.row.province\"\r\n                         :key=\"index\"\r\n                         class=\"area\">\r\n                      <p class=\"province\"> {{item.province_name}}</p>\r\n                      <p class=\"city\">{{item.city_name ? item.city_name.join('、') : ''}}</p>\r\n                    </div>\r\n                  </span>\r\n                </div>\r\n                <div v-else\r\n                     style=\"text-align:center;line-height:100px;font-size:18px\">\r\n                  无\r\n                </div>\r\n              </div>\r\n\r\n            </el-popover>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column align=\"center\"\r\n                         prop=\"create_time\"\r\n                         label=\"创建时间\">\r\n\r\n        </el-table-column>\r\n        <el-table-column label=\"操作/是否显示\"\r\n                         align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <el-switch :active-value='1'\r\n                       :inactive-value='2'\r\n                       active-color=\"#13ce66\"\r\n                       inactive-color=\"#ff4949\"\r\n                       v-model=\"scope.row.status\"\r\n                       @change='Setup(scope.row)'>\r\n\r\n            </el-switch>\r\n            <el-button type=\"primary\"\r\n                       size=\"mini\"\r\n                       style=\"margin-left:10px\"\r\n                       @click=\"addVisible=true,state=2,defaultData(scope.row)\">修改</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"page_center\">\r\n        <paging :page-count=\"pageCount\"\r\n                :page=\"page\"\r\n                @index=\"paging\"></paging>\r\n      </div>\r\n    </div>\r\n    <el-dialog center\r\n               :title=\"state==1 ? '添加': '修改'\"\r\n               :visible.sync=\"addVisible\"\r\n               @close='()=>{\r\n                   $refs.form.resetFields();\r\n                   isIndeterminate = false;\r\n                   listQuery.provinceID =[];\r\n                   cityChecked = [],\r\n                   checkAll=false\r\n               }'>\r\n      <el-form label-width=\"100px\"\r\n               :model=\"listQuery\"\r\n               :rules=\"rules\"\r\n               ref=\"form\">\r\n        <el-form-item label=\"名称:\"\r\n                      prop=\"company\">\r\n          <el-input placeholder=\"请输出名称\"\r\n                    class=\"input\"\r\n                    v-model=\"listQuery.company\" />\r\n        </el-form-item>\r\n        <el-form-item prop=\"type_channel\"\r\n                      label=\"显示类型:\">\r\n          <el-radio-group v-model=\"listQuery.type_channel\">\r\n            <el-radio :label=\"3\">全部</el-radio>\r\n            <el-radio :label=\"1\">保险公司</el-radio>\r\n            <el-radio :label=\"2\">领卡渠道</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"类型:\"\r\n                      prop=\"type\">\r\n          <el-radio v-model=\"listQuery.type\"\r\n                    :label=\"1\">五折养护</el-radio>\r\n          <el-radio v-model=\"listQuery.type\"\r\n                    :label=\"2\">单次免费</el-radio>\r\n        </el-form-item>\r\n        <el-form-item label=\"地区:\"\r\n                      prop=\"provinceID\">\r\n          <el-checkbox :indeterminate=\"isIndeterminate\"\r\n                       v-model=\"checkAll\"\r\n                       @change=\"handleCheckAllChange\">全选</el-checkbox>\r\n          <div style=\"margin: 15px 0;\"></div>\r\n\r\n          <el-checkbox v-for=\"(item,index) in provinceList\"\r\n                       style=\"width:70px\"\r\n                       :label=\"item.id\"\r\n                       :key=\"item.id\"\r\n                       v-model=\"listQuery.provinceID\"\r\n                       :indeterminate=\"item.isIndeterminate\"\r\n                       @change=\"((val,$event)=>handleCheckedCitiesChange(val,$event,index))\">\r\n            <p @click.prevent=\"getCity(item.id,index,$event)\">\r\n              {{item.name}}\r\n            </p>\r\n\r\n          </el-checkbox>\r\n\r\n        </el-form-item>\r\n        <!-- <el-form-item label=\"图片:\"\r\n                      prop=\"photo\">\r\n          <el-upload :action=\"`${uploadUrl}admin/SystemSetup/uploadPic`\"\r\n                     list-type=\"picture-card\"\r\n                     :on-success='handleSuccess'\r\n                     :data=\"{token:token}\"\r\n                     :file-list=\"listQuery.photo  ?  [{url:listQuery.photo}] : []\"\r\n                     name=\"image\"\r\n                     :limit='1'>\r\n\r\n            <i class=\"el-icon-plus\"></i>\r\n          </el-upload>\r\n        </el-form-item> -->\r\n        <el-form-item>\r\n          <el-button type=\"primary\"\r\n                     @click=\"state==1? add() : Modify()\"\r\n                     :loading=\"loading\">{{state==1 ? '添加' : '修改'}}</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <el-dialog title=\"市详情\"\r\n                 :visible.sync=\"cityVisible\"\r\n                 append-to-body\r\n                 center\r\n                 width=\"40%\"\r\n                 style=\"min-height:300px !important\">\r\n        <div style=\"margin:0 auto;width:78%\">\r\n          <el-checkbox :indeterminate=\"cityIsIndeterminate\"\r\n                       v-model=\"cityCheckAll\"\r\n                       @change=\"cityCheckAllChange\">全选</el-checkbox>\r\n          <div style=\"margin: 15px 0;\"></div>\r\n          <el-checkbox v-for=\"(item,index) in cityList\"\r\n                       :key=\"item.id\"\r\n                       :label=\"item.id\"\r\n                       v-model=\"cityChecked\"\r\n                       style=\"margin-bottom:20px;width:150px\"\r\n                       @change=\"((value,$event)=>cityChange(value,$event,index))\">\r\n            {{item.name}}\r\n          </el-checkbox>\r\n        </div>\r\n\r\n      </el-dialog>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script type=\"text/ecmascript-6\">\r\nimport { getPro, GET_City } from '@/utils/index'\r\nexport default {\r\n  data () {\r\n    return {\r\n      list: [],\r\n      token: window.sessionStorage.getItem('bbytoken'),\r\n      page: 0,\r\n      pageCount: 0,\r\n      authList: [],\r\n      uploadUrl: this.baseURL,\r\n      threeAuthList: [],\r\n      addVisible: false,\r\n      loading: false,\r\n      province: '',\r\n      listQuery: {\r\n        company: '',\r\n        type_channel: 2,\r\n        type: 2,\r\n        // photo: '',\r\n        provinceID: [],\r\n      },\r\n      state: 1, // 1 添加 2 修改\r\n      provinceList: [],\r\n      isIndeterminate: false,  //省是否全选中\r\n      checkAll: false,\r\n      rules: {\r\n        company: { required: true, message: '名称不能为空', trigger: 'blur' },\r\n        type: { required: true, message: '请选择类型', trigger: 'blur' },\r\n        // photo: { required: true, message: '请上传图片', trigger: 'blur' },\r\n        provinceID: { required: true, message: '请选择区域', trigger: 'blur' },\r\n        type_channel: { required: true, message: '请选择显示类型', trigger: 'blur' }\r\n      },\r\n      cityList: [], //市列表\r\n      cityVisible: false, //是否显示市详情 默认不显示\r\n      cityIsIndeterminate: false,\r\n      cityCheckAll: false,\r\n      cityChecked: [],\r\n      provinceID: [],//所有省id\r\n      cityID: [], //所有市id\r\n      provinceIndex: 0, //当前选中的省下标\r\n      currentCity: [],  //当前选择省下面的市\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    isAllChecked () {\r\n      let provinceLength = this.provinceList.length;   //所有的省长度\r\n      let provinceCheckedLength = this.listQuery.provinceID.length  //当前选中的省长度\r\n      let cityCheckedLength = this.cityChecked.length;  //当前选中的市长度\r\n      let city = []\r\n      this.provinceList.forEach(item => {\r\n        item.city.forEach(v => {\r\n          city.push(v)\r\n        })\r\n      })\r\n      return provinceLength == provinceCheckedLength && city.length == cityCheckedLength\r\n    }\r\n  },\r\n\r\n\r\n  methods: {\r\n    paging (e) {\r\n      this.page = e;\r\n      this.init()\r\n    },\r\n    async init () {\r\n      let [list, getAreaList] = await Promise.all([this.getList(), this.getArea()])\r\n      this.list = list.data.data.list || []\r\n      this.pageCount = list.data.data.rows || 1;\r\n      this.provinceList = getAreaList || []\r\n    },\r\n    async getList () {\r\n      return await this.$axios.post('admin/SystemSetup/systemLists', { token: this.token, page: this.page, province: this.province })\r\n    },\r\n    async openAdd (checked, defaultData) {  //获取全部省\r\n      this.provinceList = this.areaWhetherChecked(true)\r\n      this.checkAll = checked\r\n    },\r\n    getArea () {    //获取地区\r\n      return new Promise(async (resolve, reject) => {\r\n        try {\r\n          let data = await getPro();\r\n          data.forEach(async (item, index) => {\r\n            let city = await GET_City(item.id)\r\n            city.forEach(v => {\r\n              v = Object.assign(v)\r\n            })\r\n            item = Object.assign(item, { city: city })\r\n          })\r\n          resolve(data)\r\n        } catch (error) {\r\n          reject(error)\r\n        }\r\n      })\r\n    },\r\n    areaWhetherChecked (checked) {   //checked 是否全选\r\n      let provinceList = this.provinceList\r\n      provinceList.forEach(item => {\r\n        item = Object.assign(item, { checked: checked });\r\n        item.city.forEach(v => {\r\n          v = Object.assign(v, { checked: checked })\r\n          if (checked) {\r\n            this.cityChecked.push(v.id)\r\n          }\r\n        })\r\n        if (checked) {\r\n          this.listQuery.provinceID.push(item.id)\r\n        }\r\n      })\r\n      return provinceList;\r\n    },\r\n\r\n\r\n    defaultData (row) {  //修改       默认数据\r\n      this.areaWhetherChecked(false)\r\n      let province = row.province;\r\n      let provinceID = [];\r\n      let cityID = []\r\n      Object.keys(province).forEach(key => {   //获取需要默认选中的id\r\n        let province_id = province[key].province_id;\r\n        let city_id = province[key].city_id\r\n        if (province_id) {\r\n          provinceID.push(province_id)\r\n        }\r\n        if (city_id) {\r\n          cityID.push(...city_id)\r\n        }\r\n      })\r\n      let provinceList = this.provinceList\r\n      provinceList.forEach(item => {   //根据选中的id匹配 进行设置选中\r\n        provinceID.forEach(v => {\r\n          if (item.id == v) {\r\n            item.checked = true\r\n          }\r\n        })\r\n        item.city.forEach(v => {\r\n          cityID.forEach(e => {\r\n            if (v.id == e) {\r\n              v.checked = true\r\n            }\r\n          })\r\n        })\r\n      })\r\n      this.provinceList = provinceList  //重新渲染\r\n      let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();   //获取选中的省id 和选中的市id\r\n      this.$nextTick(() => {\r\n        this.listQuery = Object.assign(this.listQuery, { company: row.company, type: row.type, photo: row.photo, provinceID: provinceCheckedID, id: row.id, type_channel: row.type_channel })   //设置省默认选中状态\r\n      })\r\n      this.cityChecked = cityCheckedId  //设置市默认选中状态\r\n      this.isIndeterminate = provinceCheckedID.length < this.provinceList.length && provinceCheckedID.length > 0\r\n      this.checkAll = provinceID.length == this.provinceList.length;\r\n    },\r\n\r\n\r\n    handleCheckAllChange (val) {  //地区全选功能\r\n      let provinceList = [];\r\n      let provinceID = []\r\n      this.provinceList.forEach((el, index) => {  //获取所有省id  \r\n        this.provinceList[index].checked = val;\r\n        el.city.forEach((item, i) => {\r\n          this.provinceList[index].city[i].checked = this.checkAll\r\n        })\r\n        provinceID.push(el.id)\r\n      });\r\n      let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();\r\n      this.listQuery.provinceID = provinceCheckedID;\r\n      this.cityChecked = cityCheckedId\r\n      this.isIndeterminate = false;\r\n    },\r\n    handleCheckedCitiesChange (v, e, index) {   //当前省操作  v 代表当时省是否选中  e event对象  index 当前省的下标\r\n      this.provinceList[index].checked = v      // 设置当前的省的选中状态\r\n      let length = this.listQuery.provinceID.length;   //当前省选中的长度\r\n      this.provinceList[index].city.forEach((item, i) => {\r\n        this.provinceList[index].city[i].checked = v\r\n      })\r\n      let { cityCheckedId } = this.getAreaCheckedID();\r\n      this.cityChecked = cityCheckedId  //市默认选中状态\r\n      this.isIndeterminate = length < this.provinceList.length && length > 0;      //判断当前省选中的长度是否小于当前省的长度并且当前选中省的长度大于0  如果条件成立设置全选的按钮的状态\r\n      console.log(length)\r\n      this.checkAll = length == this.provinceList.length     //当前选中省的长度如果等于当前省的长度, 省全选按钮勾选\r\n\r\n    },\r\n\r\n    //获取市\r\n    async getCity (id, index, e) {\r\n      this.provinceIndex = index //当前选择的省下标\r\n      this.currentCity = this.provinceList[index].city   //当前省下面的市\r\n      this.cityVisible = true;   //是否显示市详情弹框\r\n      this.cityList = this.provinceList[index].city   //获取当前市\r\n      let currentCityLength = this.currentCity.length;    //当前市的长度\r\n      let { cityCheckedId } = this.getAreaCheckedID();   //获取已选中市的id\r\n      this.cityChecked = cityCheckedId    //设置市默认选中状态\r\n      let cityCheckedLength = this.cityCheckedLength(this.currentCity)    //当前市选中的长度\r\n      this.cityCheckAll = this.provinceList[index].checked ? cityCheckedLength == currentCityLength : false  //用当前市和当前选中市进行判断如果当前市的长度不等于当前选中的市的长度,则市全选不勾选,  相反如果等于全选按钮勾选\r\n\r\n\r\n    },\r\n\r\n    cityCheckedLength (currentCity) {    //当前选中的市的长度\r\n      return currentCity.filter(item => item.checked).length;\r\n    },\r\n\r\n    // 市全选操作\r\n    cityCheckAllChange (val) {  //市 是否全选  val表示是否全选\r\n      let provinceIndex = this.provinceIndex     //获取当前选中省的下标\r\n      let cityID = []\r\n      this.provinceList[provinceIndex].city.forEach((item, index) => {\r\n        this.provinceList[provinceIndex].city[index].checked = val    //如果var等于true表示全选,把当前选中省下面的所有市改成选中状态,相反则改成非选中状态\r\n        cityID.push(item.id)\r\n      })\r\n      this.provinceList[provinceIndex].checked = val\r\n      let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();   //获取当前选中市\r\n      this.listQuery.provinceID = provinceCheckedID\r\n      this.cityChecked = val ? this.provinceList[provinceIndex].checked ? cityCheckedId : cityID : []   //默认市的选中\r\n\r\n      this.isIndeterminate = provinceCheckedID.length < this.provinceList.length && provinceCheckedID.length > 0\r\n\r\n\r\n    },\r\n\r\n    getAreaCheckedID () {  //获取选中的省id和市id\r\n      let provinceCheckedID = [];\r\n      let cityCheckedId = []\r\n      this.provinceList.forEach(item => {\r\n        if (item.checked) {  //当前省是否选择\r\n          item.city.forEach(v => {\r\n            if (v.checked) {  //当前市是否选中\r\n              cityCheckedId.push(v.id)  //获取当前选中的市id\r\n            }\r\n          })\r\n          provinceCheckedID.push(item.id)   //获取当前选中的省id\r\n        }\r\n      })\r\n\r\n      return {\r\n        provinceCheckedID,\r\n        cityCheckedId\r\n      }\r\n    },\r\n    //当前市的操作\r\n    cityChange (v, e, index) { // v:当前市是否被选中 e:event对象\r\n      this.cityList[index].checked = v;\r\n      let cityCheckedLength = this.cityCheckedLength(this.currentCity);\r\n      this.cityCheckAll = cityCheckedLength == this.currentCity.length;\r\n      console.log(cityCheckedLength)\r\n\r\n      this.provinceList[this.provinceIndex].checked = cityCheckedLength == 0 ? false : true\r\n\r\n      let { provinceCheckedID } = this.getAreaCheckedID();\r\n      this.listQuery.provinceID = provinceCheckedID;\r\n      console.log(cityCheckedLength, 'cityCheckedLength', '-----', this.currentCity.length)\r\n      this.isIndeterminate = cityCheckedLength < this.currentCity.length && cityCheckedLength > 0\r\n\r\n    },\r\n    handleSuccess (res) {  //上传成功\r\n      this.listQuery = Object.assign({}, this.listQuery, { photo: res })\r\n    },\r\n    add () {  //添加\r\n      console.log(this.isAllChecked)\r\n      this.$refs.form.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            this.loading = true\r\n            let data = (({ company, type, photo, type_channel }) => ({ company, type, photo, type_channel }))(this.listQuery);\r\n            let province = this.cityChecked && this.cityChecked.length > 0 ? this.cityChecked.join(',') : ''\r\n            const res = await this.$axios.post('admin/SystemSetup/addGenre', Object.assign({}, data, { token: this.token, types: 1, province: this.isAllChecked ? 1 : province }))\r\n            this.loading = false\r\n            if (res.data.code == 1) {\r\n              this.$message({ message: res.data.msg, type: 'success' })\r\n              this.addVisible = false\r\n              this.init()\r\n            } else {\r\n              this.$message.error(res.data.msg)\r\n            }\r\n          } catch (error) {\r\n            this.loading = false\r\n            throw (error)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    //修改\r\n    Modify () {\r\n      this.$refs.form.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            this.loading = true\r\n            let data = (({ company, type, photo, id, type_channel }) => ({ company, type, photo, id, type_channel }))(this.listQuery);\r\n            let province = this.cityChecked && this.cityChecked.length > 0 ? this.cityChecked.join(',') : []\r\n            const res = await this.$axios.post('admin/SystemSetup/updateInfo', Object.assign({}, data, { token: this.token, types: 1, province: this.isAllChecked ? 1 : province }))\r\n            this.loading = false\r\n            if (res.data.code == 1) {\r\n              this.$message({ message: res.data.msg, type: 'success' })\r\n              this.addVisible = false\r\n              this.init()\r\n            } else {\r\n              this.$message.error(res.data.msg)\r\n            }\r\n          } catch (error) {\r\n            this.loading = false\r\n            throw (error)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    //设置 显示 隐藏\r\n    async Setup (row) {\r\n      try {\r\n        const res = await this.$axios.post('admin/SystemSetup/updateStatus', { token: this.token, id: row.id, status: row.status })\r\n        if (res.data.code == 1) {\r\n          this.$message({ message: res.data.msg, type: 'success' })\r\n          this.init()\r\n        } else {\r\n          this.$message.error(res.data.msg)\r\n        }\r\n      } catch (error) {\r\n        throw (error)\r\n      }\r\n    },\r\n    erAuth () {  //权限匹配\r\n      var id = this.$route.query.id;\r\n      this.curId = id;\r\n      this.$axios.post('admin/Auth/erAuth', {\r\n        token: window.sessionStorage.getItem('bbytoken'),\r\n        id: id\r\n      })\r\n        .then(res => {\r\n          if (res.data.code == 1) {\r\n            var arr = res.data.data;\r\n            for (var i = 0; i < arr.length; i++) {\r\n              if (arr[i].son) {\r\n                if (arr[i].name == '免费保养设置') {\r\n                  this.seCurId = arr[i].id;\r\n                  this.threeAuthList = arr[i].son;\r\n                }\r\n                for (var j = 0; j < arr[i].son.length; j++) {\r\n                  if (arr[i].action != arr[i].son[j].action) {\r\n                    arr[i].action = arr[i].son[0].action;\r\n                  }\r\n                  if (arr[i].son[j].name == '领卡渠道' && arr[i].name == '免费保养设置') {\r\n                    this.thCurId = arr[i].son[j].id;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            this.authList = arr;\r\n          } else {\r\n            this.$alert(res.data.msg, '提示', { type: 'error' });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          alert(err);\r\n        })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.erAuth();\r\n    this.init();\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n.ellipsis {\r\n  width: 150px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 2;\r\n}\r\n.areaDetails {\r\n  max-height: 300px;\r\n  min-height: 100px;\r\n  overflow: auto;\r\n}\r\n.areaDetails .area {\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #cccccc;\r\n}\r\n.areaDetails .province {\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n}\r\n.img {\r\n  width: 70px;\r\n  height: 70px;\r\n}\r\n.input {\r\n  width: 50%;\r\n}\r\n.laybox2 ul {\r\n  margin: 33px auto;\r\n  border-bottom: 1px dashed #04bbfc;\r\n}\r\n\r\n.laybox2 {\r\n  padding: 60px;\r\n  font-size: 16px;\r\n}\r\n\r\n.laybox2 li {\r\n  width: 300px;\r\n  text-align: left;\r\n  margin: 33px auto;\r\n}\r\n\r\n.t-c:after {\r\n  content: \"\";\r\n  display: block;\r\n  height: 0;\r\n  clear: both;\r\n}\r\n\r\n.bot > div {\r\n  position: relative;\r\n}\r\n\r\ndiv.bot {\r\n  margin: 45px auto 35px auto;\r\n  height: 100px;\r\n}\r\n\r\ndiv.bot span {\r\n  display: inline-block;\r\n  width: 20%;\r\n}\r\n\r\ndiv.bot input {\r\n  display: inline-block;\r\n  width: 55%;\r\n  outline: none;\r\n  border: none;\r\n  border-bottom: 1px solid #aaa;\r\n}\r\n\r\ndiv.bot button {\r\n  width: 110px;\r\n  height: 36px;\r\n  margin-left: -55px;\r\n  position: absolute;\r\n  border-radius: 18px;\r\n  box-shadow: 4px 0px 6px rgba(177, 42, 19, 0.2);\r\n  border: none;\r\n  color: #fff;\r\n  left: 50%;\r\n  top: 60px;\r\n}\r\n\r\nbutton.reject {\r\n  background: rgba(237, 81, 55, 1);\r\n  margin-right: 30%;\r\n}\r\n\r\nbutton.pass {\r\n  background-color: #20a0ff;\r\n}\r\n\r\n.left {\r\n  float: left;\r\n  width: 50%;\r\n}\r\n\r\n.right {\r\n  float: right;\r\n  width: 50%;\r\n}\r\n.nowrap {\r\n  width: 120px !important;\r\n  text-align: center;\r\n  white-space: nowrap; /*规定文本不换行**/\r\n  text-overflow: ellipsis; /**显示省略符号来代表被修剪的文本。*/\r\n  overflow: hidden;\r\n  margin: 0 auto;\r\n}\r\n.regionDetail >>> .el-dialog__title {\r\n  font-size: 22px;\r\n}\r\n.regionDetail >>> .el-dialog__body {\r\n  padding: 0px 25px 30px;\r\n  border-top: solid 2px #eee;\r\n}\r\n\r\n>>> .el-dialog {\r\n  min-height: 300px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/Setup/channel/Receipt.vue","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"ctbHead\",\n        _vm._l(_vm.authList, function(item) {\n          return _c(\n            \"router-link\",\n            {\n              key: item.id,\n              class: _vm.seCurId == item.id ? \"cur\" : \"\",\n              attrs: {\n                to: { path: item.action, query: { id: _vm.curId } },\n                \"v-key\": item.id\n              }\n            },\n            [_vm._v(\"\\n      \" + _vm._s(item.name) + \"\\n    \")]\n          )\n        }),\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container\" },\n        [\n          _c(\"div\", { staticClass: \"quote\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"quote-ele\" },\n              [\n                _c(\"i\"),\n                _vm._v(\"系统设置-免费保养设置-领卡渠道\\n        \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticStyle: { float: \"right\", margin: \"20px 40px 0 0\" },\n                    attrs: { type: \"primary\" },\n                    on: {\n                      click: function($event) {\n                        ;(_vm.addVisible = true),\n                          (_vm.state = 1),\n                          _vm.openAdd(true)\n                      }\n                    }\n                  },\n                  [_vm._v(\"添加\")]\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"quote-nav\" },\n              _vm._l(_vm.threeAuthList, function(item) {\n                return _c(\n                  \"router-link\",\n                  {\n                    key: item.id,\n                    class: _vm.thCurId == item.id ? \"cur\" : \"\",\n                    attrs: {\n                      to: { path: item.action, query: { id: _vm.curId } }\n                    }\n                  },\n                  [_vm._v(\"\\n          \" + _vm._s(item.name) + \"\\n        \")]\n                )\n              }),\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticStyle: { \"margin-left\": \"20px\" } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: { placeholder: \"请选择所查询的地区\" },\n                  on: {\n                    change: function($event) {\n                      ;(_vm.page = 1), _vm.init()\n                    }\n                  },\n                  model: {\n                    value: _vm.province,\n                    callback: function($$v) {\n                      _vm.province = $$v\n                    },\n                    expression: \"province\"\n                  }\n                },\n                [\n                  _c(\"el-option\", { attrs: { value: \"1\", label: \"全国\" } }, [\n                    _vm._v(\"全国\")\n                  ]),\n                  _vm._v(\" \"),\n                  _vm._l(_vm.provinceList, function(item, index) {\n                    return _c(\"el-option\", {\n                      key: index,\n                      attrs: { label: item.name, value: item.id }\n                    })\n                  })\n                ],\n                2\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-table\",\n            { attrs: { data: _vm.list } },\n            [\n              _c(\"el-table-column\", {\n                attrs: { align: \"center\", prop: \"company\", label: \"名称\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { align: \"center\", label: \"地区\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\n                          \"el-popover\",\n                          {\n                            attrs: {\n                              placement: \"bottom\",\n                              width: \"400\",\n                              trigger: \"click\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"el-button\",\n                              {\n                                attrs: { slot: \"reference\", type: \"text\" },\n                                slot: \"reference\"\n                              },\n                              [_vm._v(\"详情\")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"areaDetails\" }, [\n                              _c(\n                                \"h4\",\n                                { staticStyle: { \"text-align\": \"center\" } },\n                                [_vm._v(\"地区详情\")]\n                              ),\n                              _vm._v(\" \"),\n                              scope.row.province\n                                ? _c(\"div\", [\n                                    _c(\n                                      \"span\",\n                                      {\n                                        staticStyle: {\n                                          loat: \"left\",\n                                          width: \"80%\"\n                                        }\n                                      },\n                                      _vm._l(scope.row.province, function(\n                                        item,\n                                        index\n                                      ) {\n                                        return _c(\n                                          \"div\",\n                                          { key: index, staticClass: \"area\" },\n                                          [\n                                            _c(\n                                              \"p\",\n                                              { staticClass: \"province\" },\n                                              [\n                                                _vm._v(\n                                                  \" \" +\n                                                    _vm._s(item.province_name)\n                                                )\n                                              ]\n                                            ),\n                                            _vm._v(\" \"),\n                                            _c(\"p\", { staticClass: \"city\" }, [\n                                              _vm._v(\n                                                _vm._s(\n                                                  item.city_name\n                                                    ? item.city_name.join(\"、\")\n                                                    : \"\"\n                                                )\n                                              )\n                                            ])\n                                          ]\n                                        )\n                                      }),\n                                      0\n                                    )\n                                  ])\n                                : _c(\n                                    \"div\",\n                                    {\n                                      staticStyle: {\n                                        \"text-align\": \"center\",\n                                        \"line-height\": \"100px\",\n                                        \"font-size\": \"18px\"\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                无\\n              \"\n                                      )\n                                    ]\n                                  )\n                            ])\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  prop: \"create_time\",\n                  label: \"创建时间\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"操作/是否显示\", align: \"center\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"el-switch\", {\n                          attrs: {\n                            \"active-value\": 1,\n                            \"inactive-value\": 2,\n                            \"active-color\": \"#13ce66\",\n                            \"inactive-color\": \"#ff4949\"\n                          },\n                          on: {\n                            change: function($event) {\n                              return _vm.Setup(scope.row)\n                            }\n                          },\n                          model: {\n                            value: scope.row.status,\n                            callback: function($$v) {\n                              _vm.$set(scope.row, \"status\", $$v)\n                            },\n                            expression: \"scope.row.status\"\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-button\",\n                          {\n                            staticStyle: { \"margin-left\": \"10px\" },\n                            attrs: { type: \"primary\", size: \"mini\" },\n                            on: {\n                              click: function($event) {\n                                ;(_vm.addVisible = true),\n                                  (_vm.state = 2),\n                                  _vm.defaultData(scope.row)\n                              }\n                            }\n                          },\n                          [_vm._v(\"修改\")]\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"page_center\" },\n            [\n              _c(\"paging\", {\n                attrs: { \"page-count\": _vm.pageCount, page: _vm.page },\n                on: { index: _vm.paging }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            center: \"\",\n            title: _vm.state == 1 ? \"添加\" : \"修改\",\n            visible: _vm.addVisible\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.addVisible = $event\n            },\n            close: function() {\n              _vm.$refs.form.resetFields()\n              _vm.isIndeterminate = false\n              _vm.listQuery.provinceID = []\n              ;(_vm.cityChecked = []), (_vm.checkAll = false)\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"form\",\n              attrs: {\n                \"label-width\": \"100px\",\n                model: _vm.listQuery,\n                rules: _vm.rules\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"名称:\", prop: \"company\" } },\n                [\n                  _c(\"el-input\", {\n                    staticClass: \"input\",\n                    attrs: { placeholder: \"请输出名称\" },\n                    model: {\n                      value: _vm.listQuery.company,\n                      callback: function($$v) {\n                        _vm.$set(_vm.listQuery, \"company\", $$v)\n                      },\n                      expression: \"listQuery.company\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { prop: \"type_channel\", label: \"显示类型:\" } },\n                [\n                  _c(\n                    \"el-radio-group\",\n                    {\n                      model: {\n                        value: _vm.listQuery.type_channel,\n                        callback: function($$v) {\n                          _vm.$set(_vm.listQuery, \"type_channel\", $$v)\n                        },\n                        expression: \"listQuery.type_channel\"\n                      }\n                    },\n                    [\n                      _c(\"el-radio\", { attrs: { label: 3 } }, [_vm._v(\"全部\")]),\n                      _vm._v(\" \"),\n                      _c(\"el-radio\", { attrs: { label: 1 } }, [\n                        _vm._v(\"保险公司\")\n                      ]),\n                      _vm._v(\" \"),\n                      _c(\"el-radio\", { attrs: { label: 2 } }, [\n                        _vm._v(\"领卡渠道\")\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"类型:\", prop: \"type\" } },\n                [\n                  _c(\n                    \"el-radio\",\n                    {\n                      attrs: { label: 1 },\n                      model: {\n                        value: _vm.listQuery.type,\n                        callback: function($$v) {\n                          _vm.$set(_vm.listQuery, \"type\", $$v)\n                        },\n                        expression: \"listQuery.type\"\n                      }\n                    },\n                    [_vm._v(\"五折养护\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\n                    \"el-radio\",\n                    {\n                      attrs: { label: 2 },\n                      model: {\n                        value: _vm.listQuery.type,\n                        callback: function($$v) {\n                          _vm.$set(_vm.listQuery, \"type\", $$v)\n                        },\n                        expression: \"listQuery.type\"\n                      }\n                    },\n                    [_vm._v(\"单次免费\")]\n                  )\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"地区:\", prop: \"provinceID\" } },\n                [\n                  _c(\n                    \"el-checkbox\",\n                    {\n                      attrs: { indeterminate: _vm.isIndeterminate },\n                      on: { change: _vm.handleCheckAllChange },\n                      model: {\n                        value: _vm.checkAll,\n                        callback: function($$v) {\n                          _vm.checkAll = $$v\n                        },\n                        expression: \"checkAll\"\n                      }\n                    },\n                    [_vm._v(\"全选\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticStyle: { margin: \"15px 0\" } }),\n                  _vm._v(\" \"),\n                  _vm._l(_vm.provinceList, function(item, index) {\n                    return _c(\n                      \"el-checkbox\",\n                      {\n                        key: item.id,\n                        staticStyle: { width: \"70px\" },\n                        attrs: {\n                          label: item.id,\n                          indeterminate: item.isIndeterminate\n                        },\n                        on: {\n                          change: function(val, $event) {\n                            return _vm.handleCheckedCitiesChange(\n                              val,\n                              $event,\n                              index\n                            )\n                          }\n                        },\n                        model: {\n                          value: _vm.listQuery.provinceID,\n                          callback: function($$v) {\n                            _vm.$set(_vm.listQuery, \"provinceID\", $$v)\n                          },\n                          expression: \"listQuery.provinceID\"\n                        }\n                      },\n                      [\n                        _c(\n                          \"p\",\n                          {\n                            on: {\n                              click: function($event) {\n                                $event.preventDefault()\n                                return _vm.getCity(item.id, index, $event)\n                              }\n                            }\n                          },\n                          [\n                            _vm._v(\n                              \"\\n            \" +\n                                _vm._s(item.name) +\n                                \"\\n          \"\n                            )\n                          ]\n                        )\n                      ]\n                    )\n                  })\n                ],\n                2\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\", loading: _vm.loading },\n                      on: {\n                        click: function($event) {\n                          _vm.state == 1 ? _vm.add() : _vm.Modify()\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.state == 1 ? \"添加\" : \"修改\"))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-dialog\",\n            {\n              staticStyle: { \"min-height\": \"300px !important\" },\n              attrs: {\n                title: \"市详情\",\n                visible: _vm.cityVisible,\n                \"append-to-body\": \"\",\n                center: \"\",\n                width: \"40%\"\n              },\n              on: {\n                \"update:visible\": function($event) {\n                  _vm.cityVisible = $event\n                }\n              }\n            },\n            [\n              _c(\n                \"div\",\n                { staticStyle: { margin: \"0 auto\", width: \"78%\" } },\n                [\n                  _c(\n                    \"el-checkbox\",\n                    {\n                      attrs: { indeterminate: _vm.cityIsIndeterminate },\n                      on: { change: _vm.cityCheckAllChange },\n                      model: {\n                        value: _vm.cityCheckAll,\n                        callback: function($$v) {\n                          _vm.cityCheckAll = $$v\n                        },\n                        expression: \"cityCheckAll\"\n                      }\n                    },\n                    [_vm._v(\"全选\")]\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"div\", { staticStyle: { margin: \"15px 0\" } }),\n                  _vm._v(\" \"),\n                  _vm._l(_vm.cityList, function(item, index) {\n                    return _c(\n                      \"el-checkbox\",\n                      {\n                        key: item.id,\n                        staticStyle: {\n                          \"margin-bottom\": \"20px\",\n                          width: \"150px\"\n                        },\n                        attrs: { label: item.id },\n                        on: {\n                          change: function(value, $event) {\n                            return _vm.cityChange(value, $event, index)\n                          }\n                        },\n                        model: {\n                          value: _vm.cityChecked,\n                          callback: function($$v) {\n                            _vm.cityChecked = $$v\n                          },\n                          expression: \"cityChecked\"\n                        }\n                      },\n                      [\n                        _vm._v(\n                          \"\\n          \" + _vm._s(item.name) + \"\\n        \"\n                        )\n                      ]\n                    )\n                  })\n                ],\n                2\n              )\n            ]\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-1be22086\", esExports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1be22086\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/Setup/channel/Receipt.vue\n// module id = null\n// module chunks = ","var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1be22086\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Receipt.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Receipt.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Receipt.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1be22086\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Receipt.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1be22086\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src/pages/Setup/channel/Receipt.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-1be22086\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-1be22086\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Setup/channel/Receipt.vue\n// module id = null\n// module chunks = ","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/keys.js\n// module id = fZjL\n// module chunks = 5 6","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ellipsis[data-v-1be22086] {\\r\\n  width: 150px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  display: -webkit-box;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-line-clamp: 2;\\n}\\n.areaDetails[data-v-1be22086] {\\r\\n  max-height: 300px;\\r\\n  min-height: 100px;\\r\\n  overflow: auto;\\n}\\n.areaDetails .area[data-v-1be22086] {\\r\\n  padding: 10px 0;\\r\\n  border-bottom: 1px solid #cccccc;\\n}\\n.areaDetails .province[data-v-1be22086] {\\r\\n  font-size: 15px;\\r\\n  font-weight: 600;\\n}\\n.img[data-v-1be22086] {\\r\\n  width: 70px;\\r\\n  height: 70px;\\n}\\n.input[data-v-1be22086] {\\r\\n  width: 50%;\\n}\\n.laybox2 ul[data-v-1be22086] {\\r\\n  margin: 33px auto;\\r\\n  border-bottom: 1px dashed #04bbfc;\\n}\\n.laybox2[data-v-1be22086] {\\r\\n  padding: 60px;\\r\\n  font-size: 16px;\\n}\\n.laybox2 li[data-v-1be22086] {\\r\\n  width: 300px;\\r\\n  text-align: left;\\r\\n  margin: 33px auto;\\n}\\n.t-c[data-v-1be22086]:after {\\r\\n  content: \\\"\\\";\\r\\n  display: block;\\r\\n  height: 0;\\r\\n  clear: both;\\n}\\n.bot > div[data-v-1be22086] {\\r\\n  position: relative;\\n}\\ndiv.bot[data-v-1be22086] {\\r\\n  margin: 45px auto 35px auto;\\r\\n  height: 100px;\\n}\\ndiv.bot span[data-v-1be22086] {\\r\\n  display: inline-block;\\r\\n  width: 20%;\\n}\\ndiv.bot input[data-v-1be22086] {\\r\\n  display: inline-block;\\r\\n  width: 55%;\\r\\n  outline: none;\\r\\n  border: none;\\r\\n  border-bottom: 1px solid #aaa;\\n}\\ndiv.bot button[data-v-1be22086] {\\r\\n  width: 110px;\\r\\n  height: 36px;\\r\\n  margin-left: -55px;\\r\\n  position: absolute;\\r\\n  border-radius: 18px;\\r\\n  -webkit-box-shadow: 4px 0px 6px rgba(177, 42, 19, 0.2);\\r\\n          box-shadow: 4px 0px 6px rgba(177, 42, 19, 0.2);\\r\\n  border: none;\\r\\n  color: #fff;\\r\\n  left: 50%;\\r\\n  top: 60px;\\n}\\nbutton.reject[data-v-1be22086] {\\r\\n  background: rgba(237, 81, 55, 1);\\r\\n  margin-right: 30%;\\n}\\nbutton.pass[data-v-1be22086] {\\r\\n  background-color: #20a0ff;\\n}\\n.left[data-v-1be22086] {\\r\\n  float: left;\\r\\n  width: 50%;\\n}\\n.right[data-v-1be22086] {\\r\\n  float: right;\\r\\n  width: 50%;\\n}\\n.nowrap[data-v-1be22086] {\\r\\n  width: 120px !important;\\r\\n  text-align: center;\\r\\n  white-space: nowrap; /*规定文本不换行**/\\r\\n  text-overflow: ellipsis; /**显示省略符号来代表被修剪的文本。*/\\r\\n  overflow: hidden;\\r\\n  margin: 0 auto;\\n}\\n.regionDetail[data-v-1be22086] .el-dialog__title {\\r\\n  font-size: 22px;\\n}\\n.regionDetail[data-v-1be22086] .el-dialog__body {\\r\\n  padding: 0px 25px 30px;\\r\\n  border-top: solid 2px #eee;\\n}\\n[data-v-1be22086] .el-dialog {\\r\\n  min-height: 300px;\\n}\\r\\n\", \"\", {\"version\":3,\"sources\":[\"F:/仲达集团/2020-3-18总后台管理系统/src/pages/Setup/channel/src/pages/Setup/channel/Receipt.vue\"],\"names\":[],\"mappings\":\";AAukBA;EACA,aAAA;EACA,iBAAA;EACA,wBAAA;EACA,qBAAA;EACA,6BAAA;EACA,sBAAA;CACA;AACA;EACA,kBAAA;EACA,kBAAA;EACA,eAAA;CACA;AACA;EACA,gBAAA;EACA,iCAAA;CACA;AACA;EACA,gBAAA;EACA,iBAAA;CACA;AACA;EACA,YAAA;EACA,aAAA;CACA;AACA;EACA,WAAA;CACA;AACA;EACA,kBAAA;EACA,kCAAA;CACA;AAEA;EACA,cAAA;EACA,gBAAA;CACA;AAEA;EACA,aAAA;EACA,iBAAA;EACA,kBAAA;CACA;AAEA;EACA,YAAA;EACA,eAAA;EACA,UAAA;EACA,YAAA;CACA;AAEA;EACA,mBAAA;CACA;AAEA;EACA,4BAAA;EACA,cAAA;CACA;AAEA;EACA,sBAAA;EACA,WAAA;CACA;AAEA;EACA,sBAAA;EACA,WAAA;EACA,cAAA;EACA,aAAA;EACA,8BAAA;CACA;AAEA;EACA,aAAA;EACA,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,oBAAA;EACA,uDAAA;UAAA,+CAAA;EACA,aAAA;EACA,YAAA;EACA,UAAA;EACA,UAAA;CACA;AAEA;EACA,iCAAA;EACA,kBAAA;CACA;AAEA;EACA,0BAAA;CACA;AAEA;EACA,YAAA;EACA,WAAA;CACA;AAEA;EACA,aAAA;EACA,WAAA;CACA;AACA;EACA,wBAAA;EACA,mBAAA;EACA,oBAAA,CAAA,YAAA;EACA,wBAAA,CAAA,qBAAA;EACA,iBAAA;EACA,eAAA;CACA;AACA;EACA,gBAAA;CACA;AACA;EACA,uBAAA;EACA,2BAAA;CACA;AAEA;EACA,kBAAA;CACA\",\"file\":\"Receipt.vue\",\"sourcesContent\":[\"<template>\\r\\n  <div>\\r\\n    <ctbHead>\\r\\n      <router-link :class=\\\"seCurId==item.id? 'cur':''\\\"\\r\\n                   v-for=\\\"item in authList\\\"\\r\\n                   :key=\\\"item.id\\\"\\r\\n                   :to=\\\"{path:item.action,query:{id:curId}}\\\"\\r\\n                   :v-key=\\\"item.id\\\">\\r\\n        {{item.name}}\\r\\n      </router-link>\\r\\n    </ctbHead>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"quote\\\">\\r\\n        <div class=\\\"quote-ele\\\">\\r\\n          <i></i>系统设置-免费保养设置-领卡渠道\\r\\n          <el-button type=\\\"primary\\\"\\r\\n                     style=\\\"float:right;margin:20px 40px 0 0\\\"\\r\\n                     @click=\\\"addVisible=true,state=1,openAdd(true)\\\">添加</el-button>\\r\\n        </div>\\r\\n        <div class=\\\"quote-nav\\\">\\r\\n          <router-link :class=\\\"thCurId==item.id? 'cur':''\\\"\\r\\n                       v-for=\\\"item in threeAuthList\\\"\\r\\n                       :key=\\\"item.id\\\"\\r\\n                       :to=\\\"{path:item.action,query:{id:curId}}\\\">\\r\\n            {{item.name}}\\r\\n          </router-link>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div style=\\\"margin-left:20px\\\">\\r\\n        <el-select v-model=\\\"province\\\"\\r\\n                   placeholder=\\\"请选择所查询的地区\\\"\\r\\n                   @change=\\\"page=1,init()\\\">\\r\\n          <el-option value=\\\"1\\\"\\r\\n                     label=\\\"全国\\\">全国</el-option>\\r\\n          <el-option v-for=\\\"(item,index) in provinceList\\\"\\r\\n                     :key=\\\"index\\\"\\r\\n                     :label=\\\"item.name\\\"\\r\\n                     :value=\\\"item.id\\\"></el-option>\\r\\n        </el-select>\\r\\n      </div>\\r\\n      <el-table :data=\\\"list\\\">\\r\\n        <!-- <el-table-column label=\\\"图片\\\"\\r\\n                         align=\\\"center\\\">\\r\\n          <template slot-scope=\\\"scope\\\">\\r\\n            <img :src=\\\"scope.row.photo\\\"\\r\\n                 class=\\\"img\\\">\\r\\n          </template>\\r\\n        </el-table-column> -->\\r\\n        <el-table-column align=\\\"center\\\"\\r\\n                         prop=\\\"company\\\"\\r\\n                         label=\\\"名称\\\">\\r\\n\\r\\n        </el-table-column>\\r\\n        <!-- <el-table-column label=\\\"类型\\\"\\r\\n                         align=\\\"center\\\">\\r\\n          <template slot-scope=\\\"scope\\\">\\r\\n            {{scope.row.type==1 ? '五折养护' : '单次免费'}}\\r\\n          </template>\\r\\n        </el-table-column> -->\\r\\n        <el-table-column align=\\\"center\\\"\\r\\n                         label=\\\"地区\\\">\\r\\n          <template slot-scope=\\\"scope\\\">\\r\\n            <el-popover placement=\\\"bottom\\\"\\r\\n                        width=\\\"400\\\"\\r\\n                        trigger=\\\"click\\\">\\r\\n              <el-button type=\\\"text\\\"\\r\\n                         slot=\\\"reference\\\">详情</el-button>\\r\\n              <div class=\\\"areaDetails\\\">\\r\\n                <h4 style=\\\"text-align:center\\\">地区详情</h4>\\r\\n                <div v-if=\\\"scope.row.province\\\">\\r\\n                  <span style=\\\"loat:left;width:80%;\\\">\\r\\n                    <div v-for=\\\"(item,index) in scope.row.province\\\"\\r\\n                         :key=\\\"index\\\"\\r\\n                         class=\\\"area\\\">\\r\\n                      <p class=\\\"province\\\"> {{item.province_name}}</p>\\r\\n                      <p class=\\\"city\\\">{{item.city_name ? item.city_name.join('、') : ''}}</p>\\r\\n                    </div>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <div v-else\\r\\n                     style=\\\"text-align:center;line-height:100px;font-size:18px\\\">\\r\\n                  无\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n            </el-popover>\\r\\n          </template>\\r\\n        </el-table-column>\\r\\n        <el-table-column align=\\\"center\\\"\\r\\n                         prop=\\\"create_time\\\"\\r\\n                         label=\\\"创建时间\\\">\\r\\n\\r\\n        </el-table-column>\\r\\n        <el-table-column label=\\\"操作/是否显示\\\"\\r\\n                         align=\\\"center\\\">\\r\\n          <template slot-scope=\\\"scope\\\">\\r\\n            <el-switch :active-value='1'\\r\\n                       :inactive-value='2'\\r\\n                       active-color=\\\"#13ce66\\\"\\r\\n                       inactive-color=\\\"#ff4949\\\"\\r\\n                       v-model=\\\"scope.row.status\\\"\\r\\n                       @change='Setup(scope.row)'>\\r\\n\\r\\n            </el-switch>\\r\\n            <el-button type=\\\"primary\\\"\\r\\n                       size=\\\"mini\\\"\\r\\n                       style=\\\"margin-left:10px\\\"\\r\\n                       @click=\\\"addVisible=true,state=2,defaultData(scope.row)\\\">修改</el-button>\\r\\n          </template>\\r\\n        </el-table-column>\\r\\n      </el-table>\\r\\n\\r\\n      <!-- 分页 -->\\r\\n      <div class=\\\"page_center\\\">\\r\\n        <paging :page-count=\\\"pageCount\\\"\\r\\n                :page=\\\"page\\\"\\r\\n                @index=\\\"paging\\\"></paging>\\r\\n      </div>\\r\\n    </div>\\r\\n    <el-dialog center\\r\\n               :title=\\\"state==1 ? '添加': '修改'\\\"\\r\\n               :visible.sync=\\\"addVisible\\\"\\r\\n               @close='()=>{\\r\\n                   $refs.form.resetFields();\\r\\n                   isIndeterminate = false;\\r\\n                   listQuery.provinceID =[];\\r\\n                   cityChecked = [],\\r\\n                   checkAll=false\\r\\n               }'>\\r\\n      <el-form label-width=\\\"100px\\\"\\r\\n               :model=\\\"listQuery\\\"\\r\\n               :rules=\\\"rules\\\"\\r\\n               ref=\\\"form\\\">\\r\\n        <el-form-item label=\\\"名称:\\\"\\r\\n                      prop=\\\"company\\\">\\r\\n          <el-input placeholder=\\\"请输出名称\\\"\\r\\n                    class=\\\"input\\\"\\r\\n                    v-model=\\\"listQuery.company\\\" />\\r\\n        </el-form-item>\\r\\n        <el-form-item prop=\\\"type_channel\\\"\\r\\n                      label=\\\"显示类型:\\\">\\r\\n          <el-radio-group v-model=\\\"listQuery.type_channel\\\">\\r\\n            <el-radio :label=\\\"3\\\">全部</el-radio>\\r\\n            <el-radio :label=\\\"1\\\">保险公司</el-radio>\\r\\n            <el-radio :label=\\\"2\\\">领卡渠道</el-radio>\\r\\n          </el-radio-group>\\r\\n        </el-form-item>\\r\\n        <el-form-item label=\\\"类型:\\\"\\r\\n                      prop=\\\"type\\\">\\r\\n          <el-radio v-model=\\\"listQuery.type\\\"\\r\\n                    :label=\\\"1\\\">五折养护</el-radio>\\r\\n          <el-radio v-model=\\\"listQuery.type\\\"\\r\\n                    :label=\\\"2\\\">单次免费</el-radio>\\r\\n        </el-form-item>\\r\\n        <el-form-item label=\\\"地区:\\\"\\r\\n                      prop=\\\"provinceID\\\">\\r\\n          <el-checkbox :indeterminate=\\\"isIndeterminate\\\"\\r\\n                       v-model=\\\"checkAll\\\"\\r\\n                       @change=\\\"handleCheckAllChange\\\">全选</el-checkbox>\\r\\n          <div style=\\\"margin: 15px 0;\\\"></div>\\r\\n\\r\\n          <el-checkbox v-for=\\\"(item,index) in provinceList\\\"\\r\\n                       style=\\\"width:70px\\\"\\r\\n                       :label=\\\"item.id\\\"\\r\\n                       :key=\\\"item.id\\\"\\r\\n                       v-model=\\\"listQuery.provinceID\\\"\\r\\n                       :indeterminate=\\\"item.isIndeterminate\\\"\\r\\n                       @change=\\\"((val,$event)=>handleCheckedCitiesChange(val,$event,index))\\\">\\r\\n            <p @click.prevent=\\\"getCity(item.id,index,$event)\\\">\\r\\n              {{item.name}}\\r\\n            </p>\\r\\n\\r\\n          </el-checkbox>\\r\\n\\r\\n        </el-form-item>\\r\\n        <!-- <el-form-item label=\\\"图片:\\\"\\r\\n                      prop=\\\"photo\\\">\\r\\n          <el-upload :action=\\\"`${uploadUrl}admin/SystemSetup/uploadPic`\\\"\\r\\n                     list-type=\\\"picture-card\\\"\\r\\n                     :on-success='handleSuccess'\\r\\n                     :data=\\\"{token:token}\\\"\\r\\n                     :file-list=\\\"listQuery.photo  ?  [{url:listQuery.photo}] : []\\\"\\r\\n                     name=\\\"image\\\"\\r\\n                     :limit='1'>\\r\\n\\r\\n            <i class=\\\"el-icon-plus\\\"></i>\\r\\n          </el-upload>\\r\\n        </el-form-item> -->\\r\\n        <el-form-item>\\r\\n          <el-button type=\\\"primary\\\"\\r\\n                     @click=\\\"state==1? add() : Modify()\\\"\\r\\n                     :loading=\\\"loading\\\">{{state==1 ? '添加' : '修改'}}</el-button>\\r\\n        </el-form-item>\\r\\n      </el-form>\\r\\n\\r\\n      <el-dialog title=\\\"市详情\\\"\\r\\n                 :visible.sync=\\\"cityVisible\\\"\\r\\n                 append-to-body\\r\\n                 center\\r\\n                 width=\\\"40%\\\"\\r\\n                 style=\\\"min-height:300px !important\\\">\\r\\n        <div style=\\\"margin:0 auto;width:78%\\\">\\r\\n          <el-checkbox :indeterminate=\\\"cityIsIndeterminate\\\"\\r\\n                       v-model=\\\"cityCheckAll\\\"\\r\\n                       @change=\\\"cityCheckAllChange\\\">全选</el-checkbox>\\r\\n          <div style=\\\"margin: 15px 0;\\\"></div>\\r\\n          <el-checkbox v-for=\\\"(item,index) in cityList\\\"\\r\\n                       :key=\\\"item.id\\\"\\r\\n                       :label=\\\"item.id\\\"\\r\\n                       v-model=\\\"cityChecked\\\"\\r\\n                       style=\\\"margin-bottom:20px;width:150px\\\"\\r\\n                       @change=\\\"((value,$event)=>cityChange(value,$event,index))\\\">\\r\\n            {{item.name}}\\r\\n          </el-checkbox>\\r\\n        </div>\\r\\n\\r\\n      </el-dialog>\\r\\n    </el-dialog>\\r\\n  </div>\\r\\n</template>\\r\\n<script type=\\\"text/ecmascript-6\\\">\\r\\nimport { getPro, GET_City } from '@/utils/index'\\r\\nexport default {\\r\\n  data () {\\r\\n    return {\\r\\n      list: [],\\r\\n      token: window.sessionStorage.getItem('bbytoken'),\\r\\n      page: 0,\\r\\n      pageCount: 0,\\r\\n      authList: [],\\r\\n      uploadUrl: this.baseURL,\\r\\n      threeAuthList: [],\\r\\n      addVisible: false,\\r\\n      loading: false,\\r\\n      province: '',\\r\\n      listQuery: {\\r\\n        company: '',\\r\\n        type_channel: 2,\\r\\n        type: 2,\\r\\n        // photo: '',\\r\\n        provinceID: [],\\r\\n      },\\r\\n      state: 1, // 1 添加 2 修改\\r\\n      provinceList: [],\\r\\n      isIndeterminate: false,  //省是否全选中\\r\\n      checkAll: false,\\r\\n      rules: {\\r\\n        company: { required: true, message: '名称不能为空', trigger: 'blur' },\\r\\n        type: { required: true, message: '请选择类型', trigger: 'blur' },\\r\\n        // photo: { required: true, message: '请上传图片', trigger: 'blur' },\\r\\n        provinceID: { required: true, message: '请选择区域', trigger: 'blur' },\\r\\n        type_channel: { required: true, message: '请选择显示类型', trigger: 'blur' }\\r\\n      },\\r\\n      cityList: [], //市列表\\r\\n      cityVisible: false, //是否显示市详情 默认不显示\\r\\n      cityIsIndeterminate: false,\\r\\n      cityCheckAll: false,\\r\\n      cityChecked: [],\\r\\n      provinceID: [],//所有省id\\r\\n      cityID: [], //所有市id\\r\\n      provinceIndex: 0, //当前选中的省下标\\r\\n      currentCity: [],  //当前选择省下面的市\\r\\n    }\\r\\n  },\\r\\n\\r\\n  computed: {\\r\\n    isAllChecked () {\\r\\n      let provinceLength = this.provinceList.length;   //所有的省长度\\r\\n      let provinceCheckedLength = this.listQuery.provinceID.length  //当前选中的省长度\\r\\n      let cityCheckedLength = this.cityChecked.length;  //当前选中的市长度\\r\\n      let city = []\\r\\n      this.provinceList.forEach(item => {\\r\\n        item.city.forEach(v => {\\r\\n          city.push(v)\\r\\n        })\\r\\n      })\\r\\n      return provinceLength == provinceCheckedLength && city.length == cityCheckedLength\\r\\n    }\\r\\n  },\\r\\n\\r\\n\\r\\n  methods: {\\r\\n    paging (e) {\\r\\n      this.page = e;\\r\\n      this.init()\\r\\n    },\\r\\n    async init () {\\r\\n      let [list, getAreaList] = await Promise.all([this.getList(), this.getArea()])\\r\\n      this.list = list.data.data.list || []\\r\\n      this.pageCount = list.data.data.rows || 1;\\r\\n      this.provinceList = getAreaList || []\\r\\n    },\\r\\n    async getList () {\\r\\n      return await this.$axios.post('admin/SystemSetup/systemLists', { token: this.token, page: this.page, province: this.province })\\r\\n    },\\r\\n    async openAdd (checked, defaultData) {  //获取全部省\\r\\n      this.provinceList = this.areaWhetherChecked(true)\\r\\n      this.checkAll = checked\\r\\n    },\\r\\n    getArea () {    //获取地区\\r\\n      return new Promise(async (resolve, reject) => {\\r\\n        try {\\r\\n          let data = await getPro();\\r\\n          data.forEach(async (item, index) => {\\r\\n            let city = await GET_City(item.id)\\r\\n            city.forEach(v => {\\r\\n              v = Object.assign(v)\\r\\n            })\\r\\n            item = Object.assign(item, { city: city })\\r\\n          })\\r\\n          resolve(data)\\r\\n        } catch (error) {\\r\\n          reject(error)\\r\\n        }\\r\\n      })\\r\\n    },\\r\\n    areaWhetherChecked (checked) {   //checked 是否全选\\r\\n      let provinceList = this.provinceList\\r\\n      provinceList.forEach(item => {\\r\\n        item = Object.assign(item, { checked: checked });\\r\\n        item.city.forEach(v => {\\r\\n          v = Object.assign(v, { checked: checked })\\r\\n          if (checked) {\\r\\n            this.cityChecked.push(v.id)\\r\\n          }\\r\\n        })\\r\\n        if (checked) {\\r\\n          this.listQuery.provinceID.push(item.id)\\r\\n        }\\r\\n      })\\r\\n      return provinceList;\\r\\n    },\\r\\n\\r\\n\\r\\n    defaultData (row) {  //修改       默认数据\\r\\n      this.areaWhetherChecked(false)\\r\\n      let province = row.province;\\r\\n      let provinceID = [];\\r\\n      let cityID = []\\r\\n      Object.keys(province).forEach(key => {   //获取需要默认选中的id\\r\\n        let province_id = province[key].province_id;\\r\\n        let city_id = province[key].city_id\\r\\n        if (province_id) {\\r\\n          provinceID.push(province_id)\\r\\n        }\\r\\n        if (city_id) {\\r\\n          cityID.push(...city_id)\\r\\n        }\\r\\n      })\\r\\n      let provinceList = this.provinceList\\r\\n      provinceList.forEach(item => {   //根据选中的id匹配 进行设置选中\\r\\n        provinceID.forEach(v => {\\r\\n          if (item.id == v) {\\r\\n            item.checked = true\\r\\n          }\\r\\n        })\\r\\n        item.city.forEach(v => {\\r\\n          cityID.forEach(e => {\\r\\n            if (v.id == e) {\\r\\n              v.checked = true\\r\\n            }\\r\\n          })\\r\\n        })\\r\\n      })\\r\\n      this.provinceList = provinceList  //重新渲染\\r\\n      let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();   //获取选中的省id 和选中的市id\\r\\n      this.$nextTick(() => {\\r\\n        this.listQuery = Object.assign(this.listQuery, { company: row.company, type: row.type, photo: row.photo, provinceID: provinceCheckedID, id: row.id, type_channel: row.type_channel })   //设置省默认选中状态\\r\\n      })\\r\\n      this.cityChecked = cityCheckedId  //设置市默认选中状态\\r\\n      this.isIndeterminate = provinceCheckedID.length < this.provinceList.length && provinceCheckedID.length > 0\\r\\n      this.checkAll = provinceID.length == this.provinceList.length;\\r\\n    },\\r\\n\\r\\n\\r\\n    handleCheckAllChange (val) {  //地区全选功能\\r\\n      let provinceList = [];\\r\\n      let provinceID = []\\r\\n      this.provinceList.forEach((el, index) => {  //获取所有省id  \\r\\n        this.provinceList[index].checked = val;\\r\\n        el.city.forEach((item, i) => {\\r\\n          this.provinceList[index].city[i].checked = this.checkAll\\r\\n        })\\r\\n        provinceID.push(el.id)\\r\\n      });\\r\\n      let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();\\r\\n      this.listQuery.provinceID = provinceCheckedID;\\r\\n      this.cityChecked = cityCheckedId\\r\\n      this.isIndeterminate = false;\\r\\n    },\\r\\n    handleCheckedCitiesChange (v, e, index) {   //当前省操作  v 代表当时省是否选中  e event对象  index 当前省的下标\\r\\n      this.provinceList[index].checked = v      // 设置当前的省的选中状态\\r\\n      let length = this.listQuery.provinceID.length;   //当前省选中的长度\\r\\n      this.provinceList[index].city.forEach((item, i) => {\\r\\n        this.provinceList[index].city[i].checked = v\\r\\n      })\\r\\n      let { cityCheckedId } = this.getAreaCheckedID();\\r\\n      this.cityChecked = cityCheckedId  //市默认选中状态\\r\\n      this.isIndeterminate = length < this.provinceList.length && length > 0;      //判断当前省选中的长度是否小于当前省的长度并且当前选中省的长度大于0  如果条件成立设置全选的按钮的状态\\r\\n      console.log(length)\\r\\n      this.checkAll = length == this.provinceList.length     //当前选中省的长度如果等于当前省的长度, 省全选按钮勾选\\r\\n\\r\\n    },\\r\\n\\r\\n    //获取市\\r\\n    async getCity (id, index, e) {\\r\\n      this.provinceIndex = index //当前选择的省下标\\r\\n      this.currentCity = this.provinceList[index].city   //当前省下面的市\\r\\n      this.cityVisible = true;   //是否显示市详情弹框\\r\\n      this.cityList = this.provinceList[index].city   //获取当前市\\r\\n      let currentCityLength = this.currentCity.length;    //当前市的长度\\r\\n      let { cityCheckedId } = this.getAreaCheckedID();   //获取已选中市的id\\r\\n      this.cityChecked = cityCheckedId    //设置市默认选中状态\\r\\n      let cityCheckedLength = this.cityCheckedLength(this.currentCity)    //当前市选中的长度\\r\\n      this.cityCheckAll = this.provinceList[index].checked ? cityCheckedLength == currentCityLength : false  //用当前市和当前选中市进行判断如果当前市的长度不等于当前选中的市的长度,则市全选不勾选,  相反如果等于全选按钮勾选\\r\\n\\r\\n\\r\\n    },\\r\\n\\r\\n    cityCheckedLength (currentCity) {    //当前选中的市的长度\\r\\n      return currentCity.filter(item => item.checked).length;\\r\\n    },\\r\\n\\r\\n    // 市全选操作\\r\\n    cityCheckAllChange (val) {  //市 是否全选  val表示是否全选\\r\\n      let provinceIndex = this.provinceIndex     //获取当前选中省的下标\\r\\n      let cityID = []\\r\\n      this.provinceList[provinceIndex].city.forEach((item, index) => {\\r\\n        this.provinceList[provinceIndex].city[index].checked = val    //如果var等于true表示全选,把当前选中省下面的所有市改成选中状态,相反则改成非选中状态\\r\\n        cityID.push(item.id)\\r\\n      })\\r\\n      this.provinceList[provinceIndex].checked = val\\r\\n      let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();   //获取当前选中市\\r\\n      this.listQuery.provinceID = provinceCheckedID\\r\\n      this.cityChecked = val ? this.provinceList[provinceIndex].checked ? cityCheckedId : cityID : []   //默认市的选中\\r\\n\\r\\n      this.isIndeterminate = provinceCheckedID.length < this.provinceList.length && provinceCheckedID.length > 0\\r\\n\\r\\n\\r\\n    },\\r\\n\\r\\n    getAreaCheckedID () {  //获取选中的省id和市id\\r\\n      let provinceCheckedID = [];\\r\\n      let cityCheckedId = []\\r\\n      this.provinceList.forEach(item => {\\r\\n        if (item.checked) {  //当前省是否选择\\r\\n          item.city.forEach(v => {\\r\\n            if (v.checked) {  //当前市是否选中\\r\\n              cityCheckedId.push(v.id)  //获取当前选中的市id\\r\\n            }\\r\\n          })\\r\\n          provinceCheckedID.push(item.id)   //获取当前选中的省id\\r\\n        }\\r\\n      })\\r\\n\\r\\n      return {\\r\\n        provinceCheckedID,\\r\\n        cityCheckedId\\r\\n      }\\r\\n    },\\r\\n    //当前市的操作\\r\\n    cityChange (v, e, index) { // v:当前市是否被选中 e:event对象\\r\\n      this.cityList[index].checked = v;\\r\\n      let cityCheckedLength = this.cityCheckedLength(this.currentCity);\\r\\n      this.cityCheckAll = cityCheckedLength == this.currentCity.length;\\r\\n      console.log(cityCheckedLength)\\r\\n\\r\\n      this.provinceList[this.provinceIndex].checked = cityCheckedLength == 0 ? false : true\\r\\n\\r\\n      let { provinceCheckedID } = this.getAreaCheckedID();\\r\\n      this.listQuery.provinceID = provinceCheckedID;\\r\\n      console.log(cityCheckedLength, 'cityCheckedLength', '-----', this.currentCity.length)\\r\\n      this.isIndeterminate = cityCheckedLength < this.currentCity.length && cityCheckedLength > 0\\r\\n\\r\\n    },\\r\\n    handleSuccess (res) {  //上传成功\\r\\n      this.listQuery = Object.assign({}, this.listQuery, { photo: res })\\r\\n    },\\r\\n    add () {  //添加\\r\\n      console.log(this.isAllChecked)\\r\\n      this.$refs.form.validate(async (valid) => {\\r\\n        if (valid) {\\r\\n          try {\\r\\n            this.loading = true\\r\\n            let data = (({ company, type, photo, type_channel }) => ({ company, type, photo, type_channel }))(this.listQuery);\\r\\n            let province = this.cityChecked && this.cityChecked.length > 0 ? this.cityChecked.join(',') : ''\\r\\n            const res = await this.$axios.post('admin/SystemSetup/addGenre', Object.assign({}, data, { token: this.token, types: 1, province: this.isAllChecked ? 1 : province }))\\r\\n            this.loading = false\\r\\n            if (res.data.code == 1) {\\r\\n              this.$message({ message: res.data.msg, type: 'success' })\\r\\n              this.addVisible = false\\r\\n              this.init()\\r\\n            } else {\\r\\n              this.$message.error(res.data.msg)\\r\\n            }\\r\\n          } catch (error) {\\r\\n            this.loading = false\\r\\n            throw (error)\\r\\n          }\\r\\n        }\\r\\n      })\\r\\n    },\\r\\n    //修改\\r\\n    Modify () {\\r\\n      this.$refs.form.validate(async (valid) => {\\r\\n        if (valid) {\\r\\n          try {\\r\\n            this.loading = true\\r\\n            let data = (({ company, type, photo, id, type_channel }) => ({ company, type, photo, id, type_channel }))(this.listQuery);\\r\\n            let province = this.cityChecked && this.cityChecked.length > 0 ? this.cityChecked.join(',') : []\\r\\n            const res = await this.$axios.post('admin/SystemSetup/updateInfo', Object.assign({}, data, { token: this.token, types: 1, province: this.isAllChecked ? 1 : province }))\\r\\n            this.loading = false\\r\\n            if (res.data.code == 1) {\\r\\n              this.$message({ message: res.data.msg, type: 'success' })\\r\\n              this.addVisible = false\\r\\n              this.init()\\r\\n            } else {\\r\\n              this.$message.error(res.data.msg)\\r\\n            }\\r\\n          } catch (error) {\\r\\n            this.loading = false\\r\\n            throw (error)\\r\\n          }\\r\\n        }\\r\\n      })\\r\\n    },\\r\\n    //设置 显示 隐藏\\r\\n    async Setup (row) {\\r\\n      try {\\r\\n        const res = await this.$axios.post('admin/SystemSetup/updateStatus', { token: this.token, id: row.id, status: row.status })\\r\\n        if (res.data.code == 1) {\\r\\n          this.$message({ message: res.data.msg, type: 'success' })\\r\\n          this.init()\\r\\n        } else {\\r\\n          this.$message.error(res.data.msg)\\r\\n        }\\r\\n      } catch (error) {\\r\\n        throw (error)\\r\\n      }\\r\\n    },\\r\\n    erAuth () {  //权限匹配\\r\\n      var id = this.$route.query.id;\\r\\n      this.curId = id;\\r\\n      this.$axios.post('admin/Auth/erAuth', {\\r\\n        token: window.sessionStorage.getItem('bbytoken'),\\r\\n        id: id\\r\\n      })\\r\\n        .then(res => {\\r\\n          if (res.data.code == 1) {\\r\\n            var arr = res.data.data;\\r\\n            for (var i = 0; i < arr.length; i++) {\\r\\n              if (arr[i].son) {\\r\\n                if (arr[i].name == '免费保养设置') {\\r\\n                  this.seCurId = arr[i].id;\\r\\n                  this.threeAuthList = arr[i].son;\\r\\n                }\\r\\n                for (var j = 0; j < arr[i].son.length; j++) {\\r\\n                  if (arr[i].action != arr[i].son[j].action) {\\r\\n                    arr[i].action = arr[i].son[0].action;\\r\\n                  }\\r\\n                  if (arr[i].son[j].name == '领卡渠道' && arr[i].name == '免费保养设置') {\\r\\n                    this.thCurId = arr[i].son[j].id;\\r\\n                  }\\r\\n                }\\r\\n              }\\r\\n            }\\r\\n            this.authList = arr;\\r\\n          } else {\\r\\n            this.$alert(res.data.msg, '提示', { type: 'error' });\\r\\n          }\\r\\n        })\\r\\n        .catch(err => {\\r\\n          alert(err);\\r\\n        })\\r\\n    }\\r\\n  },\\r\\n  mounted () {\\r\\n    this.erAuth();\\r\\n    this.init();\\r\\n  },\\r\\n}\\r\\n</script>\\r\\n<style scoped>\\r\\n.ellipsis {\\r\\n  width: 150px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  display: -webkit-box;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-line-clamp: 2;\\r\\n}\\r\\n.areaDetails {\\r\\n  max-height: 300px;\\r\\n  min-height: 100px;\\r\\n  overflow: auto;\\r\\n}\\r\\n.areaDetails .area {\\r\\n  padding: 10px 0;\\r\\n  border-bottom: 1px solid #cccccc;\\r\\n}\\r\\n.areaDetails .province {\\r\\n  font-size: 15px;\\r\\n  font-weight: 600;\\r\\n}\\r\\n.img {\\r\\n  width: 70px;\\r\\n  height: 70px;\\r\\n}\\r\\n.input {\\r\\n  width: 50%;\\r\\n}\\r\\n.laybox2 ul {\\r\\n  margin: 33px auto;\\r\\n  border-bottom: 1px dashed #04bbfc;\\r\\n}\\r\\n\\r\\n.laybox2 {\\r\\n  padding: 60px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.laybox2 li {\\r\\n  width: 300px;\\r\\n  text-align: left;\\r\\n  margin: 33px auto;\\r\\n}\\r\\n\\r\\n.t-c:after {\\r\\n  content: \\\"\\\";\\r\\n  display: block;\\r\\n  height: 0;\\r\\n  clear: both;\\r\\n}\\r\\n\\r\\n.bot > div {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\ndiv.bot {\\r\\n  margin: 45px auto 35px auto;\\r\\n  height: 100px;\\r\\n}\\r\\n\\r\\ndiv.bot span {\\r\\n  display: inline-block;\\r\\n  width: 20%;\\r\\n}\\r\\n\\r\\ndiv.bot input {\\r\\n  display: inline-block;\\r\\n  width: 55%;\\r\\n  outline: none;\\r\\n  border: none;\\r\\n  border-bottom: 1px solid #aaa;\\r\\n}\\r\\n\\r\\ndiv.bot button {\\r\\n  width: 110px;\\r\\n  height: 36px;\\r\\n  margin-left: -55px;\\r\\n  position: absolute;\\r\\n  border-radius: 18px;\\r\\n  box-shadow: 4px 0px 6px rgba(177, 42, 19, 0.2);\\r\\n  border: none;\\r\\n  color: #fff;\\r\\n  left: 50%;\\r\\n  top: 60px;\\r\\n}\\r\\n\\r\\nbutton.reject {\\r\\n  background: rgba(237, 81, 55, 1);\\r\\n  margin-right: 30%;\\r\\n}\\r\\n\\r\\nbutton.pass {\\r\\n  background-color: #20a0ff;\\r\\n}\\r\\n\\r\\n.left {\\r\\n  float: left;\\r\\n  width: 50%;\\r\\n}\\r\\n\\r\\n.right {\\r\\n  float: right;\\r\\n  width: 50%;\\r\\n}\\r\\n.nowrap {\\r\\n  width: 120px !important;\\r\\n  text-align: center;\\r\\n  white-space: nowrap; /*规定文本不换行**/\\r\\n  text-overflow: ellipsis; /**显示省略符号来代表被修剪的文本。*/\\r\\n  overflow: hidden;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.regionDetail >>> .el-dialog__title {\\r\\n  font-size: 22px;\\r\\n}\\r\\n.regionDetail >>> .el-dialog__body {\\r\\n  padding: 0px 25px 30px;\\r\\n  border-top: solid 2px #eee;\\r\\n}\\r\\n\\r\\n>>> .el-dialog {\\r\\n  min-height: 300px;\\r\\n}\\r\\n</style>\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-1be22086\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Setup/channel/Receipt.vue\n// module id = iOG8\n// module chunks = 6","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/keys.js\n// module id = jFbC\n// module chunks = 5 6","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-sap.js\n// module id = uqUo\n// module chunks = 5 6"],"sourceRoot":""}
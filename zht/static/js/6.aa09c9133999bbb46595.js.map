{"version":3,"sources":["webpack:///./node_modules/core-js/library/modules/es6.object.keys.js","webpack:///./src/pages/Setup/channel/Receipt.vue?4ee4","webpack:///src/pages/Setup/channel/Receipt.vue","webpack:///./src/pages/Setup/channel/Receipt.vue?d7d4","webpack:///./src/pages/Setup/channel/Receipt.vue","webpack:///./node_modules/babel-runtime/core-js/object/keys.js","webpack:///./src/pages/Setup/channel/Receipt.vue?3180","webpack:///./node_modules/core-js/library/fn/object/keys.js","webpack:///./node_modules/core-js/library/modules/_object-sap.js"],"names":["toObject","__webpack_require__","$keys","it","content","module","i","locals","exports","Receipt","data","list","token","window","sessionStorage","getItem","page","pageCount","authList","uploadUrl","this","baseURL","threeAuthList","addVisible","tableLoading","loading","province","listQuery","company","type_channel","type","phone","num","provinceID","state","provinceList","isIndeterminate","checkAll","rules","required","message","trigger","cityList","cityVisible","cityIsIndeterminate","cityCheckAll","cityChecked","cityID","provinceIndex","currentCity","defaultAll","getCheckedKeys","countyList","codeLoading","exportLoading","codeVisible","codeList","codePageCount","codePage","currentCode","cardNum","remainingNum","computed","isAllChecked","provinceLength","length","provinceCheckedLength","cityCheckedLength","city","forEach","item","v","push","watch","listQuery.province_name","deep","handler","name","provinceChange","listQuery.city","cityChange","listQuery.county","methods","paging","e","init","_this","asyncToGenerator_default","regenerator_default","a","mark","_callee","_ref","_ref2","getAreaList","wrap","_context","prev","next","promise_default","all","getList","getArea","sent","slicedToArray_default","rows","stop","_this2","_callee2","_context2","$axios","post","abrupt","openAdd","checked","defaultData","_this3","_callee3","_context3","$nextTick","$refs","tree","setCheckedKeys","_ref3","_this4","_callee5","resolve","reject","_context5","Object","utils","_ref4","_callee4","index","children","_context4","id","label","_x3","_x4","apply","arguments","t0","_x","_x2","checkAllChange","treeCheck","row","_this5","sur_num","iSnational","keys_default","key","province_id","city_id","toConsumableArray_default","province_name","assign_default","handleSuccess","res","photo","_this6","_callee6","cityCheckedId","_context6","getCityCheckedID","includes","add","_ref5","_this7","console","log","form","validate","_callee7","valid","isCheckedAll","_context7","_ref6","address","county","join","types","code","$message","msg","exportCode","error","_x5","Modify","_ref7","_this8","_callee8","_context8","_ref8","_x6","Setup","_this9","_callee9","_context9","status","codeDetails","_this10","_callee10","_context10","createCode","_this11","$confirm","confirmButtonText","cancelButtonText","then","_callee11","_context11","catch","manualExport","location","href","Number","erAuth","_this12","$route","query","curId","arr","son","seCurId","j","action","thCurId","$alert","err","alert","mounted","render","_vm","_h","$createElement","_c","_self","_l","class","attrs","to","path","v-key","_v","_s","staticClass","staticStyle","float","margin","on","click","$event","margin-left","placeholder","change","model","value","callback","$$v","expression","directives","rawName","align","prop","scopedSlots","_u","fn","scope","placement","width","slot","text-align","city_name","line-height","font-size","min-width","active-value","inactive-value","active-color","inactive-color","$set","size","$index","disabled","page-count","center","title","visible","update:visible","close","resetFields","ref","label-width","_e","show-checkbox","node-key","default-checked-keys","props","check","_withStripped","esExports","staticRenderFns","channel_Receipt","disposed","Component","normalizeComponent","ssrContext","options","__file","__webpack_exports__","default","__esModule","version","sources","names","mappings","file","sourcesContent","sourceRoot","keys","$export","core","fails","KEY","exec","exp","S","F"],"mappings":"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","file":"static/js/6.aa09c9133999bbb46595.js","sourcesContent":["// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/es6.object.keys.js\n// module id = Cdx3\n// module chunks = 5 6","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1be22086\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Receipt.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\")(\"5c7881ec\", content, false, {});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1be22086\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Receipt.vue\", function() {\n     var newContent = require(\"!!../../../../node_modules/css-loader/index.js?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index.js?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1be22086\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector.js?type=styles&index=0!./Receipt.vue\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-style-loader!./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-1be22086\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Setup/channel/Receipt.vue\n// module id = FkYf\n// module chunks = 6","<template>\r\n  <div>\r\n    <ctbHead>\r\n      <router-link :class=\"seCurId==item.id? 'cur':''\"\r\n                   v-for=\"item in authList\"\r\n                   :key=\"item.id\"\r\n                   :to=\"{path:item.action,query:{id:curId}}\"\r\n                   :v-key=\"item.id\">\r\n        {{item.name}}\r\n      </router-link>\r\n    </ctbHead>\r\n    <div class=\"container\">\r\n      <div class=\"quote\">\r\n        <div class=\"quote-ele\">\r\n          <i></i>系统设置-免费保养设置-领卡渠道\r\n          <el-button type=\"primary\"\r\n                     style=\"float:right;margin:20px 40px 0 0\"\r\n                     @click=\"addVisible=true,state=1,openAdd(true)\">添加</el-button>\r\n        </div>\r\n        <div class=\"quote-nav\">\r\n          <router-link :class=\"thCurId==item.id? 'cur':''\"\r\n                       v-for=\"item in threeAuthList\"\r\n                       :key=\"item.id\"\r\n                       :to=\"{path:item.action,query:{id:curId}}\">\r\n            {{item.name}}\r\n          </router-link>\r\n        </div>\r\n      </div>\r\n      <div style=\"margin-left:20px\">\r\n        <el-select v-model=\"province\"\r\n                   placeholder=\"请选择所查询的地区\"\r\n                   @change=\"page=1,init()\">\r\n          <el-option value=\"1\"\r\n                     label=\"全国\">全国</el-option>\r\n          <el-option v-for=\"(item,index) in provinceList\"\r\n                     :key=\"index\"\r\n                     :label=\"item.label\"\r\n                     :value=\"item.id\"></el-option>\r\n        </el-select>\r\n      </div>\r\n      <el-table :data=\"list\"\r\n                v-loading=\"tableLoading\">\r\n        <!-- <el-table-column label=\"图片\"\r\n                         align=\"center\">\r\n          <template slot-scope=\"scope\">\r\n            <img :src=\"scope.row.photo\"\r\n                 class=\"img\">\r\n          </template>\r\n        </el-table-column> -->\r\n        <el-table-column align=\"center\"\r\n                         prop=\"company\"\r\n                         label=\"名称\">\r\n\r\n        </el-table-column>\r\n        <el-table-column label=\"渠道类型\"\r\n                         align=\"center\"\r\n                         prop=\"channel_type_name\">\r\n\r\n        </el-table-column>\r\n        <el-table-column align=\"center\"\r\n                         prop=\"num\"\r\n                         label=\"生成数量/次\">\r\n        </el-table-column>\r\n        <el-table-column align=\"center\"\r\n                         prop=\"sur_num\"\r\n                         label=\"剩余数量\">\r\n        </el-table-column>\r\n        <el-table-column align=\"center\"\r\n                         label=\"激活码详情\">\r\n          <template slot-scope=\"scope\">\r\n            <el-button type=\"text\"\r\n                       @click=\"codeDetails(scope.row)\">详情</el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column align=\"center\"\r\n                         label=\"地区\">\r\n          <template slot-scope=\"scope\">\r\n            <el-popover placement=\"bottom\"\r\n                        width=\"400\"\r\n                        trigger=\"click\">\r\n              <el-button type=\"text\"\r\n                         slot=\"reference\">详情</el-button>\r\n              <div class=\"areaDetails\">\r\n                <h4 style=\"text-align:center\">地区详情</h4>\r\n                <div v-if=\"scope.row.province\">\r\n                  <span style=\"float:left;width:80%;\">\r\n                    <div v-for=\"(item,index) in scope.row.province\"\r\n                         :key=\"index\"\r\n                         class=\"area\">\r\n                      <p class=\"province\"> {{item.province_name}}</p>\r\n                      <p class=\"city\">{{item.city_name ? item.city_name.join('、') : ''}}</p>\r\n                    </div>\r\n                  </span>\r\n                </div>\r\n                <div v-else\r\n                     style=\"text-align:center;line-height:100px;font-size:18px\">\r\n                  无\r\n                </div>\r\n              </div>\r\n            </el-popover>\r\n          </template>\r\n        </el-table-column>\r\n\r\n        <el-table-column align=\"center\"\r\n                         prop=\"create_time\"\r\n                         label=\"创建时间\">\r\n        </el-table-column>\r\n        <el-table-column label=\"操作/是否显示\"\r\n                         align=\"center\"\r\n                         min-width=\"140px\">\r\n          <template slot-scope=\"scope\">\r\n            <el-switch :active-value='1'\r\n                       :inactive-value='2'\r\n                       active-color=\"#13ce66\"\r\n                       inactive-color=\"#ff4949\"\r\n                       v-model=\"scope.row.status\"\r\n                       @change='Setup(scope.row)'>\r\n\r\n            </el-switch>\r\n\r\n            <el-button type=\"primary\"\r\n                       size=\"mini\"\r\n                       style=\"margin-left:10px\"\r\n                       @click=\"addVisible=true,state=2,defaultData(scope.row)\">修改</el-button>\r\n            <el-button type=\"primary\"\r\n                       size=\"mini\"\r\n                       @click=\"createCode(scope.row,scope.$index)\"\r\n                       :loading=\"codeLoading[scope.$index]\"\r\n                       :disabled=\"scope.row.sur_num >0\">生成激活码</el-button>\r\n            <el-button type=\"primary\"\r\n                       size=\"mini\"\r\n                       @click=\"exportCode(scope.row,true)\"\r\n                       :loading=\"exportLoading[scope.$index]\">导出</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <!-- 分页 -->\r\n      <div class=\"page_center\">\r\n        <paging :page-count=\"pageCount\"\r\n                :page=\"page\"\r\n                @index=\"paging\"></paging>\r\n\r\n      </div>\r\n    </div>\r\n    <el-dialog center\r\n               :title=\"state==1 ? '添加': '修改'\"\r\n               :visible.sync=\"addVisible\"\r\n               @close='()=>{\r\n                   $refs.form.resetFields();\r\n                   $refs.tree.setCheckedKeys([]);\r\n                   cardNum=\"\";\r\n                   remainingNum=\"\"\r\n               }'>\r\n      <el-form label-width=\"100px\"\r\n               :model=\"listQuery\"\r\n               :rules=\"rules\"\r\n               ref=\"form\">\r\n        <el-form-item label=\"名称:\"\r\n                      prop=\"company\">\r\n          <el-input placeholder=\"请输出名称\"\r\n                    class=\"input\"\r\n                    v-model=\"listQuery.company\" />\r\n        </el-form-item>\r\n        <!-- <el-form-item prop=\"type_channel\"\r\n                      label=\"显示类型:\">\r\n          <el-radio-group v-model=\"listQuery.type_channel\">\r\n            <el-radio :label=\"1\">保险公司</el-radio>\r\n            <el-radio :label=\"2\">领卡渠道</el-radio>\r\n          </el-radio-group>\r\n        </el-form-item>\r\n        <el-form-item label=\"类型:\"\r\n                      prop=\"type\">\r\n          <el-radio v-model=\"listQuery.type\"\r\n                    :label=\"1\">五折养护</el-radio>\r\n          <el-radio v-model=\"listQuery.type\"\r\n                    :label=\"2\">单次免费</el-radio>\r\n        </el-form-item>\r\n        <el-form-item label=\"联系电话\"\r\n                      prop=\"phone\">\r\n          <el-input class=\"input\"\r\n                    v-model=\"listQuery.phone\"\r\n                    placeholder=\"请输入联系电话\" />\r\n        </el-form-item> -->\r\n        <el-form-item :label=\"state==1 ? '卡数量' : '消耗数量'\"\r\n                      prop=\"num\">\r\n          <span v-if=\"state!=1\">\r\n            {{cardNum-remainingNum}}\r\n            +\r\n\r\n          </span>\r\n          <el-input class=\"input\"\r\n                    v-model=\"listQuery.num\"\r\n                    placeholder=\"请输入卡数量\" />\r\n        </el-form-item>\r\n        <!-- <el-form-item label=\"地址\"\r\n                      required>\r\n          <el-col :span=\"5\">\r\n            <el-form-item prop=\"province_name\">\r\n              <el-select v-model=\"listQuery.province_name\"\r\n                         placeholder=\"请选择省\"\r\n                         @change=\"provinceChange\">\r\n                <el-option v-for=\"(item,index) in provinceList\"\r\n                           :key=\"index\"\r\n                           :value=\"item.label\"\r\n                           :label=\"item.label\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n          <el-col class=\"line\"\r\n                  style=\"text-align:center\"\r\n                  :span=\"1\">-</el-col>\r\n          <el-col :span=\"5\">\r\n            <el-form-item prop=\"city\">\r\n              <el-select v-model=\"listQuery.city\"\r\n                         placeholder=\"请选择市\"\r\n                         @change=\"cityChange\">\r\n                <el-option v-for=\"(item,index) in cityList\"\r\n                           :key=\"index\"\r\n                           :value=\"item.label\"\r\n                           :label=\"item.label\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n          <el-col class=\"line\"\r\n                  style=\"text-align:center\"\r\n                  :span=\"1\">-</el-col>\r\n          <el-col :span=\"5\">\r\n            <el-form-item prop=\"county\">\r\n              <el-select v-model=\"listQuery.county\"\r\n                         placeholder=\"请选择区/县\">\r\n                <el-option v-for=\"(item,index) in countyList\"\r\n                           :key=\"index\"\r\n                           :value=\"item.name\"\r\n                           :label=\"item.name\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </el-col>\r\n\r\n        </el-form-item>\r\n        <el-form-item label=\"详细地址\"\r\n                      prop=\"address\">\r\n          <el-input class=\"input\"\r\n                    v-model=\"listQuery.address\"\r\n                    placeholder=\"请输入详细地址\" />\r\n        </el-form-item> -->\r\n        <el-form-item label=\"地区\">\r\n          <div>\r\n            <el-checkbox v-model=\"checkAll\"\r\n                         @change=\"checkAllChange\">全选</el-checkbox>\r\n          </div>\r\n          <el-tree :data=\"provinceList\"\r\n                   show-checkbox\r\n                   node-key=\"id\"\r\n                   ref=\"tree\"\r\n                   :default-checked-keys=\"defaultAll\"\r\n                   props=\"\"\r\n                   @check='treeCheck'>\r\n          </el-tree>\r\n        </el-form-item>\r\n        <!-- <el-form-item label=\"地区:\"\r\n                      prop=\"provinceID\">\r\n          <el-checkbox :indeterminate=\"isIndeterminate\"\r\n                       v-model=\"checkAll\"\r\n                       @change=\"handleCheckAllChange\">全选</el-checkbox>\r\n          <div style=\"margin: 15px 0;\"></div>\r\n\r\n          <el-checkbox v-for=\"(item,index) in provinceList\"\r\n                       style=\"width:70px\"\r\n                       :label=\"item.id\"\r\n                       :key=\"item.id\"\r\n                       v-model=\"listQuery.provinceID\"\r\n                       :indeterminate=\"item.isIndeterminate\"\r\n                       @change=\"((val,$event)=>handleCheckedCitiesChange(val,$event,index))\">\r\n            <p @click.prevent=\"getCity(item.id,index,$event)\">\r\n              {{item.name}}\r\n            </p>\r\n\r\n          </el-checkbox>\r\n\r\n        </el-form-item> -->\r\n        <!-- <el-form-item label=\"图片:\"\r\n                      prop=\"photo\">\r\n          <el-upload :action=\"`${uploadUrl}admin/SystemSetup/uploadPic`\"\r\n                     list-type=\"picture-card\"\r\n                     :on-success='handleSuccess'\r\n                     :data=\"{token:token}\"\r\n                     :file-list=\"listQuery.photo  ?  [{url:listQuery.photo}] : []\"\r\n                     name=\"image\"\r\n                     :limit='1'>\r\n\r\n            <i class=\"el-icon-plus\"></i>\r\n          </el-upload>\r\n        </el-form-item> -->\r\n        <el-form-item>\r\n          <el-button type=\"primary\"\r\n                     @click=\"state==1? add() : Modify()\"\r\n                     :loading=\"loading\">{{state==1 ? '添加' : '修改'}}</el-button>\r\n        </el-form-item>\r\n      </el-form>\r\n    </el-dialog>\r\n    <el-dialog title=\"激活码详情\"\r\n               center\r\n               :visible.sync=\"codeVisible\">\r\n      <el-table :data=\"codeList\">\r\n        <el-table-column label=\"用户名称\"\r\n                         prop=\"name\"\r\n                         align=\"center\"></el-table-column>\r\n        <el-table-column label=\"联系电话\"\r\n                         prop=\"phone\"\r\n                         align=\"center\"></el-table-column>\r\n        <el-table-column label=\"维修厂名称\"\r\n                         prop=\"company\"\r\n                         align=\"center\"></el-table-column>\r\n        <el-table-column label=\"激活码\"\r\n                         prop=\"code\"\r\n                         align=\"center\"></el-table-column>\r\n        <el-table-column label=\"状态\"\r\n                         align=\"center\">\r\n          <template>\r\n            已使用\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n      <div class=\"page_center\">\r\n        <paging :page-count=\"codePageCount\"\r\n                :page=\"codePage\"\r\n                @index=\"(e)=>{\r\n                    codePage = e;\r\n                    codeDetails(currentCode)\r\n                }\"></paging>\r\n\r\n      </div>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n<script type=\"text/ecmascript-6\">\r\nimport { getPro, GET_City, get_County, AccordingName_findID } from '@/utils/index'\r\nexport default {\r\n  data () {\r\n    return {\r\n      list: [],\r\n      token: window.sessionStorage.getItem('bbytoken'),\r\n      page: 0,\r\n      pageCount: 0,\r\n      authList: [],\r\n      uploadUrl: this.baseURL,\r\n      threeAuthList: [],\r\n      addVisible: false,\r\n      tableLoading: false,\r\n      loading: false,\r\n      province: '',\r\n      listQuery: {\r\n        company: '',\r\n        type_channel: 2,\r\n        type: 2,\r\n        phone: '', //联系电话\r\n        num: 500, //卡数量\r\n        // province_name: '',\r\n        // city: '',\r\n        // county: '',\r\n        // address: \"\",\r\n        // photo: '',\r\n        provinceID: [],\r\n      },\r\n      state: 1, // 1 添加 2 修改\r\n      provinceList: [],\r\n      isIndeterminate: false,  //省是否全选中\r\n      checkAll: false,\r\n      rules: {\r\n        company: { required: true, message: '名称不能为空', trigger: 'blur' },\r\n        // type: { required: true, message: '请选择类型', trigger: 'blur' },\r\n        // photo: { required: true, message: '请上传图片', trigger: 'blur' },\r\n        // provinceID: { required: true, message: '请选择区域', trigger: 'blur' },\r\n        // type_channel: { required: true, message: '请选择显示类型', trigger: 'blur' },\r\n        // phone: { required: true, message: '联系电话不能为空', trigger: 'blur' },\r\n        num: { required: true, message: '卡数量不能为空', trigger: 'blur' },\r\n        // province_name: { required: true, message: '省不能为空', trigger: 'blur' },\r\n        // city: { required: true, message: '市不能为空', trigger: 'blur' },\r\n        // county: { required: true, message: '区/县不能为空', trigger: 'blur' },\r\n        // address: { required: true, message: '详细地址不能为空', trigger: 'blur' },\r\n      },\r\n      cityList: [], //市列表\r\n      cityVisible: false, //是否显示市详情 默认不显示\r\n      cityIsIndeterminate: false,\r\n      cityCheckAll: false,\r\n      cityChecked: [],\r\n      provinceID: [],//所有省id\r\n      cityID: [], //所有市id\r\n      provinceIndex: 0, //当前选中的省下标\r\n      currentCity: [],  //当前选择省下面的市,\r\n      defaultAll: [],  //默认全选,\r\n      getCheckedKeys: [],\r\n      countyList: [], //区县列表\r\n      codeLoading: [], //生成激活码按钮loading\r\n      exportLoading: [], //导出loading\r\n      codeVisible: false, //激活码详情弹框\r\n      codeList: [], //激活码列表\r\n      codePageCount: 1,\r\n      codePage: 1,\r\n      currentCode: {},\r\n      cardNum: '',//卡数量\r\n      remainingNum: ''\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    isAllChecked () {\r\n      let provinceLength = this.provinceList.length;   //所有的省长度\r\n      let provinceCheckedLength = this.listQuery.provinceID.length  //当前选中的省长度\r\n      let cityCheckedLength = this.cityChecked.length;  //当前选中的市长度\r\n      let city = []\r\n      this.provinceList.forEach(item => {\r\n        item.city.forEach(v => {\r\n          city.push(v)\r\n        })\r\n      })\r\n      return provinceLength == provinceCheckedLength && city.length == cityCheckedLength\r\n    }\r\n  },\r\n  watch: {\r\n    \"listQuery.province_name\": {\r\n      deep: true, //深度监听设置为 true\r\n      handler (name) {\r\n        name && this.provinceChange(name)\r\n      }\r\n    },\r\n    \"listQuery.city\": {\r\n      deep: true, //深度监听设置为 true\r\n      handler (name) {\r\n        name && this.cityChange(name)\r\n      }\r\n    },\r\n    \"listQuery.county\": {\r\n      deep: true, //深度监听设置为 true\r\n      handler (name) {\r\n\r\n      }\r\n    },\r\n  },\r\n\r\n  methods: {\r\n    paging (e) {\r\n      this.page = e;\r\n      this.init()\r\n    },\r\n    async init () {\r\n      this.tableLoading = true\r\n      let [list, getAreaList] = await Promise.all([this.getList(), this.getArea()])\r\n      this.list = list.data.data.list || []\r\n      this.pageCount = list.data.data.rows || 1;\r\n      //   console.log(getAreaList)\r\n      this.provinceList = getAreaList || []\r\n      this.tableLoading = false\r\n    },\r\n    async getList () {\r\n      return await this.$axios.post('admin/SystemSetup/systemLists', { token: this.token, page: this.page, province: this.province })\r\n    },\r\n    async openAdd (checked, defaultData) {  //获取全部省\r\n      // this.provinceList = this.areaWhetherChecked()\r\n      this.$nextTick(() => {\r\n        this.$refs.tree.setCheckedKeys(this.defaultAll)\r\n        this.getCheckedKeys = this.$refs.tree.getCheckedKeys()   //获取被选中的id\r\n        this.checkAll = true\r\n      })\r\n    },\r\n    getArea () {    //获取地区\r\n      return new Promise(async (resolve, reject) => {\r\n        try {\r\n          let data = await getPro();\r\n          let list = []\r\n\r\n          data.forEach(async (item, index) => {\r\n            let city = await GET_City(item.id)\r\n            let children = []\r\n            city.forEach(e => {\r\n              children.push({ id: e.id, label: e.name })\r\n              this.defaultAll.push(e.id)\r\n            })\r\n            list.push({ id: item.id, label: item.name, children: children })\r\n            this.defaultAll.push(item.id) //默认全选\r\n          })\r\n          resolve(list)\r\n        } catch (error) {\r\n          reject(error)\r\n        }\r\n      })\r\n    },\r\n    // areaWhetherChecked (checked) {   //checked 是否全选\r\n    //   let provinceList = this.provinceList\r\n    //   provinceList.forEach(item => {\r\n    //     item = Object.assign(item, { checked: checked });\r\n    //     item.city.forEach(v => {\r\n    //       v = Object.assign(v, { checked: checked })\r\n    //       if (checked) {\r\n    //         this.cityChecked.push(v.id)\r\n    //       }\r\n    //     })\r\n    //     if (checked) {\r\n    //       this.listQuery.provinceID.push(item.id)\r\n    //     }\r\n    //   })\r\n    //   return provinceList;\r\n    // },\r\n\r\n    checkAllChange () {  //全选\r\n      this.$refs.tree.setCheckedKeys(this.checkAll ? this.defaultAll : [])\r\n    },\r\n    treeCheck () {\r\n      this.checkAll = this.$refs.tree.getCheckedKeys().length == this.defaultAll.length //是否全选\r\n    },\r\n    defaultData (row) {  //修改       默认数据\r\n      this.cardNum = row.num\r\n      this.remainingNum = row.sur_num\r\n      let province = row.province;\r\n      let provinceID = [];\r\n      let cityID = [];\r\n      let iSnational = false\r\n      Object.keys(province).forEach(key => {   //获取需要默认选中的id\r\n        let province_id = province[key].province_id;\r\n        let city_id = province[key].city_id\r\n        if (province_id) {\r\n          provinceID.push(province_id)\r\n        }\r\n        if (city_id) {\r\n          cityID.push(...city_id)\r\n        }\r\n        iSnational = province[key].province_name == '全国' ? true : false; //是否是全国\r\n      })\r\n      this.$nextTick(() => {\r\n        this.getCheckedKeys = this.$refs.tree.getCheckedKeys()   //获取被选中的id\r\n        this.$refs.tree.setCheckedKeys(iSnational ? this.defaultAll : cityID);\r\n        this.listQuery = Object.assign(this.listQuery, row)\r\n        this.checkAll = iSnational\r\n      })\r\n      //   let provinceList = this.provinceList\r\n      //   provinceList.forEach(item => {   //根据选中的id匹配 进行设置选中\r\n      //     provinceID.forEach(v => {\r\n      //       if (item.id == v) {\r\n      //         item.checked = true\r\n      //       }\r\n      //     })\r\n      //     item.city.forEach(v => {\r\n      //       cityID.forEach(e => {\r\n      //         if (v.id == e) {\r\n      //           v.checked = true\r\n      //         }\r\n      //       })\r\n      //     })\r\n      //   })\r\n      //   this.provinceList = provinceList  //重新渲染\r\n      //   let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();   //获取选中的省id 和选中的市id\r\n      //   this.$nextTick(() => {\r\n      //     this.listQuery = Object.assign(this.listQuery, { company: row.company, type: row.type, photo: row.photo, provinceID: provinceCheckedID, id: row.id, type_channel: row.type_channel })   //设置省默认选中状态\r\n      //   })\r\n      //   this.cityChecked = cityCheckedId  //设置市默认选中状态\r\n      //   this.isIndeterminate = provinceCheckedID.length < this.provinceList.length && provinceCheckedID.length > 0\r\n      //   this.checkAll = provinceID.length == this.provinceList.length;\r\n    },\r\n\r\n\r\n    // handleCheckAllChange (val) {  //地区全选功能\r\n    //   let provinceList = [];\r\n    //   let provinceID = []\r\n    //   this.provinceList.forEach((el, index) => {  //获取所有省id  \r\n    //     this.provinceList[index].checked = val;\r\n    //     el.city.forEach((item, i) => {\r\n    //       this.provinceList[index].city[i].checked = this.checkAll\r\n    //     })\r\n    //     provinceID.push(el.id)\r\n    //   });\r\n    //   let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();\r\n    //   this.listQuery.provinceID = provinceCheckedID;\r\n    //   this.cityChecked = cityCheckedId\r\n    //   this.isIndeterminate = false;\r\n    // },\r\n    // handleCheckedCitiesChange (v, e, index) {   //当前省操作  v 代表当时省是否选中  e event对象  index 当前省的下标\r\n    //   this.provinceList[index].checked = v      // 设置当前的省的选中状态\r\n    //   let length = this.listQuery.provinceID.length;   //当前省选中的长度\r\n    //   this.provinceList[index].city.forEach((item, i) => {\r\n    //     this.provinceList[index].city[i].checked = v\r\n    //   })\r\n    //   let { cityCheckedId } = this.getAreaCheckedID();\r\n    //   this.cityChecked = cityCheckedId  //市默认选中状态\r\n    //   this.isIndeterminate = length < this.provinceList.length && length > 0;      //判断当前省选中的长度是否小于当前省的长度并且当前选中省的长度大于0  如果条件成立设置全选的按钮的状态\r\n    //   console.log(length)\r\n    //   this.checkAll = length == this.provinceList.length     //当前选中省的长度如果等于当前省的长度, 省全选按钮勾选\r\n\r\n    // },\r\n\r\n    // //获取市\r\n    // async getCity (id, index, e) {\r\n    //   this.provinceIndex = index //当前选择的省下标\r\n    //   this.currentCity = this.provinceList[index].city   //当前省下面的市\r\n    //   this.cityVisible = true;   //是否显示市详情弹框\r\n    //   this.cityList = this.provinceList[index].city   //获取当前市\r\n    //   let currentCityLength = this.currentCity.length;    //当前市的长度\r\n    //   let { cityCheckedId } = this.getAreaCheckedID();   //获取已选中市的id\r\n    //   this.cityChecked = cityCheckedId    //设置市默认选中状态\r\n    //   let cityCheckedLength = this.cityCheckedLength(this.currentCity)    //当前市选中的长度\r\n    //   this.cityCheckAll = this.provinceList[index].checked ? cityCheckedLength == currentCityLength : false  //用当前市和当前选中市进行判断如果当前市的长度不等于当前选中的市的长度,则市全选不勾选,  相反如果等于全选按钮勾选\r\n\r\n\r\n    // },\r\n\r\n    // cityCheckedLength (currentCity) {    //当前选中的市的长度\r\n    //   return currentCity.filter(item => item.checked).length;\r\n    // },\r\n\r\n    // // 市全选操作\r\n    // cityCheckAllChange (val) {  //市 是否全选  val表示是否全选\r\n    //   let provinceIndex = this.provinceIndex     //获取当前选中省的下标\r\n    //   let cityID = []\r\n    //   this.provinceList[provinceIndex].city.forEach((item, index) => {\r\n    //     this.provinceList[provinceIndex].city[index].checked = val    //如果var等于true表示全选,把当前选中省下面的所有市改成选中状态,相反则改成非选中状态\r\n    //     cityID.push(item.id)\r\n    //   })\r\n    //   this.provinceList[provinceIndex].checked = val\r\n    //   let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();   //获取当前选中市\r\n    //   this.listQuery.provinceID = provinceCheckedID\r\n    //   this.cityChecked = val ? this.provinceList[provinceIndex].checked ? cityCheckedId : cityID : []   //默认市的选中\r\n\r\n    //   this.isIndeterminate = provinceCheckedID.length < this.provinceList.length && provinceCheckedID.length > 0\r\n\r\n\r\n    // },\r\n\r\n    // getAreaCheckedID () {  //获取选中的省id和市id\r\n    //   let provinceCheckedID = [];\r\n    //   let cityCheckedId = []\r\n    //   this.provinceList.forEach(item => {\r\n    //     if (item.checked) {  //当前省是否选择\r\n    //       item.city.forEach(v => {\r\n    //         if (v.checked) {  //当前市是否选中\r\n    //           cityCheckedId.push(v.id)  //获取当前选中的市id\r\n    //         }\r\n    //       })\r\n    //       provinceCheckedID.push(item.id)   //获取当前选中的省id\r\n    //     }\r\n    //   })\r\n\r\n    //   return {\r\n    //     provinceCheckedID,\r\n    //     cityCheckedId\r\n    //   }\r\n    // },\r\n    // //当前市的操作\r\n    // cityChange (v, e, index) { // v:当前市是否被选中 e:event对象\r\n    //   this.cityList[index].checked = v;\r\n    //   let cityCheckedLength = this.cityCheckedLength(this.currentCity);\r\n    //   this.cityCheckAll = cityCheckedLength == this.currentCity.length;\r\n    //   console.log(cityCheckedLength)\r\n\r\n    //   this.provinceList[this.provinceIndex].checked = cityCheckedLength == 0 ? false : true\r\n\r\n    //   let { provinceCheckedID } = this.getAreaCheckedID();\r\n    //   this.listQuery.provinceID = provinceCheckedID;\r\n    //   console.log(cityCheckedLength, 'cityCheckedLength', '-----', this.currentCity.length)\r\n    //   this.isIndeterminate = cityCheckedLength < this.currentCity.length && cityCheckedLength > 0\r\n\r\n    // },\r\n    handleSuccess (res) {  //上传成功\r\n      this.listQuery = Object.assign({}, this.listQuery, { photo: res })\r\n    },\r\n    provinceChange (name) {  //获取市\r\n      let cityList = []\r\n      this.provinceList.forEach(item => {\r\n        if (item.label == name) {\r\n          cityList = item.children\r\n        }\r\n      })\r\n      this.cityList = cityList\r\n    },\r\n    async cityChange (name) {   //\r\n      let cityCheckedId = name && AccordingName_findID(this.cityList, name)    //获取当前市id\r\n      const countyList = await get_County(cityCheckedId)  //获取区县列表\r\n      this.countyList = countyList\r\n    },\r\n\r\n\r\n    getCityCheckedID (getCheckedKeys) {   //获取选中的市ID\r\n      let cityID = []\r\n      let provinceID = []\r\n      this.provinceList.forEach(item => {   //获取所有省id\r\n        provinceID.push(item.id)\r\n      })\r\n      getCheckedKeys.forEach(item => {  //过滤掉省id 只需要市id\r\n        if (!provinceID.includes(item)) {\r\n          cityID.push(item)\r\n        }\r\n      })\r\n      return cityID\r\n    },\r\n    add () {  //添加\r\n      console.log(this.listQuery)\r\n\r\n      this.$refs.form.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            this.getCityCheckedID(this.$refs.tree.getCheckedKeys())  //获取被选中的市id\r\n            let isCheckedAll = this.$refs.tree.getCheckedKeys().length == this.getCheckedKeys.length\r\n            this.loading = true\r\n            let data = (({ company, type, photo, type_channel, phone, num, province_name, city, address, county }) => ({ company, type, photo, type_channel, phone, num, province_name, city, address, county }))(this.listQuery);\r\n            let province = this.getCityCheckedID(this.$refs.tree.getCheckedKeys()) && this.getCityCheckedID(this.$refs.tree.getCheckedKeys()).length > 0 ? this.getCityCheckedID(this.$refs.tree.getCheckedKeys()).join(',') : ''\r\n            const res = await this.$axios.post('admin/SystemSetup/addGenre', Object.assign({}, data, { token: this.token, types: 1, province: isCheckedAll ? 1 : province }))\r\n            this.loading = false\r\n            if (res.data.code == 1) {\r\n              this.$message({ message: res.data.msg, type: 'success' })\r\n              this.addVisible = false\r\n              this.exportCode(Object.assign(this.listQuery, { id: res.data.data }))\r\n              this.init()\r\n            } else {\r\n              this.$message.error(res.data.msg)\r\n            }\r\n          } catch (error) {\r\n            this.loading = false\r\n            throw (error)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    //修改\r\n    Modify () {\r\n      this.$refs.form.validate(async (valid) => {\r\n        if (valid) {\r\n          try {\r\n            this.loading = true\r\n            let isCheckedAll = this.$refs.tree.getCheckedKeys().length == this.getCheckedKeys.length\r\n            let data = (({ company, type, photo, type_channel, phone, num, province_name, city, address, id, county }) => ({ company, type, photo, type_channel, phone, num, province_name, city, address, id, county }))(this.listQuery);\r\n            let province = this.getCityCheckedID(this.$refs.tree.getCheckedKeys()) && this.getCityCheckedID(this.$refs.tree.getCheckedKeys()).length > 0 ? this.getCityCheckedID(this.$refs.tree.getCheckedKeys()).join(',') : ''\r\n            const res = await this.$axios.post('admin/SystemSetup/updateInfo', Object.assign({}, data, { token: this.token, types: 1, province: isCheckedAll ? 1 : province }))\r\n            this.loading = false\r\n            if (res.data.code == 1) {\r\n              this.$message({ message: res.data.msg, type: 'success' })\r\n              this.addVisible = false\r\n              this.exportCode(this.listQuery)\r\n              this.init()\r\n\r\n            } else {\r\n              this.$message.error(res.data.msg)\r\n            }\r\n          } catch (error) {\r\n            this.loading = false\r\n            throw (error)\r\n          }\r\n        }\r\n      })\r\n    },\r\n    //设置 显示 隐藏\r\n    async Setup (row) {\r\n      try {\r\n        const res = await this.$axios.post('admin/SystemSetup/updateStatus', { token: this.token, id: row.id, status: row.status })\r\n        if (res.data.code == 1) {\r\n          this.$message({ message: res.data.msg, type: 'success' })\r\n          this.init()\r\n        } else {\r\n          this.$message.error(res.data.msg)\r\n        }\r\n      } catch (error) {\r\n        throw (error)\r\n      }\r\n    },\r\n    //激活码详情\r\n    async codeDetails (item) {\r\n      try {\r\n        this.codeVisible = true\r\n        this.currentCode = item\r\n        const res = await this.$axios.post(\"admin/SystemSetup/codeDetail\", { token: this.token, id: item.id, page: this.codePage })\r\n        this.codeList = res.data.data.list || []\r\n        this.codePageCount = res.data.data.rows || 1\r\n      } catch (error) {\r\n        throw (error)\r\n      }\r\n    },\r\n    //生成激活码\r\n    createCode (item, index) {\r\n      this.$confirm(`您确定要生成${item.num}个激活码吗?`, '提示', {\r\n        confirmButtonText: '确定',\r\n        cancelButtonText: '取消',\r\n        type: 'warning'\r\n      }).then(async () => {\r\n        try {\r\n          this.codeLoading[index] = true\r\n          const res = await this.$axios.post(\"admin/SystemSetup/createCode\", { token: this.token, id: item.id, num: item.num })\r\n          this.codeLoading[index] = false\r\n          if (res.data.code == 1) {\r\n            this.$message({ message: res.data.msg, type: \"success\" })\r\n            this.init()\r\n          } else {\r\n            this.$message.error(res.data.msg)\r\n          }\r\n        } catch (error) {\r\n          this.codeLoading[index] = false\r\n          throw (error)\r\n        }\r\n      }).catch(() => { });\r\n\r\n    },\r\n    //导出激活码\r\n    exportCode (item, manualExport) {\r\n      console.log(item)\r\n      window.location.href = `${this.baseURL}admin/Login/freeCode?id=${item.id}&name=${item.company}&num=${manualExport ? '' : Number(item.num) + (Number(this.cardNum) - Number(this.remainingNum))}`\r\n    },\r\n    erAuth () {  //权限匹配\r\n      var id = this.$route.query.id;\r\n      this.curId = id;\r\n\r\n      this.$axios.post('admin/Auth/erAuth', {\r\n        token: window.sessionStorage.getItem('bbytoken'),\r\n        id: id\r\n      })\r\n        .then(res => {\r\n          if (res.data.code == 1) {\r\n            var arr = res.data.data;\r\n            for (var i = 0; i < arr.length; i++) {\r\n              if (arr[i].son) {\r\n                if (arr[i].name == '免费保养设置') {\r\n                  this.seCurId = arr[i].id;\r\n                  this.threeAuthList = arr[i].son;\r\n                }\r\n                for (var j = 0; j < arr[i].son.length; j++) {\r\n                  if (arr[i].action != arr[i].son[j].action) {\r\n                    arr[i].action = arr[i].son[0].action;\r\n                  }\r\n                  if (arr[i].son[j].name == '领卡渠道' && arr[i].name == '免费保养设置') {\r\n                    this.thCurId = arr[i].son[j].id;\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            this.authList = arr;\r\n          } else {\r\n            this.$alert(res.data.msg, '提示', { type: 'error' });\r\n          }\r\n        })\r\n        .catch(err => {\r\n          alert(err);\r\n        })\r\n    }\r\n  },\r\n  mounted () {\r\n    this.erAuth();\r\n    this.init();\r\n  },\r\n}\r\n</script>\r\n<style scoped>\r\n.ellipsis {\r\n  width: 150px;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  display: -webkit-box;\r\n  -webkit-box-orient: vertical;\r\n  -webkit-line-clamp: 2;\r\n}\r\n.areaDetails {\r\n  max-height: 300px;\r\n  min-height: 100px;\r\n  overflow: auto;\r\n}\r\n.areaDetails .area {\r\n  padding: 10px 0;\r\n  border-bottom: 1px solid #cccccc;\r\n}\r\n.areaDetails .province {\r\n  font-size: 15px;\r\n  font-weight: 600;\r\n}\r\n.img {\r\n  width: 70px;\r\n  height: 70px;\r\n}\r\n.input {\r\n  width: 50%;\r\n}\r\n.laybox2 ul {\r\n  margin: 33px auto;\r\n  border-bottom: 1px dashed #04bbfc;\r\n}\r\n\r\n.laybox2 {\r\n  padding: 60px;\r\n  font-size: 16px;\r\n}\r\n\r\n.laybox2 li {\r\n  width: 300px;\r\n  text-align: left;\r\n  margin: 33px auto;\r\n}\r\n\r\n.t-c:after {\r\n  content: \"\";\r\n  display: block;\r\n  height: 0;\r\n  clear: both;\r\n}\r\n\r\n.bot > div {\r\n  position: relative;\r\n}\r\n\r\ndiv.bot {\r\n  margin: 45px auto 35px auto;\r\n  height: 100px;\r\n}\r\n\r\ndiv.bot span {\r\n  display: inline-block;\r\n  width: 20%;\r\n}\r\n\r\ndiv.bot input {\r\n  display: inline-block;\r\n  width: 55%;\r\n  outline: none;\r\n  border: none;\r\n  border-bottom: 1px solid #aaa;\r\n}\r\n\r\ndiv.bot button {\r\n  width: 110px;\r\n  height: 36px;\r\n  margin-left: -55px;\r\n  position: absolute;\r\n  border-radius: 18px;\r\n  box-shadow: 4px 0px 6px rgba(177, 42, 19, 0.2);\r\n  border: none;\r\n  color: #fff;\r\n  left: 50%;\r\n  top: 60px;\r\n}\r\n\r\nbutton.reject {\r\n  background: rgba(237, 81, 55, 1);\r\n  margin-right: 30%;\r\n}\r\n\r\nbutton.pass {\r\n  background-color: #20a0ff;\r\n}\r\n\r\n.left {\r\n  float: left;\r\n  width: 50%;\r\n}\r\n\r\n.right {\r\n  float: right;\r\n  width: 50%;\r\n}\r\n.nowrap {\r\n  width: 120px !important;\r\n  text-align: center;\r\n  white-space: nowrap; /*规定文本不换行**/\r\n  text-overflow: ellipsis; /**显示省略符号来代表被修剪的文本。*/\r\n  overflow: hidden;\r\n  margin: 0 auto;\r\n}\r\n.regionDetail >>> .el-dialog__title {\r\n  font-size: 22px;\r\n}\r\n.regionDetail >>> .el-dialog__body {\r\n  padding: 0px 25px 30px;\r\n  border-top: solid 2px #eee;\r\n}\r\n\r\n>>> .el-dialog {\r\n  min-height: 300px;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/Setup/channel/Receipt.vue","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    [\n      _c(\n        \"ctbHead\",\n        _vm._l(_vm.authList, function(item) {\n          return _c(\n            \"router-link\",\n            {\n              key: item.id,\n              class: _vm.seCurId == item.id ? \"cur\" : \"\",\n              attrs: {\n                to: { path: item.action, query: { id: _vm.curId } },\n                \"v-key\": item.id\n              }\n            },\n            [_vm._v(\"\\n      \" + _vm._s(item.name) + \"\\n    \")]\n          )\n        }),\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticClass: \"container\" },\n        [\n          _c(\"div\", { staticClass: \"quote\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"quote-ele\" },\n              [\n                _c(\"i\"),\n                _vm._v(\"系统设置-免费保养设置-领卡渠道\\n        \"),\n                _c(\n                  \"el-button\",\n                  {\n                    staticStyle: { float: \"right\", margin: \"20px 40px 0 0\" },\n                    attrs: { type: \"primary\" },\n                    on: {\n                      click: function($event) {\n                        ;(_vm.addVisible = true),\n                          (_vm.state = 1),\n                          _vm.openAdd(true)\n                      }\n                    }\n                  },\n                  [_vm._v(\"添加\")]\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"quote-nav\" },\n              _vm._l(_vm.threeAuthList, function(item) {\n                return _c(\n                  \"router-link\",\n                  {\n                    key: item.id,\n                    class: _vm.thCurId == item.id ? \"cur\" : \"\",\n                    attrs: {\n                      to: { path: item.action, query: { id: _vm.curId } }\n                    }\n                  },\n                  [_vm._v(\"\\n          \" + _vm._s(item.name) + \"\\n        \")]\n                )\n              }),\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticStyle: { \"margin-left\": \"20px\" } },\n            [\n              _c(\n                \"el-select\",\n                {\n                  attrs: { placeholder: \"请选择所查询的地区\" },\n                  on: {\n                    change: function($event) {\n                      ;(_vm.page = 1), _vm.init()\n                    }\n                  },\n                  model: {\n                    value: _vm.province,\n                    callback: function($$v) {\n                      _vm.province = $$v\n                    },\n                    expression: \"province\"\n                  }\n                },\n                [\n                  _c(\"el-option\", { attrs: { value: \"1\", label: \"全国\" } }, [\n                    _vm._v(\"全国\")\n                  ]),\n                  _vm._v(\" \"),\n                  _vm._l(_vm.provinceList, function(item, index) {\n                    return _c(\"el-option\", {\n                      key: index,\n                      attrs: { label: item.label, value: item.id }\n                    })\n                  })\n                ],\n                2\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"el-table\",\n            {\n              directives: [\n                {\n                  name: \"loading\",\n                  rawName: \"v-loading\",\n                  value: _vm.tableLoading,\n                  expression: \"tableLoading\"\n                }\n              ],\n              attrs: { data: _vm.list }\n            },\n            [\n              _c(\"el-table-column\", {\n                attrs: { align: \"center\", prop: \"company\", label: \"名称\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  label: \"渠道类型\",\n                  align: \"center\",\n                  prop: \"channel_type_name\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { align: \"center\", prop: \"num\", label: \"生成数量/次\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { align: \"center\", prop: \"sur_num\", label: \"剩余数量\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { align: \"center\", label: \"激活码详情\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\n                          \"el-button\",\n                          {\n                            attrs: { type: \"text\" },\n                            on: {\n                              click: function($event) {\n                                return _vm.codeDetails(scope.row)\n                              }\n                            }\n                          },\n                          [_vm._v(\"详情\")]\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { align: \"center\", label: \"地区\" },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\n                          \"el-popover\",\n                          {\n                            attrs: {\n                              placement: \"bottom\",\n                              width: \"400\",\n                              trigger: \"click\"\n                            }\n                          },\n                          [\n                            _c(\n                              \"el-button\",\n                              {\n                                attrs: { slot: \"reference\", type: \"text\" },\n                                slot: \"reference\"\n                              },\n                              [_vm._v(\"详情\")]\n                            ),\n                            _vm._v(\" \"),\n                            _c(\"div\", { staticClass: \"areaDetails\" }, [\n                              _c(\n                                \"h4\",\n                                { staticStyle: { \"text-align\": \"center\" } },\n                                [_vm._v(\"地区详情\")]\n                              ),\n                              _vm._v(\" \"),\n                              scope.row.province\n                                ? _c(\"div\", [\n                                    _c(\n                                      \"span\",\n                                      {\n                                        staticStyle: {\n                                          float: \"left\",\n                                          width: \"80%\"\n                                        }\n                                      },\n                                      _vm._l(scope.row.province, function(\n                                        item,\n                                        index\n                                      ) {\n                                        return _c(\n                                          \"div\",\n                                          { key: index, staticClass: \"area\" },\n                                          [\n                                            _c(\n                                              \"p\",\n                                              { staticClass: \"province\" },\n                                              [\n                                                _vm._v(\n                                                  \" \" +\n                                                    _vm._s(item.province_name)\n                                                )\n                                              ]\n                                            ),\n                                            _vm._v(\" \"),\n                                            _c(\"p\", { staticClass: \"city\" }, [\n                                              _vm._v(\n                                                _vm._s(\n                                                  item.city_name\n                                                    ? item.city_name.join(\"、\")\n                                                    : \"\"\n                                                )\n                                              )\n                                            ])\n                                          ]\n                                        )\n                                      }),\n                                      0\n                                    )\n                                  ])\n                                : _c(\n                                    \"div\",\n                                    {\n                                      staticStyle: {\n                                        \"text-align\": \"center\",\n                                        \"line-height\": \"100px\",\n                                        \"font-size\": \"18px\"\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                无\\n              \"\n                                      )\n                                    ]\n                                  )\n                            ])\n                          ],\n                          1\n                        )\n                      ]\n                    }\n                  }\n                ])\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  align: \"center\",\n                  prop: \"create_time\",\n                  label: \"创建时间\"\n                }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: {\n                  label: \"操作/是否显示\",\n                  align: \"center\",\n                  \"min-width\": \"140px\"\n                },\n                scopedSlots: _vm._u([\n                  {\n                    key: \"default\",\n                    fn: function(scope) {\n                      return [\n                        _c(\"el-switch\", {\n                          attrs: {\n                            \"active-value\": 1,\n                            \"inactive-value\": 2,\n                            \"active-color\": \"#13ce66\",\n                            \"inactive-color\": \"#ff4949\"\n                          },\n                          on: {\n                            change: function($event) {\n                              return _vm.Setup(scope.row)\n                            }\n                          },\n                          model: {\n                            value: scope.row.status,\n                            callback: function($$v) {\n                              _vm.$set(scope.row, \"status\", $$v)\n                            },\n                            expression: \"scope.row.status\"\n                          }\n                        }),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-button\",\n                          {\n                            staticStyle: { \"margin-left\": \"10px\" },\n                            attrs: { type: \"primary\", size: \"mini\" },\n                            on: {\n                              click: function($event) {\n                                ;(_vm.addVisible = true),\n                                  (_vm.state = 2),\n                                  _vm.defaultData(scope.row)\n                              }\n                            }\n                          },\n                          [_vm._v(\"修改\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-button\",\n                          {\n                            attrs: {\n                              type: \"primary\",\n                              size: \"mini\",\n                              loading: _vm.codeLoading[scope.$index],\n                              disabled: scope.row.sur_num > 0\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.createCode(scope.row, scope.$index)\n                              }\n                            }\n                          },\n                          [_vm._v(\"生成激活码\")]\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"el-button\",\n                          {\n                            attrs: {\n                              type: \"primary\",\n                              size: \"mini\",\n                              loading: _vm.exportLoading[scope.$index]\n                            },\n                            on: {\n                              click: function($event) {\n                                return _vm.exportCode(scope.row, true)\n                              }\n                            }\n                          },\n                          [_vm._v(\"导出\")]\n                        )\n                      ]\n                    }\n                  }\n                ])\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"page_center\" },\n            [\n              _c(\"paging\", {\n                attrs: { \"page-count\": _vm.pageCount, page: _vm.page },\n                on: { index: _vm.paging }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: {\n            center: \"\",\n            title: _vm.state == 1 ? \"添加\" : \"修改\",\n            visible: _vm.addVisible\n          },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.addVisible = $event\n            },\n            close: function() {\n              _vm.$refs.form.resetFields()\n              _vm.$refs.tree.setCheckedKeys([])\n              _vm.cardNum = \"\"\n              _vm.remainingNum = \"\"\n            }\n          }\n        },\n        [\n          _c(\n            \"el-form\",\n            {\n              ref: \"form\",\n              attrs: {\n                \"label-width\": \"100px\",\n                model: _vm.listQuery,\n                rules: _vm.rules\n              }\n            },\n            [\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"名称:\", prop: \"company\" } },\n                [\n                  _c(\"el-input\", {\n                    staticClass: \"input\",\n                    attrs: { placeholder: \"请输出名称\" },\n                    model: {\n                      value: _vm.listQuery.company,\n                      callback: function($$v) {\n                        _vm.$set(_vm.listQuery, \"company\", $$v)\n                      },\n                      expression: \"listQuery.company\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                {\n                  attrs: {\n                    label: _vm.state == 1 ? \"卡数量\" : \"消耗数量\",\n                    prop: \"num\"\n                  }\n                },\n                [\n                  _vm.state != 1\n                    ? _c(\"span\", [\n                        _vm._v(\n                          \"\\n          \" +\n                            _vm._s(_vm.cardNum - _vm.remainingNum) +\n                            \"\\n          +\\n\\n        \"\n                        )\n                      ])\n                    : _vm._e(),\n                  _vm._v(\" \"),\n                  _c(\"el-input\", {\n                    staticClass: \"input\",\n                    attrs: { placeholder: \"请输入卡数量\" },\n                    model: {\n                      value: _vm.listQuery.num,\n                      callback: function($$v) {\n                        _vm.$set(_vm.listQuery, \"num\", $$v)\n                      },\n                      expression: \"listQuery.num\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                { attrs: { label: \"地区\" } },\n                [\n                  _c(\n                    \"div\",\n                    [\n                      _c(\n                        \"el-checkbox\",\n                        {\n                          on: { change: _vm.checkAllChange },\n                          model: {\n                            value: _vm.checkAll,\n                            callback: function($$v) {\n                              _vm.checkAll = $$v\n                            },\n                            expression: \"checkAll\"\n                          }\n                        },\n                        [_vm._v(\"全选\")]\n                      )\n                    ],\n                    1\n                  ),\n                  _vm._v(\" \"),\n                  _c(\"el-tree\", {\n                    ref: \"tree\",\n                    attrs: {\n                      data: _vm.provinceList,\n                      \"show-checkbox\": \"\",\n                      \"node-key\": \"id\",\n                      \"default-checked-keys\": _vm.defaultAll,\n                      props: \"\"\n                    },\n                    on: { check: _vm.treeCheck }\n                  })\n                ],\n                1\n              ),\n              _vm._v(\" \"),\n              _c(\n                \"el-form-item\",\n                [\n                  _c(\n                    \"el-button\",\n                    {\n                      attrs: { type: \"primary\", loading: _vm.loading },\n                      on: {\n                        click: function($event) {\n                          _vm.state == 1 ? _vm.add() : _vm.Modify()\n                        }\n                      }\n                    },\n                    [_vm._v(_vm._s(_vm.state == 1 ? \"添加\" : \"修改\"))]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"el-dialog\",\n        {\n          attrs: { title: \"激活码详情\", center: \"\", visible: _vm.codeVisible },\n          on: {\n            \"update:visible\": function($event) {\n              _vm.codeVisible = $event\n            }\n          }\n        },\n        [\n          _c(\n            \"el-table\",\n            { attrs: { data: _vm.codeList } },\n            [\n              _c(\"el-table-column\", {\n                attrs: { label: \"用户名称\", prop: \"name\", align: \"center\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"联系电话\", prop: \"phone\", align: \"center\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"维修厂名称\", prop: \"company\", align: \"center\" }\n              }),\n              _vm._v(\" \"),\n              _c(\"el-table-column\", {\n                attrs: { label: \"激活码\", prop: \"code\", align: \"center\" }\n              }),\n              _vm._v(\" \"),\n              _c(\n                \"el-table-column\",\n                { attrs: { label: \"状态\", align: \"center\" } },\n                [[_vm._v(\"\\n          已使用\\n        \")]],\n                2\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"div\",\n            { staticClass: \"page_center\" },\n            [\n              _c(\"paging\", {\n                attrs: { \"page-count\": _vm.codePageCount, page: _vm.codePage },\n                on: {\n                  index: function(e) {\n                    _vm.codePage = e\n                    _vm.codeDetails(_vm.currentCode)\n                  }\n                }\n              })\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-1be22086\", esExports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1be22086\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/Setup/channel/Receipt.vue\n// module id = null\n// module chunks = ","var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1be22086\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Receipt.vue\")\n}\nvar normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Receipt.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Receipt.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1be22086\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Receipt.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-1be22086\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src/pages/Setup/channel/Receipt.vue\"\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-1be22086\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-1be22086\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/Setup/channel/Receipt.vue\n// module id = null\n// module chunks = ","module.exports = { \"default\": require(\"core-js/library/fn/object/keys\"), __esModule: true };\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/babel-runtime/core-js/object/keys.js\n// module id = fZjL\n// module chunks = 5 6","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(true);\n// imports\n\n\n// module\nexports.push([module.id, \"\\n.ellipsis[data-v-1be22086] {\\r\\n  width: 150px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  display: -webkit-box;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-line-clamp: 2;\\n}\\n.areaDetails[data-v-1be22086] {\\r\\n  max-height: 300px;\\r\\n  min-height: 100px;\\r\\n  overflow: auto;\\n}\\n.areaDetails .area[data-v-1be22086] {\\r\\n  padding: 10px 0;\\r\\n  border-bottom: 1px solid #cccccc;\\n}\\n.areaDetails .province[data-v-1be22086] {\\r\\n  font-size: 15px;\\r\\n  font-weight: 600;\\n}\\n.img[data-v-1be22086] {\\r\\n  width: 70px;\\r\\n  height: 70px;\\n}\\n.input[data-v-1be22086] {\\r\\n  width: 50%;\\n}\\n.laybox2 ul[data-v-1be22086] {\\r\\n  margin: 33px auto;\\r\\n  border-bottom: 1px dashed #04bbfc;\\n}\\n.laybox2[data-v-1be22086] {\\r\\n  padding: 60px;\\r\\n  font-size: 16px;\\n}\\n.laybox2 li[data-v-1be22086] {\\r\\n  width: 300px;\\r\\n  text-align: left;\\r\\n  margin: 33px auto;\\n}\\n.t-c[data-v-1be22086]:after {\\r\\n  content: \\\"\\\";\\r\\n  display: block;\\r\\n  height: 0;\\r\\n  clear: both;\\n}\\n.bot > div[data-v-1be22086] {\\r\\n  position: relative;\\n}\\ndiv.bot[data-v-1be22086] {\\r\\n  margin: 45px auto 35px auto;\\r\\n  height: 100px;\\n}\\ndiv.bot span[data-v-1be22086] {\\r\\n  display: inline-block;\\r\\n  width: 20%;\\n}\\ndiv.bot input[data-v-1be22086] {\\r\\n  display: inline-block;\\r\\n  width: 55%;\\r\\n  outline: none;\\r\\n  border: none;\\r\\n  border-bottom: 1px solid #aaa;\\n}\\ndiv.bot button[data-v-1be22086] {\\r\\n  width: 110px;\\r\\n  height: 36px;\\r\\n  margin-left: -55px;\\r\\n  position: absolute;\\r\\n  border-radius: 18px;\\r\\n  -webkit-box-shadow: 4px 0px 6px rgba(177, 42, 19, 0.2);\\r\\n          box-shadow: 4px 0px 6px rgba(177, 42, 19, 0.2);\\r\\n  border: none;\\r\\n  color: #fff;\\r\\n  left: 50%;\\r\\n  top: 60px;\\n}\\nbutton.reject[data-v-1be22086] {\\r\\n  background: rgba(237, 81, 55, 1);\\r\\n  margin-right: 30%;\\n}\\nbutton.pass[data-v-1be22086] {\\r\\n  background-color: #20a0ff;\\n}\\n.left[data-v-1be22086] {\\r\\n  float: left;\\r\\n  width: 50%;\\n}\\n.right[data-v-1be22086] {\\r\\n  float: right;\\r\\n  width: 50%;\\n}\\n.nowrap[data-v-1be22086] {\\r\\n  width: 120px !important;\\r\\n  text-align: center;\\r\\n  white-space: nowrap; /*规定文本不换行**/\\r\\n  text-overflow: ellipsis; /**显示省略符号来代表被修剪的文本。*/\\r\\n  overflow: hidden;\\r\\n  margin: 0 auto;\\n}\\n.regionDetail[data-v-1be22086] .el-dialog__title {\\r\\n  font-size: 22px;\\n}\\n.regionDetail[data-v-1be22086] .el-dialog__body {\\r\\n  padding: 0px 25px 30px;\\r\\n  border-top: solid 2px #eee;\\n}\\n[data-v-1be22086] .el-dialog {\\r\\n  min-height: 300px;\\n}\\r\\n\", \"\", {\"version\":3,\"sources\":[\"F:/仲达集团/2020-3-18总后台管理系统/src/pages/Setup/channel/src/pages/Setup/channel/Receipt.vue\"],\"names\":[],\"mappings\":\";AAg1BA;EACA,aAAA;EACA,iBAAA;EACA,wBAAA;EACA,qBAAA;EACA,6BAAA;EACA,sBAAA;CACA;AACA;EACA,kBAAA;EACA,kBAAA;EACA,eAAA;CACA;AACA;EACA,gBAAA;EACA,iCAAA;CACA;AACA;EACA,gBAAA;EACA,iBAAA;CACA;AACA;EACA,YAAA;EACA,aAAA;CACA;AACA;EACA,WAAA;CACA;AACA;EACA,kBAAA;EACA,kCAAA;CACA;AAEA;EACA,cAAA;EACA,gBAAA;CACA;AAEA;EACA,aAAA;EACA,iBAAA;EACA,kBAAA;CACA;AAEA;EACA,YAAA;EACA,eAAA;EACA,UAAA;EACA,YAAA;CACA;AAEA;EACA,mBAAA;CACA;AAEA;EACA,4BAAA;EACA,cAAA;CACA;AAEA;EACA,sBAAA;EACA,WAAA;CACA;AAEA;EACA,sBAAA;EACA,WAAA;EACA,cAAA;EACA,aAAA;EACA,8BAAA;CACA;AAEA;EACA,aAAA;EACA,aAAA;EACA,mBAAA;EACA,mBAAA;EACA,oBAAA;EACA,uDAAA;UAAA,+CAAA;EACA,aAAA;EACA,YAAA;EACA,UAAA;EACA,UAAA;CACA;AAEA;EACA,iCAAA;EACA,kBAAA;CACA;AAEA;EACA,0BAAA;CACA;AAEA;EACA,YAAA;EACA,WAAA;CACA;AAEA;EACA,aAAA;EACA,WAAA;CACA;AACA;EACA,wBAAA;EACA,mBAAA;EACA,oBAAA,CAAA,YAAA;EACA,wBAAA,CAAA,qBAAA;EACA,iBAAA;EACA,eAAA;CACA;AACA;EACA,gBAAA;CACA;AACA;EACA,uBAAA;EACA,2BAAA;CACA;AAEA;EACA,kBAAA;CACA\",\"file\":\"Receipt.vue\",\"sourcesContent\":[\"<template>\\r\\n  <div>\\r\\n    <ctbHead>\\r\\n      <router-link :class=\\\"seCurId==item.id? 'cur':''\\\"\\r\\n                   v-for=\\\"item in authList\\\"\\r\\n                   :key=\\\"item.id\\\"\\r\\n                   :to=\\\"{path:item.action,query:{id:curId}}\\\"\\r\\n                   :v-key=\\\"item.id\\\">\\r\\n        {{item.name}}\\r\\n      </router-link>\\r\\n    </ctbHead>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"quote\\\">\\r\\n        <div class=\\\"quote-ele\\\">\\r\\n          <i></i>系统设置-免费保养设置-领卡渠道\\r\\n          <el-button type=\\\"primary\\\"\\r\\n                     style=\\\"float:right;margin:20px 40px 0 0\\\"\\r\\n                     @click=\\\"addVisible=true,state=1,openAdd(true)\\\">添加</el-button>\\r\\n        </div>\\r\\n        <div class=\\\"quote-nav\\\">\\r\\n          <router-link :class=\\\"thCurId==item.id? 'cur':''\\\"\\r\\n                       v-for=\\\"item in threeAuthList\\\"\\r\\n                       :key=\\\"item.id\\\"\\r\\n                       :to=\\\"{path:item.action,query:{id:curId}}\\\">\\r\\n            {{item.name}}\\r\\n          </router-link>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div style=\\\"margin-left:20px\\\">\\r\\n        <el-select v-model=\\\"province\\\"\\r\\n                   placeholder=\\\"请选择所查询的地区\\\"\\r\\n                   @change=\\\"page=1,init()\\\">\\r\\n          <el-option value=\\\"1\\\"\\r\\n                     label=\\\"全国\\\">全国</el-option>\\r\\n          <el-option v-for=\\\"(item,index) in provinceList\\\"\\r\\n                     :key=\\\"index\\\"\\r\\n                     :label=\\\"item.label\\\"\\r\\n                     :value=\\\"item.id\\\"></el-option>\\r\\n        </el-select>\\r\\n      </div>\\r\\n      <el-table :data=\\\"list\\\"\\r\\n                v-loading=\\\"tableLoading\\\">\\r\\n        <!-- <el-table-column label=\\\"图片\\\"\\r\\n                         align=\\\"center\\\">\\r\\n          <template slot-scope=\\\"scope\\\">\\r\\n            <img :src=\\\"scope.row.photo\\\"\\r\\n                 class=\\\"img\\\">\\r\\n          </template>\\r\\n        </el-table-column> -->\\r\\n        <el-table-column align=\\\"center\\\"\\r\\n                         prop=\\\"company\\\"\\r\\n                         label=\\\"名称\\\">\\r\\n\\r\\n        </el-table-column>\\r\\n        <el-table-column label=\\\"渠道类型\\\"\\r\\n                         align=\\\"center\\\"\\r\\n                         prop=\\\"channel_type_name\\\">\\r\\n\\r\\n        </el-table-column>\\r\\n        <el-table-column align=\\\"center\\\"\\r\\n                         prop=\\\"num\\\"\\r\\n                         label=\\\"生成数量/次\\\">\\r\\n        </el-table-column>\\r\\n        <el-table-column align=\\\"center\\\"\\r\\n                         prop=\\\"sur_num\\\"\\r\\n                         label=\\\"剩余数量\\\">\\r\\n        </el-table-column>\\r\\n        <el-table-column align=\\\"center\\\"\\r\\n                         label=\\\"激活码详情\\\">\\r\\n          <template slot-scope=\\\"scope\\\">\\r\\n            <el-button type=\\\"text\\\"\\r\\n                       @click=\\\"codeDetails(scope.row)\\\">详情</el-button>\\r\\n          </template>\\r\\n        </el-table-column>\\r\\n        <el-table-column align=\\\"center\\\"\\r\\n                         label=\\\"地区\\\">\\r\\n          <template slot-scope=\\\"scope\\\">\\r\\n            <el-popover placement=\\\"bottom\\\"\\r\\n                        width=\\\"400\\\"\\r\\n                        trigger=\\\"click\\\">\\r\\n              <el-button type=\\\"text\\\"\\r\\n                         slot=\\\"reference\\\">详情</el-button>\\r\\n              <div class=\\\"areaDetails\\\">\\r\\n                <h4 style=\\\"text-align:center\\\">地区详情</h4>\\r\\n                <div v-if=\\\"scope.row.province\\\">\\r\\n                  <span style=\\\"float:left;width:80%;\\\">\\r\\n                    <div v-for=\\\"(item,index) in scope.row.province\\\"\\r\\n                         :key=\\\"index\\\"\\r\\n                         class=\\\"area\\\">\\r\\n                      <p class=\\\"province\\\"> {{item.province_name}}</p>\\r\\n                      <p class=\\\"city\\\">{{item.city_name ? item.city_name.join('、') : ''}}</p>\\r\\n                    </div>\\r\\n                  </span>\\r\\n                </div>\\r\\n                <div v-else\\r\\n                     style=\\\"text-align:center;line-height:100px;font-size:18px\\\">\\r\\n                  无\\r\\n                </div>\\r\\n              </div>\\r\\n            </el-popover>\\r\\n          </template>\\r\\n        </el-table-column>\\r\\n\\r\\n        <el-table-column align=\\\"center\\\"\\r\\n                         prop=\\\"create_time\\\"\\r\\n                         label=\\\"创建时间\\\">\\r\\n        </el-table-column>\\r\\n        <el-table-column label=\\\"操作/是否显示\\\"\\r\\n                         align=\\\"center\\\"\\r\\n                         min-width=\\\"140px\\\">\\r\\n          <template slot-scope=\\\"scope\\\">\\r\\n            <el-switch :active-value='1'\\r\\n                       :inactive-value='2'\\r\\n                       active-color=\\\"#13ce66\\\"\\r\\n                       inactive-color=\\\"#ff4949\\\"\\r\\n                       v-model=\\\"scope.row.status\\\"\\r\\n                       @change='Setup(scope.row)'>\\r\\n\\r\\n            </el-switch>\\r\\n\\r\\n            <el-button type=\\\"primary\\\"\\r\\n                       size=\\\"mini\\\"\\r\\n                       style=\\\"margin-left:10px\\\"\\r\\n                       @click=\\\"addVisible=true,state=2,defaultData(scope.row)\\\">修改</el-button>\\r\\n            <el-button type=\\\"primary\\\"\\r\\n                       size=\\\"mini\\\"\\r\\n                       @click=\\\"createCode(scope.row,scope.$index)\\\"\\r\\n                       :loading=\\\"codeLoading[scope.$index]\\\"\\r\\n                       :disabled=\\\"scope.row.sur_num >0\\\">生成激活码</el-button>\\r\\n            <el-button type=\\\"primary\\\"\\r\\n                       size=\\\"mini\\\"\\r\\n                       @click=\\\"exportCode(scope.row,true)\\\"\\r\\n                       :loading=\\\"exportLoading[scope.$index]\\\">导出</el-button>\\r\\n          </template>\\r\\n        </el-table-column>\\r\\n      </el-table>\\r\\n\\r\\n      <!-- 分页 -->\\r\\n      <div class=\\\"page_center\\\">\\r\\n        <paging :page-count=\\\"pageCount\\\"\\r\\n                :page=\\\"page\\\"\\r\\n                @index=\\\"paging\\\"></paging>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <el-dialog center\\r\\n               :title=\\\"state==1 ? '添加': '修改'\\\"\\r\\n               :visible.sync=\\\"addVisible\\\"\\r\\n               @close='()=>{\\r\\n                   $refs.form.resetFields();\\r\\n                   $refs.tree.setCheckedKeys([]);\\r\\n                   cardNum=\\\"\\\";\\r\\n                   remainingNum=\\\"\\\"\\r\\n               }'>\\r\\n      <el-form label-width=\\\"100px\\\"\\r\\n               :model=\\\"listQuery\\\"\\r\\n               :rules=\\\"rules\\\"\\r\\n               ref=\\\"form\\\">\\r\\n        <el-form-item label=\\\"名称:\\\"\\r\\n                      prop=\\\"company\\\">\\r\\n          <el-input placeholder=\\\"请输出名称\\\"\\r\\n                    class=\\\"input\\\"\\r\\n                    v-model=\\\"listQuery.company\\\" />\\r\\n        </el-form-item>\\r\\n        <!-- <el-form-item prop=\\\"type_channel\\\"\\r\\n                      label=\\\"显示类型:\\\">\\r\\n          <el-radio-group v-model=\\\"listQuery.type_channel\\\">\\r\\n            <el-radio :label=\\\"1\\\">保险公司</el-radio>\\r\\n            <el-radio :label=\\\"2\\\">领卡渠道</el-radio>\\r\\n          </el-radio-group>\\r\\n        </el-form-item>\\r\\n        <el-form-item label=\\\"类型:\\\"\\r\\n                      prop=\\\"type\\\">\\r\\n          <el-radio v-model=\\\"listQuery.type\\\"\\r\\n                    :label=\\\"1\\\">五折养护</el-radio>\\r\\n          <el-radio v-model=\\\"listQuery.type\\\"\\r\\n                    :label=\\\"2\\\">单次免费</el-radio>\\r\\n        </el-form-item>\\r\\n        <el-form-item label=\\\"联系电话\\\"\\r\\n                      prop=\\\"phone\\\">\\r\\n          <el-input class=\\\"input\\\"\\r\\n                    v-model=\\\"listQuery.phone\\\"\\r\\n                    placeholder=\\\"请输入联系电话\\\" />\\r\\n        </el-form-item> -->\\r\\n        <el-form-item :label=\\\"state==1 ? '卡数量' : '消耗数量'\\\"\\r\\n                      prop=\\\"num\\\">\\r\\n          <span v-if=\\\"state!=1\\\">\\r\\n            {{cardNum-remainingNum}}\\r\\n            +\\r\\n\\r\\n          </span>\\r\\n          <el-input class=\\\"input\\\"\\r\\n                    v-model=\\\"listQuery.num\\\"\\r\\n                    placeholder=\\\"请输入卡数量\\\" />\\r\\n        </el-form-item>\\r\\n        <!-- <el-form-item label=\\\"地址\\\"\\r\\n                      required>\\r\\n          <el-col :span=\\\"5\\\">\\r\\n            <el-form-item prop=\\\"province_name\\\">\\r\\n              <el-select v-model=\\\"listQuery.province_name\\\"\\r\\n                         placeholder=\\\"请选择省\\\"\\r\\n                         @change=\\\"provinceChange\\\">\\r\\n                <el-option v-for=\\\"(item,index) in provinceList\\\"\\r\\n                           :key=\\\"index\\\"\\r\\n                           :value=\\\"item.label\\\"\\r\\n                           :label=\\\"item.label\\\"></el-option>\\r\\n              </el-select>\\r\\n            </el-form-item>\\r\\n          </el-col>\\r\\n          <el-col class=\\\"line\\\"\\r\\n                  style=\\\"text-align:center\\\"\\r\\n                  :span=\\\"1\\\">-</el-col>\\r\\n          <el-col :span=\\\"5\\\">\\r\\n            <el-form-item prop=\\\"city\\\">\\r\\n              <el-select v-model=\\\"listQuery.city\\\"\\r\\n                         placeholder=\\\"请选择市\\\"\\r\\n                         @change=\\\"cityChange\\\">\\r\\n                <el-option v-for=\\\"(item,index) in cityList\\\"\\r\\n                           :key=\\\"index\\\"\\r\\n                           :value=\\\"item.label\\\"\\r\\n                           :label=\\\"item.label\\\"></el-option>\\r\\n              </el-select>\\r\\n            </el-form-item>\\r\\n          </el-col>\\r\\n\\r\\n          <el-col class=\\\"line\\\"\\r\\n                  style=\\\"text-align:center\\\"\\r\\n                  :span=\\\"1\\\">-</el-col>\\r\\n          <el-col :span=\\\"5\\\">\\r\\n            <el-form-item prop=\\\"county\\\">\\r\\n              <el-select v-model=\\\"listQuery.county\\\"\\r\\n                         placeholder=\\\"请选择区/县\\\">\\r\\n                <el-option v-for=\\\"(item,index) in countyList\\\"\\r\\n                           :key=\\\"index\\\"\\r\\n                           :value=\\\"item.name\\\"\\r\\n                           :label=\\\"item.name\\\"></el-option>\\r\\n              </el-select>\\r\\n            </el-form-item>\\r\\n          </el-col>\\r\\n\\r\\n        </el-form-item>\\r\\n        <el-form-item label=\\\"详细地址\\\"\\r\\n                      prop=\\\"address\\\">\\r\\n          <el-input class=\\\"input\\\"\\r\\n                    v-model=\\\"listQuery.address\\\"\\r\\n                    placeholder=\\\"请输入详细地址\\\" />\\r\\n        </el-form-item> -->\\r\\n        <el-form-item label=\\\"地区\\\">\\r\\n          <div>\\r\\n            <el-checkbox v-model=\\\"checkAll\\\"\\r\\n                         @change=\\\"checkAllChange\\\">全选</el-checkbox>\\r\\n          </div>\\r\\n          <el-tree :data=\\\"provinceList\\\"\\r\\n                   show-checkbox\\r\\n                   node-key=\\\"id\\\"\\r\\n                   ref=\\\"tree\\\"\\r\\n                   :default-checked-keys=\\\"defaultAll\\\"\\r\\n                   props=\\\"\\\"\\r\\n                   @check='treeCheck'>\\r\\n          </el-tree>\\r\\n        </el-form-item>\\r\\n        <!-- <el-form-item label=\\\"地区:\\\"\\r\\n                      prop=\\\"provinceID\\\">\\r\\n          <el-checkbox :indeterminate=\\\"isIndeterminate\\\"\\r\\n                       v-model=\\\"checkAll\\\"\\r\\n                       @change=\\\"handleCheckAllChange\\\">全选</el-checkbox>\\r\\n          <div style=\\\"margin: 15px 0;\\\"></div>\\r\\n\\r\\n          <el-checkbox v-for=\\\"(item,index) in provinceList\\\"\\r\\n                       style=\\\"width:70px\\\"\\r\\n                       :label=\\\"item.id\\\"\\r\\n                       :key=\\\"item.id\\\"\\r\\n                       v-model=\\\"listQuery.provinceID\\\"\\r\\n                       :indeterminate=\\\"item.isIndeterminate\\\"\\r\\n                       @change=\\\"((val,$event)=>handleCheckedCitiesChange(val,$event,index))\\\">\\r\\n            <p @click.prevent=\\\"getCity(item.id,index,$event)\\\">\\r\\n              {{item.name}}\\r\\n            </p>\\r\\n\\r\\n          </el-checkbox>\\r\\n\\r\\n        </el-form-item> -->\\r\\n        <!-- <el-form-item label=\\\"图片:\\\"\\r\\n                      prop=\\\"photo\\\">\\r\\n          <el-upload :action=\\\"`${uploadUrl}admin/SystemSetup/uploadPic`\\\"\\r\\n                     list-type=\\\"picture-card\\\"\\r\\n                     :on-success='handleSuccess'\\r\\n                     :data=\\\"{token:token}\\\"\\r\\n                     :file-list=\\\"listQuery.photo  ?  [{url:listQuery.photo}] : []\\\"\\r\\n                     name=\\\"image\\\"\\r\\n                     :limit='1'>\\r\\n\\r\\n            <i class=\\\"el-icon-plus\\\"></i>\\r\\n          </el-upload>\\r\\n        </el-form-item> -->\\r\\n        <el-form-item>\\r\\n          <el-button type=\\\"primary\\\"\\r\\n                     @click=\\\"state==1? add() : Modify()\\\"\\r\\n                     :loading=\\\"loading\\\">{{state==1 ? '添加' : '修改'}}</el-button>\\r\\n        </el-form-item>\\r\\n      </el-form>\\r\\n    </el-dialog>\\r\\n    <el-dialog title=\\\"激活码详情\\\"\\r\\n               center\\r\\n               :visible.sync=\\\"codeVisible\\\">\\r\\n      <el-table :data=\\\"codeList\\\">\\r\\n        <el-table-column label=\\\"用户名称\\\"\\r\\n                         prop=\\\"name\\\"\\r\\n                         align=\\\"center\\\"></el-table-column>\\r\\n        <el-table-column label=\\\"联系电话\\\"\\r\\n                         prop=\\\"phone\\\"\\r\\n                         align=\\\"center\\\"></el-table-column>\\r\\n        <el-table-column label=\\\"维修厂名称\\\"\\r\\n                         prop=\\\"company\\\"\\r\\n                         align=\\\"center\\\"></el-table-column>\\r\\n        <el-table-column label=\\\"激活码\\\"\\r\\n                         prop=\\\"code\\\"\\r\\n                         align=\\\"center\\\"></el-table-column>\\r\\n        <el-table-column label=\\\"状态\\\"\\r\\n                         align=\\\"center\\\">\\r\\n          <template>\\r\\n            已使用\\r\\n          </template>\\r\\n        </el-table-column>\\r\\n      </el-table>\\r\\n      <div class=\\\"page_center\\\">\\r\\n        <paging :page-count=\\\"codePageCount\\\"\\r\\n                :page=\\\"codePage\\\"\\r\\n                @index=\\\"(e)=>{\\r\\n                    codePage = e;\\r\\n                    codeDetails(currentCode)\\r\\n                }\\\"></paging>\\r\\n\\r\\n      </div>\\r\\n    </el-dialog>\\r\\n  </div>\\r\\n</template>\\r\\n<script type=\\\"text/ecmascript-6\\\">\\r\\nimport { getPro, GET_City, get_County, AccordingName_findID } from '@/utils/index'\\r\\nexport default {\\r\\n  data () {\\r\\n    return {\\r\\n      list: [],\\r\\n      token: window.sessionStorage.getItem('bbytoken'),\\r\\n      page: 0,\\r\\n      pageCount: 0,\\r\\n      authList: [],\\r\\n      uploadUrl: this.baseURL,\\r\\n      threeAuthList: [],\\r\\n      addVisible: false,\\r\\n      tableLoading: false,\\r\\n      loading: false,\\r\\n      province: '',\\r\\n      listQuery: {\\r\\n        company: '',\\r\\n        type_channel: 2,\\r\\n        type: 2,\\r\\n        phone: '', //联系电话\\r\\n        num: 500, //卡数量\\r\\n        // province_name: '',\\r\\n        // city: '',\\r\\n        // county: '',\\r\\n        // address: \\\"\\\",\\r\\n        // photo: '',\\r\\n        provinceID: [],\\r\\n      },\\r\\n      state: 1, // 1 添加 2 修改\\r\\n      provinceList: [],\\r\\n      isIndeterminate: false,  //省是否全选中\\r\\n      checkAll: false,\\r\\n      rules: {\\r\\n        company: { required: true, message: '名称不能为空', trigger: 'blur' },\\r\\n        // type: { required: true, message: '请选择类型', trigger: 'blur' },\\r\\n        // photo: { required: true, message: '请上传图片', trigger: 'blur' },\\r\\n        // provinceID: { required: true, message: '请选择区域', trigger: 'blur' },\\r\\n        // type_channel: { required: true, message: '请选择显示类型', trigger: 'blur' },\\r\\n        // phone: { required: true, message: '联系电话不能为空', trigger: 'blur' },\\r\\n        num: { required: true, message: '卡数量不能为空', trigger: 'blur' },\\r\\n        // province_name: { required: true, message: '省不能为空', trigger: 'blur' },\\r\\n        // city: { required: true, message: '市不能为空', trigger: 'blur' },\\r\\n        // county: { required: true, message: '区/县不能为空', trigger: 'blur' },\\r\\n        // address: { required: true, message: '详细地址不能为空', trigger: 'blur' },\\r\\n      },\\r\\n      cityList: [], //市列表\\r\\n      cityVisible: false, //是否显示市详情 默认不显示\\r\\n      cityIsIndeterminate: false,\\r\\n      cityCheckAll: false,\\r\\n      cityChecked: [],\\r\\n      provinceID: [],//所有省id\\r\\n      cityID: [], //所有市id\\r\\n      provinceIndex: 0, //当前选中的省下标\\r\\n      currentCity: [],  //当前选择省下面的市,\\r\\n      defaultAll: [],  //默认全选,\\r\\n      getCheckedKeys: [],\\r\\n      countyList: [], //区县列表\\r\\n      codeLoading: [], //生成激活码按钮loading\\r\\n      exportLoading: [], //导出loading\\r\\n      codeVisible: false, //激活码详情弹框\\r\\n      codeList: [], //激活码列表\\r\\n      codePageCount: 1,\\r\\n      codePage: 1,\\r\\n      currentCode: {},\\r\\n      cardNum: '',//卡数量\\r\\n      remainingNum: ''\\r\\n    }\\r\\n  },\\r\\n\\r\\n  computed: {\\r\\n    isAllChecked () {\\r\\n      let provinceLength = this.provinceList.length;   //所有的省长度\\r\\n      let provinceCheckedLength = this.listQuery.provinceID.length  //当前选中的省长度\\r\\n      let cityCheckedLength = this.cityChecked.length;  //当前选中的市长度\\r\\n      let city = []\\r\\n      this.provinceList.forEach(item => {\\r\\n        item.city.forEach(v => {\\r\\n          city.push(v)\\r\\n        })\\r\\n      })\\r\\n      return provinceLength == provinceCheckedLength && city.length == cityCheckedLength\\r\\n    }\\r\\n  },\\r\\n  watch: {\\r\\n    \\\"listQuery.province_name\\\": {\\r\\n      deep: true, //深度监听设置为 true\\r\\n      handler (name) {\\r\\n        name && this.provinceChange(name)\\r\\n      }\\r\\n    },\\r\\n    \\\"listQuery.city\\\": {\\r\\n      deep: true, //深度监听设置为 true\\r\\n      handler (name) {\\r\\n        name && this.cityChange(name)\\r\\n      }\\r\\n    },\\r\\n    \\\"listQuery.county\\\": {\\r\\n      deep: true, //深度监听设置为 true\\r\\n      handler (name) {\\r\\n\\r\\n      }\\r\\n    },\\r\\n  },\\r\\n\\r\\n  methods: {\\r\\n    paging (e) {\\r\\n      this.page = e;\\r\\n      this.init()\\r\\n    },\\r\\n    async init () {\\r\\n      this.tableLoading = true\\r\\n      let [list, getAreaList] = await Promise.all([this.getList(), this.getArea()])\\r\\n      this.list = list.data.data.list || []\\r\\n      this.pageCount = list.data.data.rows || 1;\\r\\n      //   console.log(getAreaList)\\r\\n      this.provinceList = getAreaList || []\\r\\n      this.tableLoading = false\\r\\n    },\\r\\n    async getList () {\\r\\n      return await this.$axios.post('admin/SystemSetup/systemLists', { token: this.token, page: this.page, province: this.province })\\r\\n    },\\r\\n    async openAdd (checked, defaultData) {  //获取全部省\\r\\n      // this.provinceList = this.areaWhetherChecked()\\r\\n      this.$nextTick(() => {\\r\\n        this.$refs.tree.setCheckedKeys(this.defaultAll)\\r\\n        this.getCheckedKeys = this.$refs.tree.getCheckedKeys()   //获取被选中的id\\r\\n        this.checkAll = true\\r\\n      })\\r\\n    },\\r\\n    getArea () {    //获取地区\\r\\n      return new Promise(async (resolve, reject) => {\\r\\n        try {\\r\\n          let data = await getPro();\\r\\n          let list = []\\r\\n\\r\\n          data.forEach(async (item, index) => {\\r\\n            let city = await GET_City(item.id)\\r\\n            let children = []\\r\\n            city.forEach(e => {\\r\\n              children.push({ id: e.id, label: e.name })\\r\\n              this.defaultAll.push(e.id)\\r\\n            })\\r\\n            list.push({ id: item.id, label: item.name, children: children })\\r\\n            this.defaultAll.push(item.id) //默认全选\\r\\n          })\\r\\n          resolve(list)\\r\\n        } catch (error) {\\r\\n          reject(error)\\r\\n        }\\r\\n      })\\r\\n    },\\r\\n    // areaWhetherChecked (checked) {   //checked 是否全选\\r\\n    //   let provinceList = this.provinceList\\r\\n    //   provinceList.forEach(item => {\\r\\n    //     item = Object.assign(item, { checked: checked });\\r\\n    //     item.city.forEach(v => {\\r\\n    //       v = Object.assign(v, { checked: checked })\\r\\n    //       if (checked) {\\r\\n    //         this.cityChecked.push(v.id)\\r\\n    //       }\\r\\n    //     })\\r\\n    //     if (checked) {\\r\\n    //       this.listQuery.provinceID.push(item.id)\\r\\n    //     }\\r\\n    //   })\\r\\n    //   return provinceList;\\r\\n    // },\\r\\n\\r\\n    checkAllChange () {  //全选\\r\\n      this.$refs.tree.setCheckedKeys(this.checkAll ? this.defaultAll : [])\\r\\n    },\\r\\n    treeCheck () {\\r\\n      this.checkAll = this.$refs.tree.getCheckedKeys().length == this.defaultAll.length //是否全选\\r\\n    },\\r\\n    defaultData (row) {  //修改       默认数据\\r\\n      this.cardNum = row.num\\r\\n      this.remainingNum = row.sur_num\\r\\n      let province = row.province;\\r\\n      let provinceID = [];\\r\\n      let cityID = [];\\r\\n      let iSnational = false\\r\\n      Object.keys(province).forEach(key => {   //获取需要默认选中的id\\r\\n        let province_id = province[key].province_id;\\r\\n        let city_id = province[key].city_id\\r\\n        if (province_id) {\\r\\n          provinceID.push(province_id)\\r\\n        }\\r\\n        if (city_id) {\\r\\n          cityID.push(...city_id)\\r\\n        }\\r\\n        iSnational = province[key].province_name == '全国' ? true : false; //是否是全国\\r\\n      })\\r\\n      this.$nextTick(() => {\\r\\n        this.getCheckedKeys = this.$refs.tree.getCheckedKeys()   //获取被选中的id\\r\\n        this.$refs.tree.setCheckedKeys(iSnational ? this.defaultAll : cityID);\\r\\n        this.listQuery = Object.assign(this.listQuery, row)\\r\\n        this.checkAll = iSnational\\r\\n      })\\r\\n      //   let provinceList = this.provinceList\\r\\n      //   provinceList.forEach(item => {   //根据选中的id匹配 进行设置选中\\r\\n      //     provinceID.forEach(v => {\\r\\n      //       if (item.id == v) {\\r\\n      //         item.checked = true\\r\\n      //       }\\r\\n      //     })\\r\\n      //     item.city.forEach(v => {\\r\\n      //       cityID.forEach(e => {\\r\\n      //         if (v.id == e) {\\r\\n      //           v.checked = true\\r\\n      //         }\\r\\n      //       })\\r\\n      //     })\\r\\n      //   })\\r\\n      //   this.provinceList = provinceList  //重新渲染\\r\\n      //   let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();   //获取选中的省id 和选中的市id\\r\\n      //   this.$nextTick(() => {\\r\\n      //     this.listQuery = Object.assign(this.listQuery, { company: row.company, type: row.type, photo: row.photo, provinceID: provinceCheckedID, id: row.id, type_channel: row.type_channel })   //设置省默认选中状态\\r\\n      //   })\\r\\n      //   this.cityChecked = cityCheckedId  //设置市默认选中状态\\r\\n      //   this.isIndeterminate = provinceCheckedID.length < this.provinceList.length && provinceCheckedID.length > 0\\r\\n      //   this.checkAll = provinceID.length == this.provinceList.length;\\r\\n    },\\r\\n\\r\\n\\r\\n    // handleCheckAllChange (val) {  //地区全选功能\\r\\n    //   let provinceList = [];\\r\\n    //   let provinceID = []\\r\\n    //   this.provinceList.forEach((el, index) => {  //获取所有省id  \\r\\n    //     this.provinceList[index].checked = val;\\r\\n    //     el.city.forEach((item, i) => {\\r\\n    //       this.provinceList[index].city[i].checked = this.checkAll\\r\\n    //     })\\r\\n    //     provinceID.push(el.id)\\r\\n    //   });\\r\\n    //   let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();\\r\\n    //   this.listQuery.provinceID = provinceCheckedID;\\r\\n    //   this.cityChecked = cityCheckedId\\r\\n    //   this.isIndeterminate = false;\\r\\n    // },\\r\\n    // handleCheckedCitiesChange (v, e, index) {   //当前省操作  v 代表当时省是否选中  e event对象  index 当前省的下标\\r\\n    //   this.provinceList[index].checked = v      // 设置当前的省的选中状态\\r\\n    //   let length = this.listQuery.provinceID.length;   //当前省选中的长度\\r\\n    //   this.provinceList[index].city.forEach((item, i) => {\\r\\n    //     this.provinceList[index].city[i].checked = v\\r\\n    //   })\\r\\n    //   let { cityCheckedId } = this.getAreaCheckedID();\\r\\n    //   this.cityChecked = cityCheckedId  //市默认选中状态\\r\\n    //   this.isIndeterminate = length < this.provinceList.length && length > 0;      //判断当前省选中的长度是否小于当前省的长度并且当前选中省的长度大于0  如果条件成立设置全选的按钮的状态\\r\\n    //   console.log(length)\\r\\n    //   this.checkAll = length == this.provinceList.length     //当前选中省的长度如果等于当前省的长度, 省全选按钮勾选\\r\\n\\r\\n    // },\\r\\n\\r\\n    // //获取市\\r\\n    // async getCity (id, index, e) {\\r\\n    //   this.provinceIndex = index //当前选择的省下标\\r\\n    //   this.currentCity = this.provinceList[index].city   //当前省下面的市\\r\\n    //   this.cityVisible = true;   //是否显示市详情弹框\\r\\n    //   this.cityList = this.provinceList[index].city   //获取当前市\\r\\n    //   let currentCityLength = this.currentCity.length;    //当前市的长度\\r\\n    //   let { cityCheckedId } = this.getAreaCheckedID();   //获取已选中市的id\\r\\n    //   this.cityChecked = cityCheckedId    //设置市默认选中状态\\r\\n    //   let cityCheckedLength = this.cityCheckedLength(this.currentCity)    //当前市选中的长度\\r\\n    //   this.cityCheckAll = this.provinceList[index].checked ? cityCheckedLength == currentCityLength : false  //用当前市和当前选中市进行判断如果当前市的长度不等于当前选中的市的长度,则市全选不勾选,  相反如果等于全选按钮勾选\\r\\n\\r\\n\\r\\n    // },\\r\\n\\r\\n    // cityCheckedLength (currentCity) {    //当前选中的市的长度\\r\\n    //   return currentCity.filter(item => item.checked).length;\\r\\n    // },\\r\\n\\r\\n    // // 市全选操作\\r\\n    // cityCheckAllChange (val) {  //市 是否全选  val表示是否全选\\r\\n    //   let provinceIndex = this.provinceIndex     //获取当前选中省的下标\\r\\n    //   let cityID = []\\r\\n    //   this.provinceList[provinceIndex].city.forEach((item, index) => {\\r\\n    //     this.provinceList[provinceIndex].city[index].checked = val    //如果var等于true表示全选,把当前选中省下面的所有市改成选中状态,相反则改成非选中状态\\r\\n    //     cityID.push(item.id)\\r\\n    //   })\\r\\n    //   this.provinceList[provinceIndex].checked = val\\r\\n    //   let { provinceCheckedID, cityCheckedId } = this.getAreaCheckedID();   //获取当前选中市\\r\\n    //   this.listQuery.provinceID = provinceCheckedID\\r\\n    //   this.cityChecked = val ? this.provinceList[provinceIndex].checked ? cityCheckedId : cityID : []   //默认市的选中\\r\\n\\r\\n    //   this.isIndeterminate = provinceCheckedID.length < this.provinceList.length && provinceCheckedID.length > 0\\r\\n\\r\\n\\r\\n    // },\\r\\n\\r\\n    // getAreaCheckedID () {  //获取选中的省id和市id\\r\\n    //   let provinceCheckedID = [];\\r\\n    //   let cityCheckedId = []\\r\\n    //   this.provinceList.forEach(item => {\\r\\n    //     if (item.checked) {  //当前省是否选择\\r\\n    //       item.city.forEach(v => {\\r\\n    //         if (v.checked) {  //当前市是否选中\\r\\n    //           cityCheckedId.push(v.id)  //获取当前选中的市id\\r\\n    //         }\\r\\n    //       })\\r\\n    //       provinceCheckedID.push(item.id)   //获取当前选中的省id\\r\\n    //     }\\r\\n    //   })\\r\\n\\r\\n    //   return {\\r\\n    //     provinceCheckedID,\\r\\n    //     cityCheckedId\\r\\n    //   }\\r\\n    // },\\r\\n    // //当前市的操作\\r\\n    // cityChange (v, e, index) { // v:当前市是否被选中 e:event对象\\r\\n    //   this.cityList[index].checked = v;\\r\\n    //   let cityCheckedLength = this.cityCheckedLength(this.currentCity);\\r\\n    //   this.cityCheckAll = cityCheckedLength == this.currentCity.length;\\r\\n    //   console.log(cityCheckedLength)\\r\\n\\r\\n    //   this.provinceList[this.provinceIndex].checked = cityCheckedLength == 0 ? false : true\\r\\n\\r\\n    //   let { provinceCheckedID } = this.getAreaCheckedID();\\r\\n    //   this.listQuery.provinceID = provinceCheckedID;\\r\\n    //   console.log(cityCheckedLength, 'cityCheckedLength', '-----', this.currentCity.length)\\r\\n    //   this.isIndeterminate = cityCheckedLength < this.currentCity.length && cityCheckedLength > 0\\r\\n\\r\\n    // },\\r\\n    handleSuccess (res) {  //上传成功\\r\\n      this.listQuery = Object.assign({}, this.listQuery, { photo: res })\\r\\n    },\\r\\n    provinceChange (name) {  //获取市\\r\\n      let cityList = []\\r\\n      this.provinceList.forEach(item => {\\r\\n        if (item.label == name) {\\r\\n          cityList = item.children\\r\\n        }\\r\\n      })\\r\\n      this.cityList = cityList\\r\\n    },\\r\\n    async cityChange (name) {   //\\r\\n      let cityCheckedId = name && AccordingName_findID(this.cityList, name)    //获取当前市id\\r\\n      const countyList = await get_County(cityCheckedId)  //获取区县列表\\r\\n      this.countyList = countyList\\r\\n    },\\r\\n\\r\\n\\r\\n    getCityCheckedID (getCheckedKeys) {   //获取选中的市ID\\r\\n      let cityID = []\\r\\n      let provinceID = []\\r\\n      this.provinceList.forEach(item => {   //获取所有省id\\r\\n        provinceID.push(item.id)\\r\\n      })\\r\\n      getCheckedKeys.forEach(item => {  //过滤掉省id 只需要市id\\r\\n        if (!provinceID.includes(item)) {\\r\\n          cityID.push(item)\\r\\n        }\\r\\n      })\\r\\n      return cityID\\r\\n    },\\r\\n    add () {  //添加\\r\\n      console.log(this.listQuery)\\r\\n\\r\\n      this.$refs.form.validate(async (valid) => {\\r\\n        if (valid) {\\r\\n          try {\\r\\n            this.getCityCheckedID(this.$refs.tree.getCheckedKeys())  //获取被选中的市id\\r\\n            let isCheckedAll = this.$refs.tree.getCheckedKeys().length == this.getCheckedKeys.length\\r\\n            this.loading = true\\r\\n            let data = (({ company, type, photo, type_channel, phone, num, province_name, city, address, county }) => ({ company, type, photo, type_channel, phone, num, province_name, city, address, county }))(this.listQuery);\\r\\n            let province = this.getCityCheckedID(this.$refs.tree.getCheckedKeys()) && this.getCityCheckedID(this.$refs.tree.getCheckedKeys()).length > 0 ? this.getCityCheckedID(this.$refs.tree.getCheckedKeys()).join(',') : ''\\r\\n            const res = await this.$axios.post('admin/SystemSetup/addGenre', Object.assign({}, data, { token: this.token, types: 1, province: isCheckedAll ? 1 : province }))\\r\\n            this.loading = false\\r\\n            if (res.data.code == 1) {\\r\\n              this.$message({ message: res.data.msg, type: 'success' })\\r\\n              this.addVisible = false\\r\\n              this.exportCode(Object.assign(this.listQuery, { id: res.data.data }))\\r\\n              this.init()\\r\\n            } else {\\r\\n              this.$message.error(res.data.msg)\\r\\n            }\\r\\n          } catch (error) {\\r\\n            this.loading = false\\r\\n            throw (error)\\r\\n          }\\r\\n        }\\r\\n      })\\r\\n    },\\r\\n    //修改\\r\\n    Modify () {\\r\\n      this.$refs.form.validate(async (valid) => {\\r\\n        if (valid) {\\r\\n          try {\\r\\n            this.loading = true\\r\\n            let isCheckedAll = this.$refs.tree.getCheckedKeys().length == this.getCheckedKeys.length\\r\\n            let data = (({ company, type, photo, type_channel, phone, num, province_name, city, address, id, county }) => ({ company, type, photo, type_channel, phone, num, province_name, city, address, id, county }))(this.listQuery);\\r\\n            let province = this.getCityCheckedID(this.$refs.tree.getCheckedKeys()) && this.getCityCheckedID(this.$refs.tree.getCheckedKeys()).length > 0 ? this.getCityCheckedID(this.$refs.tree.getCheckedKeys()).join(',') : ''\\r\\n            const res = await this.$axios.post('admin/SystemSetup/updateInfo', Object.assign({}, data, { token: this.token, types: 1, province: isCheckedAll ? 1 : province }))\\r\\n            this.loading = false\\r\\n            if (res.data.code == 1) {\\r\\n              this.$message({ message: res.data.msg, type: 'success' })\\r\\n              this.addVisible = false\\r\\n              this.exportCode(this.listQuery)\\r\\n              this.init()\\r\\n\\r\\n            } else {\\r\\n              this.$message.error(res.data.msg)\\r\\n            }\\r\\n          } catch (error) {\\r\\n            this.loading = false\\r\\n            throw (error)\\r\\n          }\\r\\n        }\\r\\n      })\\r\\n    },\\r\\n    //设置 显示 隐藏\\r\\n    async Setup (row) {\\r\\n      try {\\r\\n        const res = await this.$axios.post('admin/SystemSetup/updateStatus', { token: this.token, id: row.id, status: row.status })\\r\\n        if (res.data.code == 1) {\\r\\n          this.$message({ message: res.data.msg, type: 'success' })\\r\\n          this.init()\\r\\n        } else {\\r\\n          this.$message.error(res.data.msg)\\r\\n        }\\r\\n      } catch (error) {\\r\\n        throw (error)\\r\\n      }\\r\\n    },\\r\\n    //激活码详情\\r\\n    async codeDetails (item) {\\r\\n      try {\\r\\n        this.codeVisible = true\\r\\n        this.currentCode = item\\r\\n        const res = await this.$axios.post(\\\"admin/SystemSetup/codeDetail\\\", { token: this.token, id: item.id, page: this.codePage })\\r\\n        this.codeList = res.data.data.list || []\\r\\n        this.codePageCount = res.data.data.rows || 1\\r\\n      } catch (error) {\\r\\n        throw (error)\\r\\n      }\\r\\n    },\\r\\n    //生成激活码\\r\\n    createCode (item, index) {\\r\\n      this.$confirm(`您确定要生成${item.num}个激活码吗?`, '提示', {\\r\\n        confirmButtonText: '确定',\\r\\n        cancelButtonText: '取消',\\r\\n        type: 'warning'\\r\\n      }).then(async () => {\\r\\n        try {\\r\\n          this.codeLoading[index] = true\\r\\n          const res = await this.$axios.post(\\\"admin/SystemSetup/createCode\\\", { token: this.token, id: item.id, num: item.num })\\r\\n          this.codeLoading[index] = false\\r\\n          if (res.data.code == 1) {\\r\\n            this.$message({ message: res.data.msg, type: \\\"success\\\" })\\r\\n            this.init()\\r\\n          } else {\\r\\n            this.$message.error(res.data.msg)\\r\\n          }\\r\\n        } catch (error) {\\r\\n          this.codeLoading[index] = false\\r\\n          throw (error)\\r\\n        }\\r\\n      }).catch(() => { });\\r\\n\\r\\n    },\\r\\n    //导出激活码\\r\\n    exportCode (item, manualExport) {\\r\\n      console.log(item)\\r\\n      window.location.href = `${this.baseURL}admin/Login/freeCode?id=${item.id}&name=${item.company}&num=${manualExport ? '' : Number(item.num) + (Number(this.cardNum) - Number(this.remainingNum))}`\\r\\n    },\\r\\n    erAuth () {  //权限匹配\\r\\n      var id = this.$route.query.id;\\r\\n      this.curId = id;\\r\\n\\r\\n      this.$axios.post('admin/Auth/erAuth', {\\r\\n        token: window.sessionStorage.getItem('bbytoken'),\\r\\n        id: id\\r\\n      })\\r\\n        .then(res => {\\r\\n          if (res.data.code == 1) {\\r\\n            var arr = res.data.data;\\r\\n            for (var i = 0; i < arr.length; i++) {\\r\\n              if (arr[i].son) {\\r\\n                if (arr[i].name == '免费保养设置') {\\r\\n                  this.seCurId = arr[i].id;\\r\\n                  this.threeAuthList = arr[i].son;\\r\\n                }\\r\\n                for (var j = 0; j < arr[i].son.length; j++) {\\r\\n                  if (arr[i].action != arr[i].son[j].action) {\\r\\n                    arr[i].action = arr[i].son[0].action;\\r\\n                  }\\r\\n                  if (arr[i].son[j].name == '领卡渠道' && arr[i].name == '免费保养设置') {\\r\\n                    this.thCurId = arr[i].son[j].id;\\r\\n                  }\\r\\n                }\\r\\n              }\\r\\n            }\\r\\n            this.authList = arr;\\r\\n          } else {\\r\\n            this.$alert(res.data.msg, '提示', { type: 'error' });\\r\\n          }\\r\\n        })\\r\\n        .catch(err => {\\r\\n          alert(err);\\r\\n        })\\r\\n    }\\r\\n  },\\r\\n  mounted () {\\r\\n    this.erAuth();\\r\\n    this.init();\\r\\n  },\\r\\n}\\r\\n</script>\\r\\n<style scoped>\\r\\n.ellipsis {\\r\\n  width: 150px;\\r\\n  overflow: hidden;\\r\\n  text-overflow: ellipsis;\\r\\n  display: -webkit-box;\\r\\n  -webkit-box-orient: vertical;\\r\\n  -webkit-line-clamp: 2;\\r\\n}\\r\\n.areaDetails {\\r\\n  max-height: 300px;\\r\\n  min-height: 100px;\\r\\n  overflow: auto;\\r\\n}\\r\\n.areaDetails .area {\\r\\n  padding: 10px 0;\\r\\n  border-bottom: 1px solid #cccccc;\\r\\n}\\r\\n.areaDetails .province {\\r\\n  font-size: 15px;\\r\\n  font-weight: 600;\\r\\n}\\r\\n.img {\\r\\n  width: 70px;\\r\\n  height: 70px;\\r\\n}\\r\\n.input {\\r\\n  width: 50%;\\r\\n}\\r\\n.laybox2 ul {\\r\\n  margin: 33px auto;\\r\\n  border-bottom: 1px dashed #04bbfc;\\r\\n}\\r\\n\\r\\n.laybox2 {\\r\\n  padding: 60px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.laybox2 li {\\r\\n  width: 300px;\\r\\n  text-align: left;\\r\\n  margin: 33px auto;\\r\\n}\\r\\n\\r\\n.t-c:after {\\r\\n  content: \\\"\\\";\\r\\n  display: block;\\r\\n  height: 0;\\r\\n  clear: both;\\r\\n}\\r\\n\\r\\n.bot > div {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\ndiv.bot {\\r\\n  margin: 45px auto 35px auto;\\r\\n  height: 100px;\\r\\n}\\r\\n\\r\\ndiv.bot span {\\r\\n  display: inline-block;\\r\\n  width: 20%;\\r\\n}\\r\\n\\r\\ndiv.bot input {\\r\\n  display: inline-block;\\r\\n  width: 55%;\\r\\n  outline: none;\\r\\n  border: none;\\r\\n  border-bottom: 1px solid #aaa;\\r\\n}\\r\\n\\r\\ndiv.bot button {\\r\\n  width: 110px;\\r\\n  height: 36px;\\r\\n  margin-left: -55px;\\r\\n  position: absolute;\\r\\n  border-radius: 18px;\\r\\n  box-shadow: 4px 0px 6px rgba(177, 42, 19, 0.2);\\r\\n  border: none;\\r\\n  color: #fff;\\r\\n  left: 50%;\\r\\n  top: 60px;\\r\\n}\\r\\n\\r\\nbutton.reject {\\r\\n  background: rgba(237, 81, 55, 1);\\r\\n  margin-right: 30%;\\r\\n}\\r\\n\\r\\nbutton.pass {\\r\\n  background-color: #20a0ff;\\r\\n}\\r\\n\\r\\n.left {\\r\\n  float: left;\\r\\n  width: 50%;\\r\\n}\\r\\n\\r\\n.right {\\r\\n  float: right;\\r\\n  width: 50%;\\r\\n}\\r\\n.nowrap {\\r\\n  width: 120px !important;\\r\\n  text-align: center;\\r\\n  white-space: nowrap; /*规定文本不换行**/\\r\\n  text-overflow: ellipsis; /**显示省略符号来代表被修剪的文本。*/\\r\\n  overflow: hidden;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n.regionDetail >>> .el-dialog__title {\\r\\n  font-size: 22px;\\r\\n}\\r\\n.regionDetail >>> .el-dialog__body {\\r\\n  padding: 0px 25px 30px;\\r\\n  border-top: solid 2px #eee;\\r\\n}\\r\\n\\r\\n>>> .el-dialog {\\r\\n  min-height: 300px;\\r\\n}\\r\\n</style>\\r\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/css-loader?{\"sourceMap\":true}!./node_modules/vue-loader/lib/style-compiler?{\"vue\":true,\"id\":\"data-v-1be22086\",\"scoped\":true,\"hasInlineConfig\":false}!./node_modules/vue-loader/lib/selector.js?type=styles&index=0!./src/pages/Setup/channel/Receipt.vue\n// module id = iOG8\n// module chunks = 6","require('../../modules/es6.object.keys');\nmodule.exports = require('../../modules/_core').Object.keys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/fn/object/keys.js\n// module id = jFbC\n// module chunks = 5 6","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/core-js/library/modules/_object-sap.js\n// module id = uqUo\n// module chunks = 5 6"],"sourceRoot":""}